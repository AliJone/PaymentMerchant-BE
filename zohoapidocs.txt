Introduction
The Zoho Invoice API allows you to perform all the operations that you do with our web client.

Zoho Invoice API is built using REST principles which ensures predictable URLs that makes writing applications easy. This API follows HTTP rules, enabling a wide range of HTTP clients which can be used to interact with the API.

Every resource is exposed as a URL. The URL of each resource can be obtained by accessing the API Root Endpoint.

The Organization ID and the Access token has to be sent as Header in the API.The JSON String has to be sent as form-data.

Server to server calls are only possible.


API Root Endpoint



https://www.zohoapis.com/invoice/v3
        
Organization ID
In Zoho Invoice, your business is termed as an organization. If you have multiple businesses, you simply set each of those up as an individual organization. Each organization is an independent Zoho Invoice Organization with it’s own organization ID, base currency, time zone, language, contacts, reports, etc.

The parameter organization_id along with the organization ID should be sent in with every API request to identify the organization.

The organization_id can be obtained from the GET /organizations API’s JSON response. Alternatively, it can be obtained from the Manage Organizations page in the admin console:

Login to the Zoho Invoice admin console. Click the drop down with organization’s name as the label and click Manage Organizations.

Request Example



$ curl https://www.zohoapis.com/invoice/v3/organizations
        
Response Example


{
  "code": 0,
  "message": "success",
  "organizations": [
    {
      "organization_id": "10234695",
      "name": "Zillum",
      "contact_name": "John Smith",
      "email": "johnsmith@zillum.com",
      "is_default_org": false,
      "language_code": "en",
      "fiscal_year_start_month": 0,
      "account_created_date": "2016-02-18",
      "time_zone": "PST",
      "is_org_active": true,
      "currency_id": "460000000000097",
      "currency_code": "USD",
      "currency_symbol": "$",
      "currency_format": "###,##0.00",
      "price_precision": 2
    },
    {...},
    {...}
  ]
}
        
Multiple Data Centers
Zoho Invoice is hosted at multiple data centers, and therefore available on different domains.

There are 8 different domains for Zoho Invoice' APIs, and you will have to use the one that is applicable to you.

Data Center	Domain	Base API URI
United States	.com	https://www.zohoapis.com/invoice/
Europe	.eu	https://www.zohoapis.eu/invoice/
India	.in	https://www.zohoapis.in/invoice/
Australia	.com.au	https://www.zohoapis.com.au/invoice/
Japan	.jp	https://www.zohoapis.jp/invoice/
Canada	.ca	https://www.zohoapis.ca/invoice/
China	.com.cn	https://www.zohoapis.com.cn/invoice/
Saudi Arabia	.sa	https://www.zohoapis.sa/invoice/
The APIs on this page are for organizations in Zoho Invoice that are hosted on the .com domain. If your organization is on a different domain, then you must replace .com with the appropriate domain for API endpoints on this page before using them.

Note: To know the domain you're accessing Zoho Invoice from, visit the Zoho Invoice web app and check its URL. If the URL contains invoice.zoho.com, then you're accessing it from the .com domain. If the URL contains books.zoho.in, you're accessing it from the .in domain. Similarly, you could be accessing Zoho Invoice from the .eu or .com.au or .jp or .ca domain.


For example, here's how you would modify the domain in an API endpoint for the .eu domain:

API endpoint for the .com domain, as available on this page:

https://www.zohoapis.com/invoice/v3/invoices
API endpoint after replacing the .com domain with .eu:

https://www.zohoapis.eu/invoice/v3/invoices
API Call Limit
API calls are limited to provide better quality of service and availability to all the users. You can make 100 requests per minute per organisation. The limits on total requests per day are listed below for each plan:

Free Plan - 1000 API requests/day


OAuth
Zoho REST APIs uses the OAuth 2.0 protocol to authorize and authenticate calls. It provides secure access to protect resources thereby reducing the hassle of asking for a username and password everytime a user logs in. Follow the steps listed here, to access Zoho’s APIs using OAuth 2.0

Note:The API URLs in this section should be modified, based on your domain.

Data Center	Domain	Base API URI
United States	.com	https://accounts.zoho.com/
Europe	.eu	https://accounts.zoho.eu/
India	.in	https://accounts.zoho.in/
Australia	.com.au	https://accounts.zoho.com.au/
Japan	.jp	https://accounts.zoho.jp/
Canada	.ca	https://accounts.zohocloud.ca/
You can read more about this here.

Step 1: Registering New Client
You will have to first register your application with Zoho's Developer console in order get your Client ID and Client Secret.

To register your application, go to https://accounts.zoho.com/developerconsole and click on Add Client ID. Provide the required details to register your application.

On successful registration, you will be provided with a set of OAuth 2.0 credentials such as a Client ID and Client Secret that are known to both Zoho and your application. Do not share this credentials anywhere.

Step 2: Generating Grant Token
Redirect to the following authorization URL with the given params

https://accounts.zoho.com/oauth/v2/auth?

Parameter	Description
scope *	SCOPE for which the token to be generated. Multiple scopes can be given which has to be separated by commas. Ex : ZohoInvoice.fullaccess.all
client_id *	Client ID obtained during Client Registration
state	An opaque string that is round-tripped in the protocol; ie., whatever value given to this will be passed back to you.
response_type *	code
redirect_uri *	One of the redirect URI given in above step. This param should be same redirect url mentioned while registering the Client
access_type	The allowed values are offline and online. The online access_type gives your application only the access_token which is valid for one hour. The offline access_type will give the application an access_token as well as a refresh_token. By default it is taken as online
prompt	Prompts for user consent each time your app tries to access user credentials. Ex: Consent
Note: Fields with * are mandatory

On this request, you will be shown with a "user consent page".

Upon clicking “Accept”, Zoho will redirect to the given redirect_uri with code and state param. This code value is mandatory to get the access token in the next step and this code is valid for 60 seconds.

On clicking “Deny”, the server returns an error

Method 2

Follow the below steps to generate grant token from the Client ID:

Go to https://accounts.zoho.com/developerconsole
Click the Overflow icon and select Self Client from the options.
Enter the scope and set the expiry time.
Click View Code to generate the code.
Request Example



https://accounts.zoho.com/oauth/v2/auth?
scope=ZohoInvoice.invoices.CREATE,ZohoInvoice.invoices.READ,ZohoInvoice.invoices.UPDATE,ZohoInvoice.invoices.DELETE&client_id=1000.0SRSxxxxxxxxxxxxxxxxxxxx239V&state=testing&response_type=code&redirect_uri=http://www.zoho.com/invoice&access_type=offline
          
Step 3: Generate Access and Refresh Token
After getting code from the above step, make a POST request for the following URL with given params, to generate the access_token.

https://accounts.zoho.com/oauth/v2/token?

Parameter	Description
code*	code which is obtained in the above step
client_id*	Client ID obtained during Client Registration
client_secret*	Secret key obtained during Client Registration
redirect_uri*	This param should be same redirect url mentioned while adding Client
grant_type*	authorization_code
Note: Fields with * are mandatory

In the response, you will get both access_token and refresh_token.

1. The access_token will expire after a particular period (as given in expires_in param in the response).

2. The refresh_token is permanent and will be used to regenerate new access_token, if the current access token is expired.

Note: Each time a re-consent page is accepted, a new refresh token is generated. The maximum limit is 20 refresh tokens per user. If this limit is crossed, the first refresh token is automatically deleted to accommodate the latest one. This is done irrespective of whether the first refresh token is in use or not.

2.Step 1, 2 and 3 are one time processes that you need to follow when you are accessing Zoho's API for the first time. From the next time, you can jump to step 4 and use the refresh_token to generate a new access_token.

Request Example



https://accounts.zoho.com/oauth/v2/token?code=1000.dd7exxxxxxxxxxxxxxxxxxxxxxxx9bb8.b6c0xxxxxxxxxxxxxxxxxxxxxxxxdca4&client_id=1000.0SRSxxxxxxxxxxxxxxxxxxxx239V&client_secret=fb01xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx8abf&redirect_uri=http://www.zoho.com/invoice&grant_type=authorization_code
        
Step 4: Generate Access Token From Refresh Token
Access Tokens have limited validity. In most general cases the access tokens expire in one hour. Until then, the access token has unlimited usage. Once it expires, your app will have to use the refresh token to request for a new access token. Redirect to the following POST URL with the given params to get a new access token

https://accounts.zoho.com/oauth/v2/token?

Parameter	Description
refresh_token	REFRESH TOKEN which is obtained in the above step
client_id	Client ID obtained during Client Registration
client_secret	Secret key obtained during Client Registration
redirect_uri	This param should be same redirect url mentioned while registering Client
grant_type	refresh_token
Request Example



https://accounts.zoho.com/oauth/v2/token?refresh_token=1000.8ecdxxxxxxxxxxxxxxxxxxxxxxxx5cb7.463xxxxxxxxxxxxxxxxxxxxxxxxebdc&client_id=1000.0SRSxxxxxxxxxxxxxxxxxxxx239V&client_secret=fb01xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx8abf&redirect_uri=http://www.zoho.com/invoice&grant_type=refresh_token
        
Step 5: Revoking a Refresh Token
To revoke a refresh token, call the following POST URL with the given params

https://accounts.zoho.com/oauth/v2/token/revoke?

Parameter	Description
token	REFRESH TOKEN which is to be revoked
Request Example



https://accounts.zoho.com/oauth/v2/token/revoke?token=1000.8ecdxxxxxxxxxxxxxxxxxxxxxxxx5cb7.4638xxxxxxxxxxxxxxxxxxxxxxxxebdc
        
Step 6: Calling An API
Access Token can be passed only in header and cannot be passed in the request param.

Header name should be Authorization
Header value should be Zoho-oauthtoken {access_token}
List of scopes available in Zoho Invoice :

Scope	Description
contacts	To access contacts related APIs
Availabe types: ZohoInvoice.contacts.Create, ZohoInvoice.contacts.UPDATE, ZohoInvoice.contacts.READ, ZohoInvoice.contacts.DELETE
settings	To access items, expense categories, users, taxes, currencies related APIs
Availabe types: ZohoInvoice.settings.Create, ZohoInvoice.settings.UPDATE, ZohoInvoice.settings.READ, ZohoInvoice.settings.DELETE
estimates	To access estimates related APIs
Availabe types: ZohoInvoice.estimates.Create, ZohoInvoice.estimates.UPDATE, ZohoInvoice.estimates.READ, ZohoInvoice.estimates.DELETE
invoices	To access invoices related APIs
Availabe types: ZohoInvoice.invoices.Create, ZohoInvoice.invoices.UPDATE, ZohoInvoice.invoices.READ, ZohoInvoice.invoices.DELETE
customerpayments	To access customer payments related APIs
Availabe types: ZohoInvoice.customerpayments.Create, ZohoInvoice.customerpayments.UPDATE, ZohoInvoice.customerpayments.READ, ZohoInvoice.customerpayments.DELETE
creditnotes	To access credit notes related APIs
Availabe types: ZohoInvoice.creditnotes.Create, ZohoInvoice.creditnotes.UPDATE, ZohoInvoice.creditnotes.READ, ZohoInvoice.creditnotes.DELETE
projects	To access projects related APIs
Availabe types: ZohoInvoice.projects.Create, ZohoInvoice.projects.UPDATE, ZohoInvoice.projects.READ, ZohoInvoice.projects.DELETE
expenses	To access expenses related APIs
Availabe types: ZohoInvoice.expenses.Create, ZohoInvoice.expenses.UPDATE, ZohoInvoice.expenses.READ, ZohoInvoice.expenses.DELETE




HTTP Methods
Zoho Invoice API uses appropriate HTTP verbs for every action.

Method	Description
GET	Used for retrieving resources.
POST	Used for creating resources and performing resource actions.
PUT	Used for updating resources.
DELETE	Used for deleting resources.
Using GET method, you can get the list of resources or details of a particular instance of a resource. To get a list of customers

Request Example



$ curl https://www.zohoapis.com/invoice/v3/contacts?organization_id=10234695
        
To get the details of a customer referred to by a specified customer_id

Request Example



$ curl https://www.zohoapis.com/invoice/v3/contacts/903000000000099?organization_id=10234695
        


Response
Responses will be in the JSON format.

Node Name	Description
code	Zoho Invoice error code. This will be zero for a success response and non-zero in case of an error.
message	Message for the invoked API.
resource name	Comprises the invoked API’s Data.


Other Formats
Certain APIs also support csv and pdf formats. The required response format needs to be specified in the respective request’s Accept header or accept query parameter.




















Date
All timestamps are returned in the ISO 8601 format - YYYY-MM-DDThh:mm:ssTZD.

Example: 2016-06-11T17:38:06-0700

Request Example



$ curl https://www.zohoapis.com/invoice/v3/invoices/7000000079426?organization_id=10234695
-H 'Accept: application/pdf'
        
OR

Request Example


 
$ curl https://www.zohoapis.com/invoice/v3/invoices/7000000079426?accept=pdf \
organization_id=10234695'
        
Response Structure

The response structure for the Invoice API follows the below format.

{
    "code" : 0,
    "message" : "success",
    "invoice" : {
        "invoice_id" : "..."
    }
}
        
Response Example


HTTP/1.1 200 OK
Content-Disposition: attachment; filename="INV-384.pdf"
Content-Type: application/pdf;charset=UTF-8
        



Errors
Zoho Invoice uses HTTP status codes to indicate success or failure of an API call. In general, status codes in the 2xx range means success, 4xx range means there was an error in the provided information, and those in the 5xx range indicate server side errors. Commonly used HTTP status codes are listed below.

HTTP Status Codes
Status Code	Description
200	
Success
The request was successfully completed.
201	
Created
The request was a success and one or more resources have been created.
400	
Bad request
The request cannot be performed. Usually because of malformed parameter or missing parameter.
401	
Unauthorized (Invalid AuthToken)
Request was rejected because of invalid AuthToken.
403	
Forbidden
The user does not have enough permission or possibly not an user of the respective organization to access the resource.
404	
URL Not Found
The URL you’ve sent is wrong. It’s possible that the resource you’ve requested has been moved to another URL.
405	
Method Not Allowed
The requested resource does not support the HTTP method used. For example, requesting List of all customers API with PUT as the HTTP method.
406	
Not Acceptable
The requested response type is not supported by the client.
429	
Too many requests
Too many requests within a certain time frame. To know more about api call limits, click here.
500	
Server error
Zoho Invoice server encountered an error which prevents it from fulfilling the request. Although this rarely happens, we recommend you to contact us at support@zohoinvoice.com if you receive this error.
Request Example


 
$ curl https://www.zohoapis.com/invoice/v3/invoices/700000007942?organization_id=10234695
        
Response Example


{
    "code": 0,
    "message": "Successfully created."
}
        
Response Example


{
    "code": 1002,
    "message": "Invoice does not exist."
} 
        
Response Example

 
{
    "code": 1000,
    "message": "Internal error"
}
        



Pagination
Zoho Invoice provides APIs to retrieve lists of contacts, plans and other resources - paginated to 200 items by default. The pagination information will be included in the list API response under the node name page_context.

By default first page will be listed. For navigating through pages, use the page parameter.
The per_page parameter can be used to set the number of records that you want to receive in response.
Request Example



$ curl https://www.zohoapis.com/invoice/v3/contacts?page=2&per_page=25
        
Response Example


{
    "code": 0,
    "message": "success",
    "contacts": [
            {...},
            {...}
    ],
    "page_context": {
        "page": 2,
        "per_page": 25,
        "has_more_page": false
    }
} 
        



Items
A product is the item offered for sale. It can be a commodity. Based on the type of your business, you can offer one or more goods.

Possible error codes:
Error Code	Message
1000	The item name already exist
2006	Item does not exist
2049	Items which are a part of other transactions cannot be deleted. Instead, mark them as inactive
2076	Product type cannot be changed for Items having transactions

End Points
POST  
/items
GET   
/items
PUT   
/items/{item_id}
GET   
/items/{item_id}
DELETE
/items/{item_id}
PUT   
/item/{item_id}/customfields
POST  
/items/{item_id}/active
POST  
/items/{item_id}/inactive
Attribute
item_id
string
Unique ID generated by the server for an item.
name
string
Name of the item. Maximum length of the name [100]
status
string
Status of the item. It can be active or inactive. It tells whether the Item is available for transactions.
description
string
Description for the item. Maximum characters to be used for describing the item [2000]
rate
double
Per unit price of an item.
unit
string
Quantifying the amount of an item, using a measurement unit.
tax_id
string
ID of the tax to be associated to the item.
tax_name
string
Name of te Tax Included
tax_percentage
string
Percent of the tax.
tax_type
string
Type of the tax.
sku
string
SKU or the Stock Keeping Unit value of an item, should be unique throughout the product
product_type
string
Specify the type of an item. It can be either goods or service
hsn_or_sac
string
🇮🇳 only
HSN Code
sat_item_key_code
string
🇲🇽 only
Add SAT Item Key Code for your goods/services. Download the CFDI Catalogs.
unitkey_code
string
🇲🇽 only
Add Unit Key Code for your goods/services. Download the CFDI Catalogs.
item_tax_preferences
array
Show Sub-Attributes arrow
custom_fields
array
Custom fields for an item.
Show Sub-Attributes arrow
Example

{
    "item_id": 903000000045027,
    "name": "Hard Drive",
    "status": "active",
    "description": "500GB",
    "rate": 120,
    "unit": "100GB",
    "tax_id": 982000000037049,
    "tax_name": "Sales Tax",
    "tax_percentage": "70%",
    "tax_type": "Service Tax",
    "sku": "s12345",
    "product_type": "goods",
    "hsn_or_sac": "string",
    "sat_item_key_code": "string",
    "unitkey_code": "string",
    "item_tax_preferences": [
        {
            "tax_id": 982000000037049,
            "tax_specification": "intra"
        }
    ],
    "custom_fields": [
        {
            "customfield_id": "46000000012845",
            "value": "Normal"
        }
    ]
}
Create an Item
Create a new item.
OAuth Scope : ZohoInvoice.settings.CREATE

Arguments
name
string
(Required)
Name of the item. Maximum length of the name [100]
rate
double
(Required)
Per unit price of an item.
description
string
Description for the item. Maximum characters to be used for describing the item [2000]
tax_id
string
ID of the tax to be associated to the item.
sku
string
SKU or the Stock Keeping Unit value of an item, should be unique throughout the product
product_type
string
Specify the type of an item. It can be either goods or service
is_taxable
boolean
🇺🇸 , 🇨🇦 , 🇮🇳 only
Boolean to track the taxability of the item.
tax_exemption_id
string
🇺🇸 , 🇨🇦 , 🇮🇳 only
ID of the tax exemption applied. Mandatory, if is_taxable is false.
hsn_or_sac
string
🇮🇳 only
HSN Code
sat_item_key_code
string
🇲🇽 only
Add SAT Item Key Code for your goods/services. Download the CFDI Catalogs.
unitkey_code
string
🇲🇽 only
Add Unit Key Code for your goods/services. Download the CFDI Catalogs.
item_tax_preferences
array
Show Sub-Attributes arrow
custom_fields
array
Custom fields for an item.
Show Sub-Attributes arrow
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/items \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "name": "Hard Drive",
    "rate": 120,
    "description": "500GB",
    "tax_id": 982000000037049,
    "sku": "s12345",
    "product_type": "goods",
    "is_taxable": true,
    "tax_exemption_id": "string",
    "hsn_or_sac": "string",
    "sat_item_key_code": "string",
    "unitkey_code": "string",
    "item_tax_preferences": [
        {
            "tax_id": 982000000037049,
            "tax_specification": "intra"
        }
    ],
    "custom_fields": [
        {
            "customfield_id": "46000000012845",
            "value": "Normal"
        }
    ]
}
Response Example

{
    "code": 0,
    "message": "The item has been added.",
    "item": {
        "item_id": 903000000045027,
        "name": "Hard Drive",
        "status": "active",
        "description": "500GB",
        "rate": 120,
        "unit": "100GB",
        "tax_id": 982000000037049,
        "tax_name": "Sales Tax",
        "tax_percentage": "70%",
        "tax_type": "Service Tax",
        "sku": "s12345",
        "product_type": "goods",
        "hsn_or_sac": "string",
        "sat_item_key_code": "string",
        "unitkey_code": "string",
        "item_tax_preferences": [
            {
                "tax_id": 982000000037049,
                "tax_specification": "intra"
            }
        ],
        "custom_fields": [
            {
                "customfield_id": "46000000012845",
                "value": "Normal"
            }
        ]
    }
}
List items
Get the list of all active items with pagination.
OAuth Scope : ZohoInvoice.settings.READ

Query Parameters
name
Search items by name. Maximum length [100]. Variants: name_startswith and name_contains
description
Search items by description. Maximum length [100]. Variants: description_startswith and description_contains
rate
Search items by rate. Variants: rate_less_than, rate_less_equals, rate_greater_than and rate_greater_equals
tax_id
Search items by tax id.
filter_by
Filter items by status. Allowed Values: Status.All, Status.Active and Status.Inactive
search_text
Search items by name or description. Maximum length [100]
sort_column
Sort items. Allowed Values: name, rate and tax_name
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/items \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "items": [
        {
            "item_id": 903000000045027,
            "name": "Hard Drive",
            "status": "active",
            "description": "500GB",
            "rate": 120,
            "unit": "100GB",
            "tax_id": 982000000037049,
            "tax_name": "Sales Tax",
            "tax_percentage": "70%",
            "tax_type": "Service Tax",
            "sku": "s12345",
            "product_type": "goods",
            "custom_fields": [
                {
                    "customfield_id": "46000000012845",
                    "value": "Normal"
                }
            ]
        },
        {...},
        {...}
    ]
}
Update an item
Update the details of an existing item.
OAuth Scope : ZohoInvoice.settings.UPDATE

Arguments
name
string
(Required)
Name of the item. Maximum length of the name [100]
rate
double
(Required)
Per unit price of an item.
description
string
Description for the item. Maximum characters to be used for describing the item [2000]
tax_id
string
ID of the tax to be associated to the item.
sku
string
SKU or the Stock Keeping Unit value of an item, should be unique throughout the product
product_type
string
Specify the type of an item. It can be either goods or service
is_taxable
boolean
🇺🇸 , 🇨🇦 , 🇮🇳 only
Boolean to track the taxability of the item.
tax_exemption_id
string
🇺🇸 , 🇨🇦 , 🇮🇳 only
ID of the tax exemption applied. Mandatory, if is_taxable is false.
hsn_or_sac
string
🇮🇳 only
HSN Code
sat_item_key_code
string
🇲🇽 only
Add SAT Item Key Code for your goods/services. Download the CFDI Catalogs.
unitkey_code
string
🇲🇽 only
Add Unit Key Code for your goods/services. Download the CFDI Catalogs.
item_tax_preferences
array
Show Sub-Attributes arrow
custom_fields
array
Custom fields for an item.
Show Sub-Attributes arrow
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/items/903000000045027 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "name": "Hard Drive",
    "rate": 120,
    "description": "500GB",
    "tax_id": 982000000037049,
    "sku": "s12345",
    "product_type": "goods",
    "is_taxable": true,
    "tax_exemption_id": "string",
    "hsn_or_sac": "string",
    "sat_item_key_code": "string",
    "unitkey_code": "string",
    "item_tax_preferences": [
        {
            "tax_id": 982000000037049,
            "tax_specification": "intra"
        }
    ],
    "custom_fields": [
        {
            "customfield_id": "46000000012845",
            "value": "Normal"
        }
    ]
}
Response Example

{
    "code": 0,
    "message": "Item details have been saved.",
    "item": {
        "item_id": 903000000045027,
        "name": "Hard Drive",
        "status": "active",
        "description": "500GB",
        "rate": 120,
        "unit": "100GB",
        "tax_id": 982000000037049,
        "tax_name": "Sales Tax",
        "tax_percentage": "70%",
        "tax_type": "Service Tax",
        "sku": "s12345",
        "product_type": "goods",
        "hsn_or_sac": "string",
        "sat_item_key_code": "string",
        "unitkey_code": "string",
        "item_tax_preferences": [
            {
                "tax_id": 982000000037049,
                "tax_specification": "intra"
            }
        ],
        "custom_fields": [
            {
                "customfield_id": "46000000012845",
                "value": "Normal"
            }
        ]
    }
}
Retrieve an item
Fetch details of an existing item.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/items/903000000045027 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "item": {
        "item_id": 903000000045027,
        "name": "Hard Drive",
        "status": "active",
        "description": "500GB",
        "rate": 120,
        "unit": "100GB",
        "tax_id": 982000000037049,
        "tax_name": "Sales Tax",
        "tax_percentage": "70%",
        "tax_type": "Service Tax",
        "sku": "s12345",
        "product_type": "goods",
        "hsn_or_sac": "string",
        "sat_item_key_code": "string",
        "unitkey_code": "string",
        "item_tax_preferences": [
            {
                "tax_id": 982000000037049,
                "tax_specification": "intra"
            }
        ],
        "custom_fields": [
            {
                "customfield_id": "46000000012845",
                "value": "Normal"
            }
        ]
    }
}
Delete an item
Delete an existing item. Items that are part of a transaction cannot be deleted.
OAuth Scope : ZohoInvoice.settings.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/items/903000000045027 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The item has been deleted."
}
Update custom field in existing items
Update the value of the custom field in existing items.
OAuth Scope : ZohoInvoice.settings.UPDATE

Arguments
customfield_id
long
value
string
Value of the Custom Field
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/item/45667789900/customfields \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


[
    {
        "customfield_id": "46000000012845",
        "value": "Normal"
    }
]
Response Example

{
    "code": 0,
    "message": "Custom Fields Updated Successfully"
}
Mark as active
Mark an inactive item as active.
OAuth Scope : ZohoInvoice.settings.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/items/903000000045027/active \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The item has been marked Active."
}
Mark as inactive
Mark an active item as inactive.
OAuth Scope : ZohoInvoice.settings.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/items/903000000045027/inactive \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The item has been marked Inactive."
}




Price Lists
Price list is a list containing a set of different prices for the items you sell.

End Points
POST  
/pricebooks
GET   
/pricebooks
PUT   
/pricebooks/{pricebook_id}
GET   
/pricebooks/{pricebook_id}
DELETE
/pricebooks/{pricebook_id}
Attribute
pricebook_id
string
Unique ID generated by the server for a price list.
name
string
Name of the price list. Maximum length of the name [100]
description
string
Description for the price list. Maximum characters to be used for describing the price list [2000]
currency_id
string
A unique ID for the currency.
currency_code
string
A unique code for the currency. Maximum length [100]
pricebook_items
array
Items of a price book. It is mandatory for the price list type "per_item".
Show Sub-Attributes arrow
status
string
Status of the price list. It can be active or inactive. It tells whether the Item is available for transactions.
is_default
boolean
Is default.
pricebook_type
string
Type of the Pricebook. Allowed Values fixed_percentage, per_item
is_increase
boolean
Markup or Markdown the item rates by a percentage. Allowed Values true, false
rounding_type
string
Type of the Rounding type. Allowed Values no_rounding, round_to_dollar_minus_01, round_to_half_dollar, round_to_half_dollar_minus_01 and round_to_dollar
sales_or_purchase_type
string
Sales Type.
Example

{
    "pricebook_id": 1152891000000265000,
    "name": "Price List Per Item",
    "description": "checktest",
    "currency_id": 982000000004012,
    "currency_code": "INR",
    "pricebook_items": [
        {
            "item_id": 982000000030049,
            "pricebook_rate": 120
        }
    ],
    "status": "active",
    "is_default": false,
    "pricebook_type": "per_item",
    "is_increase": false,
    "rounding_type": "no_rounding",
    "sales_or_purchase_type": "sales"
}
Create a Price List
Create a new Price List.
OAuth Scope : ZohoInvoice.settings.CREATE

Arguments
name
string
(Required)
Name of the price list. Maximum length of the name [100]
pricebook_items
array
Items of a price book. It is mandatory for the price list type "per_item".
Show Sub-Attributes arrow
currency_id
string
A unique ID for the currency.
pricebook_type
string
(Required)
Type of the Pricebook. Allowed Values fixed_percentage, per_item
is_increase
boolean
(Required)
Markup or Markdown the item rates by a percentage. Allowed Values true, false
rounding_type
string
(Required)
Type of the Rounding type. Allowed Values no_rounding, round_to_dollar_minus_01, round_to_half_dollar, round_to_half_dollar_minus_01 and round_to_dollar
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/pricebooks \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "name": "Price List Per Item",
    "pricebook_items": [
        {
            "item_id": 982000000030049,
            "pricebook_rate": 120
        }
    ],
    "currency_id": 982000000004012,
    "pricebook_type": "per_item",
    "is_increase": false,
    "rounding_type": "no_rounding"
}
Response Example

{
    "code": 0,
    "message": "Price list has been created.",
    "pricebook": {
        "pricebook_id": 1152891000000265000,
        "name": "Price List Per Item",
        "description": "checktest",
        "currency_id": 982000000004012,
        "currency_code": "INR",
        "pricebook_items": [
            {
                "item_id": 982000000030049,
                "pricebook_rate": 120
            }
        ],
        "status": "active",
        "is_default": false,
        "pricebook_type": "per_item",
        "is_increase": false,
        "rounding_type": "no_rounding",
        "sales_or_purchase_type": "sales"
    }
}
List of all the Price Lists
Get the list of all the Price Lists with pagination.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/pricebooks \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "pricebooks": [
        {
            "pricebook_id": 1152891000000265000,
            "name": "Price List Per Item",
            "description": "checktest",
            "currency_id": 982000000004012,
            "currency_code": "INR",
            "pricebook_items": [
                {
                    "item_id": 982000000030049,
                    "pricebook_rate": 120
                }
            ],
            "status": "active",
            "is_default": false,
            "pricebook_type": "per_item",
            "is_increase": false,
            "rounding_type": "no_rounding",
            "sales_or_purchase_type": "sales"
        },
        {...},
        {...}
    ]
}
Update a Price List
Update an existing Price List.
OAuth Scope : ZohoInvoice.settings.UPDATE

Arguments
name
string
(Required)
Name of the price list. Maximum length of the name [100]
currency_id
string
A unique ID for the currency.
pricebook_type
string
(Required)
Type of the Pricebook. Allowed Values fixed_percentage, per_item
is_increase
boolean
(Required)
Markup or Markdown the item rates by a percentage. Allowed Values true, false
rounding_type
string
(Required)
Type of the Rounding type. Allowed Values no_rounding, round_to_dollar_minus_01, round_to_half_dollar, round_to_half_dollar_minus_01 and round_to_dollar
pricebook_items
array
Items of a price book. It is mandatory for the price list type "per_item".
Show Sub-Attributes arrow
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/pricebooks/1152891000000265000 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "name": "Price List Per Item",
    "currency_id": 982000000004012,
    "pricebook_type": "per_item",
    "is_increase": false,
    "rounding_type": "no_rounding",
    "pricebook_items": [
        {
            "item_id": 982000000030049,
            "pricebook_rate": 120
        }
    ]
}
Response Example

{
    "code": 0,
    "message": "Price list has been updated.",
    "pricebook": {
        "pricebook_id": 1152891000000265000,
        "name": "Price List Per Item",
        "description": "checktest",
        "currency_id": 982000000004012,
        "currency_code": "INR",
        "pricebook_items": [
            {
                "item_id": 982000000030049,
                "pricebook_rate": 120
            }
        ],
        "status": "active",
        "is_default": false,
        "pricebook_type": "per_item",
        "is_increase": false,
        "rounding_type": "no_rounding",
        "sales_or_purchase_type": "sales"
    }
}
Retrieve a Price list
Fetch the details of an existing Price List.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/pricebooks/1152891000000265000 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "pricebook": {
        "pricebook_id": 1152891000000265000,
        "name": "Price List Per Item",
        "description": "checktest",
        "currency_id": 982000000004012,
        "currency_code": "INR",
        "pricebook_items": [
            {
                "item_id": 982000000030049,
                "pricebook_rate": 120
            }
        ],
        "status": "active",
        "is_default": false,
        "pricebook_type": "per_item",
        "is_increase": false,
        "rounding_type": "no_rounding",
        "sales_or_purchase_type": "sales"
    }
}
Delete a Price List
Delete a Price List.
OAuth Scope : ZohoInvoice.settings.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/pricebooks/1152891000000265000 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Price list has been deleted."
}




Contacts
A contact is either a customer or vendor. A contact can be an individual or a business in general.

Possible error codes:
Error Code	Message
1002	Contact does not exist
3000	This contact cannot be deleted since you have recorded transactions for it
3013	Enter a valid Contact Name
3062	The contact already exists.Please specify a different name
9004	This currency does not exist. Please choose a valid currency
31006	Portal is disabled for your organization. Please contact support@zohoinvoice.com to enable it

End Points
POST  
/contacts
GET   
/contacts
PUT   
/contacts/{contact_id}
GET   
/contacts/{contact_id}
DELETE
/contacts/{contact_id}
POST  
/contacts/{contact_id}/active
POST  
/contacts/{contact_id}/inactive
POST  
/contacts/{contact_id}/portal/enable
GET   
/clientreviews
GET   
/clientreviews/{comment_id}
POST  
/clientreviews/{comment_id}/comment
POST  
/contacts/{contact_id}/paymentreminder/enable
POST  
/contacts/{contact_id}/paymentreminder/disable
POST  
/contacts/{contact_id}/statements/email
GET   
/contacts/{contact_id}/statements/email
POST  
/contacts/{contact_id}/email
GET   
/contacts/{contact_id}/comments
POST  
/contacts/{contact_id}/address
GET   
/contacts/{contact_id}/address
PUT   
/contacts/{contact_id}/address/{address_id}
DELETE
/contacts/{contact_id}/address/{address_id}
GET   
/contacts/{contact_id}/refunds
Attribute
contact_id
string
Contact ID of the contact
contact_name
string
Name of the contact. This can be the name of an organisation or the name of an individual. Maximum length [200]
company_name
string
Name of the conact's company. Maximum length [200]
has_transaction
boolean
Boolean to check if the customer has a history of transaction
contact_type
string
Type of the contact. Whether he is a customer or vendor
is_taxable
boolean
🇮🇳 , 🇺🇸 , 🇨🇦 , 🇲🇽 only
Boolean to track the taxability of the customer.
tax_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
ID of the tax or tax group that can be collected from the contact. Tax can be given only if is_taxable is true.
tds_tax_id
string
🇲🇽 only
ID of the TDS tax.
tax_name
string
🇮🇳 only
Enter tax name
tax_percentage
double
Enter tax percentage.
tax_authority_id
string
🇺🇸 , 🇨🇦 only
ID of the tax authority. Tax authority depends on the location of the customer. For example, if the customer is located in NY, then the tax authority is NY tax authority.
tax_exemption_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
ID of the tax exemption.
tax_authority_name
string
Enter tax authority name.
tax_exemption_code
string
🇺🇸 , 🇨🇦 , 🇦🇺 , 🇮🇳 only
Enter tax exemption code
place_of_contact
string
🇮🇳 only
Location of the contact. (This node identifies the place of supply and source of supply when invoices/bills are raised for the customer/vendor respectively. This is not applicable for Overseas contacts)
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer/vendor.
vat_treatment
string
🇬🇧 only
VAT treatment of the contact.Allowed Values:
uk (A business that is located in the UK.),
eu_vat_registered (A business that is reg for VAT and trade goods between Northern Ireland and EU. This node is available only for organizations enabled for NI protocal in VAT Settings.) and
overseas (A business that is located outside UK. Pre Brexit, this was split as eu_vat_registered, eu_vat_not_registered and non_eu ).
tax_treatment
string
🇲🇽 only
VAT treatment of the contact.Allowed Values:
home_country_mexico (A business that is located within MX)
border_region_mexico (A business that is located in the northern and southern border regions in MX)
non_mexico (A business that is located outside MX).
tax_regime
string
🇲🇽 only
Tax Regime of the contact.Allowed Values: general_legal_person, legal_entities_non_profit, resident_abroad, production_cooperative_societies, agricultural_livestock, optional_group_of_companies, coordinated, simplified_trust, wages_salaries_income, lease, property_disposal_acquisition, other_income, resident_abroad, divident_income, individual_business_professional, interest_income, income_obtaining_price, no_tax_obligation, tax_incorporation, income_through_technology_platform, simplified_trust.
legal_name
string
🇲🇽 only
Legal Name of the contact.
is_tds_registered
boolean
🇲🇽 only
Boolean to check if tax is registered.
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
is_linked_with_zohocrm
boolean
To check if the customer account is linked to the crm
website
string
Website of the contact.
primary_contact_id
string
Primary contact ID for a contact. This can be a contact person's ID as well.
payment_terms
integer
Net payment term for the customer.
payment_terms_label
string
Label for the paymet due details.
currency_id
string
Currency ID of the customer's currency.
currency_code
string
Currency code of the currency in which the customer wants to pay. If currency_code is not specified here, the currency chosen in your Zoho Subscriptions organization will be used for billing. currency_id and currency_symbol are set automatically in accordance to the currency_code.
currency_symbol
string
Symbol of the currency of the contact_type
language_code
string
language of a contact. allowed values de,en,es,fr,it,ja,nl,pt,sv,zh
outstanding_receivable_amount
integer
Outsatnding amount with the contact, which is due for receipt
outstanding_receivable_amount_bcy
integer
outstanding receivable in base currency
unused_credits_receivable_amount
integer
Our Unused credits with the vendor which is receivable
unused_credits_receivable_amount_bcy
integer
receivable unused credits in base currency
status
string
The status of the contact.
payment_reminder_enabled
boolean
To check if a payment reminder service is enabled for the contact
custom_fields
array
Custom fields or Additional of the contact which we can create to add more information.
Show Sub-Attributes arrow
billing_address
object
Billing address of the contact.
Show Sub-Attributes arrow
shipping_address
object
Customer's shipping address to which the goods must be delivered.
Show Sub-Attributes arrow
facebook
string
Facebook profile account of the contact. Maximum length [100]
twitter
string
Twitter account of the contact. Maximum length [100]
contact_persons
array
Person/Individual who represents a company
Show Sub-Attributes arrow
default_templates
object
Show Sub-Attributes arrow
notes
string
Commennts about the payment made by the contact.
created_time
string
Time at which the contact was created.
last_modified_time
string
Time at which the contact was last modified
Example

{
    "contact_id": 460000000026049,
    "contact_name": "Bowman and Co",
    "company_name": "Bowman and Co",
    "has_transaction": true,
    "contact_type": "customer",
    "is_taxable": true,
    "tax_id": 11149000000061058,
    "tds_tax_id": "982000000557012",
    "tax_name": "CGST",
    "tax_percentage": 12,
    "tax_authority_id": 11149000000061052,
    "tax_exemption_id": 11149000000061054,
    "tax_authority_name": "string",
    "tax_exemption_code": "string",
    "place_of_contact": "TN",
    "gst_no": "22AAAAA0000A1Z5",
    "vat_treatment": "string",
    "tax_treatment": "string",
    "tax_regime": "general_legal_person",
    "legal_name": "ESCUELA KEMPER URGATE",
    "is_tds_registered": true,
    "gst_treatment": "business_gst",
    "is_linked_with_zohocrm": false,
    "website": "www.zylker.org",
    "primary_contact_id": 460000000026051,
    "payment_terms": 15,
    "payment_terms_label": "Net 15",
    "currency_id": 460000000000097,
    "currency_code": "USD",
    "currency_symbol": "$",
    "language_code": "en",
    "outstanding_receivable_amount": 250,
    "outstanding_receivable_amount_bcy": 250,
    "unused_credits_receivable_amount": 1369.66,
    "unused_credits_receivable_amount_bcy": 1369.66,
    "status": "active",
    "payment_reminder_enabled": true,
    "custom_fields": [
        {
            "value": "GBGD078",
            "index": 1,
            "label": "VAT ID"
        }
    ],
    "billing_address": {
        "attention": "Mr.John",
        "address": "4900 Hopyard Rd, Suite 310",
        "street2": "Suite 310",
        "state_code": "CA",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": 1234,
        "phone": "1234"
    },
    "shipping_address": {
        "attention": "Mr.John",
        "address": "4900 Hopyard Rd, Suite 310",
        "street2": "Suite 310",
        "state_code": "CA",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": 1234,
        "phone": "1234"
    },
    "facebook": "zoho",
    "twitter": "zoho",
    "contact_persons": [
        {
            "salutation": "Mr",
            "first_name": "Will",
            "last_name": "Smith",
            "email": "test@zylker.org",
            "phone": "1234",
            "mobile": "1234",
            "is_primary_contact": true
        }
    ],
    "default_templates": {
        "invoice_template_id": 460000000052069,
        "invoice_template_name": "Custom Classic",
        "estimate_template_id": 460000000000179,
        "estimate_template_name": "Service - Professional",
        "creditnote_template_id": 460000000000211,
        "creditnote_template_name": "Fixed Cost - Professional",
        "invoice_email_template_id": 460000000052071,
        "invoice_email_template_name": "Custom Invoice Notification",
        "estimate_email_template_id": 460000000052073,
        "estimate_email_template_name": "Custom Estimate Notification",
        "creditnote_email_template_id": 460000000052075,
        "creditnote_email_template_name": "Custom Credit Note Notification"
    },
    "notes": "Payment option : Through check",
    "created_time": "2013-10-07T12:06:10+0530",
    "last_modified_time": "2013-11-08T18:24:51+0530"
}
Create a Contact
Create a contact with given information.
OAuth Scope : ZohoInvoice.contacts.CREATE

Arguments
contact_name
string
(Required)
Name of the contact. This can be the name of an organisation or the name of an individual. Maximum length [200]
company_name
string
Name of the conact's company. Maximum length [200]
payment_terms
integer
Net payment term for the customer.
currency_id
string
Currency ID of the customer's currency.
website
string
Website of the contact.
custom_fields
array
Custom fields or additional fields for the contact.
Show Sub-Attributes arrow
billing_address
object
Billing address of the contact.
Show Sub-Attributes arrow
shipping_address
object
Customer's shipping address to which the goods must be delivered.
Show Sub-Attributes arrow
contact_persons
array
Person/Individual who represents a company
Show Sub-Attributes arrow
default_templates
object
Show Sub-Attributes arrow
language_code
string
language of a contact. allowed values de,en,es,fr,it,ja,nl,pt,sv,zh
notes
string
Commennts about the payment made by the contact.
vat_reg_no
string
🇬🇧 , Avalara Integration only
For UK Edition: VAT Registration number of a contact with length should be between 2 and 12 characters.
For Avalara: If you are doing sales in the European Union (EU) then provide VAT Registration Number of your customers here. This is used to calculate VAT for B2B sales, from Avalara.
tax_reg_no
string
🇲🇽 only
12 digit Tax Registration number of a contact with Tax treatment as
home_country_mexico, border_region_mexico, non_mexico.
Consumers generic RFC: XAXX010101000, Overseas generic RFC: XEXX010101000
country_code
string
🇬🇧 , Avalara Integration only
For UK Edition: Two letter country code of a contact
For Avalara: Two letter country code for the customer country, if your customer is not in US. Refer [AvaTax Codes for Countries and States][2].
vat_treatment
string
🇬🇧 only
VAT treatment of the contact.Allowed Values:
uk (A business that is located in the UK.),
eu_vat_registered (A business that is reg for VAT and trade goods between Northern Ireland and EU. This node is available only for organizations enabled for NI protocal in VAT Settings.) and
overseas (A business that is located outside UK. Pre Brexit, this was split as eu_vat_registered, eu_vat_not_registered and non_eu ).
tax_treatment
string
🇲🇽 only
VAT treatment of the contact.Allowed Values:
home_country_mexico (A business that is located within MX)
border_region_mexico (A business that is located in the northern and southern border regions in MX)
non_mexico (A business that is located outside MX).
tax_regime
string
🇲🇽 only
Tax Regime of the contact.Allowed Values: general_legal_person, legal_entities_non_profit, resident_abroad, production_cooperative_societies, agricultural_livestock, optional_group_of_companies, coordinated, simplified_trust, wages_salaries_income, lease, property_disposal_acquisition, other_income, resident_abroad, divident_income, individual_business_professional, interest_income, income_obtaining_price, no_tax_obligation, tax_incorporation, income_through_technology_platform, simplified_trust.
legal_name
string
🇲🇽 only
Legal Name of the contact.
is_tds_registered
boolean
🇲🇽 only
Boolean to check if tax is registered.
place_of_contact
string
🇮🇳 only
Location of the contact. (This node identifies the place of supply and source of supply when invoices/bills are raised for the customer/vendor respectively. This is not applicable for Overseas contacts)
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer/vendor.
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_authority_name
string
Enter tax authority name.
tax_exemption_code
string
🇺🇸 , 🇨🇦 , 🇦🇺 , 🇮🇳 only
Enter tax exemption code
avatax_exempt_no
string
Avalara Integration only
Exemption certificate number of the customer.
avatax_use_code
string
Avalara Integration only
Used to group like customers for exemption purposes. It is a custom value that links customers to a tax rule. Select from Avalara [standard codes][1] or enter a custom code.
tax_exemption_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
ID of the tax exemption.
tax_authority_id
string
🇺🇸 , 🇨🇦 only
ID of the tax authority. Tax authority depends on the location of the customer. For example, if the customer is located in NY, then the tax authority is NY tax authority.
tax_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
ID of the tax or tax group that can be collected from the contact. Tax can be given only if is_taxable is true.
tds_tax_id
string
🇲🇽 only
ID of the TDS tax.
is_taxable
boolean
🇮🇳 , 🇺🇸 , 🇨🇦 , 🇲🇽 only
Boolean to track the taxability of the customer.
facebook
string
Facebook profile account of the contact. Maximum length [100]
twitter
string
Twitter account of the contact. Maximum length [100]
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/contacts \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "contact_name": "Bowman and Co",
    "company_name": "Bowman and Co",
    "payment_terms": 15,
    "currency_id": 460000000000097,
    "website": "www.zylker.org",
    "custom_fields": [
        {
            "value": "GBGD078",
            "index": 1
        }
    ],
    "billing_address": {
        "attention": "Mr.John",
        "address": "4900 Hopyard Rd, Suite 310",
        "street2": "Suite 310",
        "state_code": "CA",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": 1234,
        "phone": "1234"
    },
    "shipping_address": {
        "attention": "Mr.John",
        "address": "4900 Hopyard Rd, Suite 310",
        "street2": "Suite 310",
        "state_code": "CA",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": 1234,
        "phone": "1234"
    },
    "contact_persons": [
        {
            "salutation": "Mr",
            "first_name": "Will",
            "last_name": "Smith",
            "email": "test@zylker.org",
            "phone": "1234",
            "mobile": "1234",
            "is_primary_contact": true
        }
    ],
    "default_templates": {
        "invoice_template_id": 460000000052069,
        "invoice_template_name": "Custom Classic",
        "estimate_template_id": 460000000000179,
        "estimate_template_name": "Service - Professional",
        "creditnote_template_id": 460000000000211,
        "creditnote_template_name": "Fixed Cost - Professional",
        "invoice_email_template_id": 460000000052071,
        "invoice_email_template_name": "Custom Invoice Notification",
        "estimate_email_template_id": 460000000052073,
        "estimate_email_template_name": "Custom Estimate Notification",
        "creditnote_email_template_id": 460000000052075,
        "creditnote_email_template_name": "Custom Credit Note Notification"
    },
    "language_code": "en",
    "notes": "Payment option : Through check",
    "vat_reg_no": "string",
    "tax_reg_no": 12345678912345,
    "country_code": "string",
    "vat_treatment": "string",
    "tax_treatment": "string",
    "tax_regime": "general_legal_person",
    "legal_name": "ESCUELA KEMPER URGATE",
    "is_tds_registered": true,
    "place_of_contact": "TN",
    "gst_no": "22AAAAA0000A1Z5",
    "gst_treatment": "business_gst",
    "tax_authority_name": "string",
    "tax_exemption_code": "string",
    "avatax_exempt_no": "string",
    "avatax_use_code": "string",
    "tax_exemption_id": 11149000000061054,
    "tax_authority_id": 11149000000061052,
    "tax_id": 11149000000061058,
    "tds_tax_id": "982000000557012",
    "is_taxable": true,
    "facebook": "zoho",
    "twitter": "zoho"
}
Response Example

{
    "code": 0,
    "message": "The Contact has been created",
    "contact": {
        "contact_id": 460000000026049,
        "contact_name": "Bowman and Co",
        "company_name": "Bowman and Co",
        "has_transaction": true,
        "contact_type": "customer",
        "is_taxable": true,
        "tax_id": 11149000000061058,
        "tds_tax_id": "982000000557012",
        "tax_name": "CGST",
        "tax_percentage": 12,
        "tax_authority_id": 11149000000061052,
        "tax_exemption_id": 11149000000061054,
        "tax_authority_name": "string",
        "tax_exemption_code": "string",
        "place_of_contact": "TN",
        "gst_no": "22AAAAA0000A1Z5",
        "vat_treatment": "string",
        "tax_treatment": "string",
        "tax_regime": "general_legal_person",
        "legal_name": "ESCUELA KEMPER URGATE",
        "is_tds_registered": true,
        "gst_treatment": "business_gst",
        "is_linked_with_zohocrm": false,
        "website": "www.zylker.org",
        "primary_contact_id": 460000000026051,
        "payment_terms": 15,
        "payment_terms_label": "Net 15",
        "currency_id": 460000000000097,
        "currency_code": "USD",
        "currency_symbol": "$",
        "language_code": "en",
        "outstanding_receivable_amount": 250,
        "outstanding_receivable_amount_bcy": 250,
        "unused_credits_receivable_amount": 1369.66,
        "unused_credits_receivable_amount_bcy": 1369.66,
        "status": "active",
        "payment_reminder_enabled": true,
        "custom_fields": [
            {
                "value": "GBGD078",
                "index": 1,
                "label": "VAT ID"
            }
        ],
        "billing_address": {
            "attention": "Mr.John",
            "address": "4900 Hopyard Rd, Suite 310",
            "street2": "Suite 310",
            "state_code": "CA",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234,
            "phone": "1234"
        },
        "shipping_address": {
            "attention": "Mr.John",
            "address": "4900 Hopyard Rd, Suite 310",
            "street2": "Suite 310",
            "state_code": "CA",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234,
            "phone": "1234"
        },
        "facebook": "zoho",
        "twitter": "zoho",
        "contact_persons": [
            {
                "salutation": "Mr",
                "first_name": "Will",
                "last_name": "Smith",
                "email": "test@zylker.org",
                "phone": "1234",
                "mobile": "1234",
                "is_primary_contact": true
            }
        ],
        "default_templates": {
            "invoice_template_id": 460000000052069,
            "invoice_template_name": "Custom Classic",
            "estimate_template_id": 460000000000179,
            "estimate_template_name": "Service - Professional",
            "creditnote_template_id": 460000000000211,
            "creditnote_template_name": "Fixed Cost - Professional",
            "invoice_email_template_id": 460000000052071,
            "invoice_email_template_name": "Custom Invoice Notification",
            "estimate_email_template_id": 460000000052073,
            "estimate_email_template_name": "Custom Estimate Notification",
            "creditnote_email_template_id": 460000000052075,
            "creditnote_email_template_name": "Custom Credit Note Notification"
        },
        "notes": "Payment option : Through check",
        "created_time": "2013-10-07T12:06:10+0530",
        "last_modified_time": "2013-11-08T18:24:51+0530"
    }
}
List Contacts
List all contacts with pagination.
OAuth Scope : ZohoInvoice.contacts.READ

Query Parameters
contact_name
Search contacts by contact name. Maximum length [100] Variants: contact_name_startswith and contact_name_contains. Maximum length [100]
company_name
Search contacts by company name. Maximum length [100] Variants: company_name_startswith and company_name_contains
first_name
Search contacts by first name of the contact person. Maximum length [100] Variants: first_name_startswith and first_name_contains
last_name
Search contacts by last name of the contact person. Maximum length [100] Variants: last_name_startswith and last_name_contains
address
Search contacts by any of the address fields. Maximum length [100] Variants: address_startswith and address_contains
email
Search contacts by email id of the contact person. Maximum length [100] Variants: address_startswith and address_contains
phone
Search contacts by phone number of the contact person. Maximum length [100] Variants: phone_startswith and phone_contains
filter_by
Filter contacts by status. Allowed Values: Status.All, Status.Active, Status.Inactive, Status.Duplicate and Status.Crm
search_text
Search contacts by contact name or notes. Maximum length [100]
sort_column
Sort contacts. Allowed Values: contact_name, first_name, last_name, email, outstanding_receivable_amount, created_time and last_modified_time
zcrm_contact_id
CRM Contact ID for the contact.
zcrm_account_id
CRM Account ID for the contact.
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/contacts \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "contacts": [
        {
            "contact_id": 460000000026049,
            "contact_name": "Bowman and Co",
            "company_name": "Bowman and Co",
            "contact_type": "customer",
            "status": "active",
            "payment_terms": 15,
            "payment_terms_label": "Net 15",
            "currency_id": 460000000000097,
            "currency_code": "USD",
            "outstanding_receivable_amount": 250,
            "unused_credits_receivable_amount": 1369.66,
            "first_name": "Will",
            "last_name": "Smith",
            "email": "test@zylker.org",
            "phone": "1234",
            "mobile": "1234",
            "created_time": "2013-10-07T12:06:10+0530",
            "last_modified_time": "2013-11-08T18:24:51+0530"
        },
        {...},
        {...}
    ]
}
Update a Contact
Update an existing contact. To delete a contact person remove it from the contact_persons list.
OAuth Scope : ZohoInvoice.contacts.UPDATE

Arguments
contact_name
string
(Required)
Name of the contact. This can be the name of an organisation or the name of an individual. Maximum length [200]
company_name
string
Name of the conact's company. Maximum length [200]
payment_terms
integer
Net payment term for the customer.
currency_id
string
Currency ID of the customer's currency.
website
string
Website of the contact.
custom_fields
array
Custom fields or Additional of the contact which we can create to add more information.
Show Sub-Attributes arrow
billing_address
object
Billing address of the contact.
Show Sub-Attributes arrow
shipping_address
object
Customer's shipping address to which the goods must be delivered.
Show Sub-Attributes arrow
contact_persons
array
Person/Individual who represents a company
Show Sub-Attributes arrow
default_templates
object
Show Sub-Attributes arrow
language_code
string
language of a contact. allowed values de,en,es,fr,it,ja,nl,pt,sv,zh
notes
string
Commennts about the payment made by the contact.
vat_reg_no
string
🇬🇧 , Avalara Integration only
For UK Edition: VAT Registration number of a contact with length should be between 2 and 12 characters.
For Avalara: If you are doing sales in the European Union (EU) then provide VAT Registration Number of your customers here. This is used to calculate VAT for B2B sales, from Avalara.
tax_reg_no
string
🇲🇽 only
12 digit Tax Registration number of a contact with Tax treatment as
home_country_mexico, border_region_mexico, non_mexico.
Consumers generic RFC: XAXX010101000, Overseas generic RFC: XEXX010101000
country_code
string
🇬🇧 , Avalara Integration only
For UK Edition: Two letter country code of a contact
For Avalara: Two letter country code for the customer country, if your customer is not in US. Refer [AvaTax Codes for Countries and States][2].
vat_treatment
string
🇬🇧 only
VAT treatment of the contact.Allowed Values:
uk (A business that is located in the UK.),
eu_vat_registered (A business that is reg for VAT and trade goods between Northern Ireland and EU. This node is available only for organizations enabled for NI protocal in VAT Settings.) and
overseas (A business that is located outside UK. Pre Brexit, this was split as eu_vat_registered, eu_vat_not_registered and non_eu ).
tax_treatment
string
🇲🇽 only
VAT treatment of the contact.Allowed Values:
home_country_mexico (A business that is located within MX)
border_region_mexico (A business that is located in the northern and southern border regions in MX)
non_mexico (A business that is located outside MX).
tax_regime
string
🇲🇽 only
Tax Regime of the contact.Allowed Values: general_legal_person, legal_entities_non_profit, resident_abroad, production_cooperative_societies, agricultural_livestock, optional_group_of_companies, coordinated, simplified_trust, wages_salaries_income, lease, property_disposal_acquisition, other_income, resident_abroad, divident_income, individual_business_professional, interest_income, income_obtaining_price, no_tax_obligation, tax_incorporation, income_through_technology_platform, simplified_trust.
legal_name
string
🇲🇽 only
Legal Name of the contact.
is_tds_registered
boolean
🇲🇽 only
Boolean to check if tax is registered.
place_of_contact
string
🇮🇳 only
Location of the contact. (This node identifies the place of supply and source of supply when invoices/bills are raised for the customer/vendor respectively. This is not applicable for Overseas contacts)
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer/vendor.
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_authority_name
string
Enter tax authority name.
tax_exemption_code
string
🇺🇸 , 🇨🇦 , 🇦🇺 , 🇮🇳 only
Enter tax exemption code
avatax_exempt_no
string
Avalara Integration only
Exemption certificate number of the customer.
avatax_use_code
string
Avalara Integration only
Used to group like customers for exemption purposes. It is a custom value that links customers to a tax rule. Select from Avalara [standard codes][1] or enter a custom code.
tax_exemption_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
ID of the tax exemption.
tax_authority_id
string
🇺🇸 , 🇨🇦 only
ID of the tax authority. Tax authority depends on the location of the customer. For example, if the customer is located in NY, then the tax authority is NY tax authority.
tax_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
ID of the tax or tax group that can be collected from the contact. Tax can be given only if is_taxable is true.
tds_tax_id
string
🇲🇽 only
ID of the TDS tax.
is_taxable
boolean
🇮🇳 , 🇺🇸 , 🇨🇦 , 🇲🇽 only
Boolean to track the taxability of the customer.
facebook
string
Facebook profile account of the contact. Maximum length [100]
twitter
string
Twitter account of the contact. Maximum length [100]
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "contact_name": "Bowman and Co",
    "company_name": "Bowman and Co",
    "payment_terms": 15,
    "currency_id": 460000000000097,
    "website": "www.zylker.org",
    "custom_fields": [
        {
            "value": "GBGD078",
            "index": 1,
            "label": "VAT ID"
        }
    ],
    "billing_address": {
        "attention": "Mr.John",
        "address": "4900 Hopyard Rd, Suite 310",
        "street2": "Suite 310",
        "state_code": "CA",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": 1234,
        "phone": "1234"
    },
    "shipping_address": {
        "attention": "Mr.John",
        "address": "4900 Hopyard Rd, Suite 310",
        "street2": "Suite 310",
        "state_code": "CA",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": 1234,
        "phone": "1234"
    },
    "contact_persons": [
        {
            "salutation": "Mr",
            "first_name": "Will",
            "last_name": "Smith",
            "email": "test@zylker.org",
            "phone": "1234",
            "mobile": "1234",
            "is_primary_contact": true
        }
    ],
    "default_templates": {
        "invoice_template_id": 460000000052069,
        "invoice_template_name": "Custom Classic",
        "estimate_template_id": 460000000000179,
        "estimate_template_name": "Service - Professional",
        "creditnote_template_id": 460000000000211,
        "creditnote_template_name": "Fixed Cost - Professional",
        "invoice_email_template_id": 460000000052071,
        "invoice_email_template_name": "Custom Invoice Notification",
        "estimate_email_template_id": 460000000052073,
        "estimate_email_template_name": "Custom Estimate Notification",
        "creditnote_email_template_id": 460000000052075,
        "creditnote_email_template_name": "Custom Credit Note Notification"
    },
    "language_code": "en",
    "notes": "Payment option : Through check",
    "vat_reg_no": "string",
    "tax_reg_no": 12345678912345,
    "country_code": "string",
    "vat_treatment": "string",
    "tax_treatment": "string",
    "tax_regime": "general_legal_person",
    "legal_name": "ESCUELA KEMPER URGATE",
    "is_tds_registered": true,
    "place_of_contact": "TN",
    "gst_no": "22AAAAA0000A1Z5",
    "gst_treatment": "business_gst",
    "tax_authority_name": "string",
    "tax_exemption_code": "string",
    "avatax_exempt_no": "string",
    "avatax_use_code": "string",
    "tax_exemption_id": 11149000000061054,
    "tax_authority_id": 11149000000061052,
    "tax_id": 11149000000061058,
    "tds_tax_id": "982000000557012",
    "is_taxable": true,
    "facebook": "zoho",
    "twitter": "zoho"
}
Response Example

{
    "code": 0,
    "message": "Contact has been updated successfully",
    "contact": {
        "contact_id": 460000000026049,
        "contact_name": "Bowman and Co",
        "company_name": "Bowman and Co",
        "has_transaction": true,
        "contact_type": "customer",
        "is_taxable": true,
        "tax_id": 11149000000061058,
        "tds_tax_id": "982000000557012",
        "tax_name": "CGST",
        "tax_percentage": 12,
        "tax_authority_id": 11149000000061052,
        "tax_exemption_id": 11149000000061054,
        "tax_authority_name": "string",
        "tax_exemption_code": "string",
        "place_of_contact": "TN",
        "gst_no": "22AAAAA0000A1Z5",
        "vat_treatment": "string",
        "tax_treatment": "string",
        "tax_regime": "general_legal_person",
        "legal_name": "ESCUELA KEMPER URGATE",
        "is_tds_registered": true,
        "gst_treatment": "business_gst",
        "is_linked_with_zohocrm": false,
        "website": "www.zylker.org",
        "primary_contact_id": 460000000026051,
        "payment_terms": 15,
        "payment_terms_label": "Net 15",
        "currency_id": 460000000000097,
        "currency_code": "USD",
        "currency_symbol": "$",
        "language_code": "en",
        "outstanding_receivable_amount": 250,
        "outstanding_receivable_amount_bcy": 250,
        "unused_credits_receivable_amount": 1369.66,
        "unused_credits_receivable_amount_bcy": 1369.66,
        "status": "active",
        "payment_reminder_enabled": true,
        "custom_fields": [
            {
                "value": "GBGD078",
                "index": 1,
                "label": "VAT ID"
            }
        ],
        "billing_address": {
            "attention": "Mr.John",
            "address": "4900 Hopyard Rd, Suite 310",
            "street2": "Suite 310",
            "state_code": "CA",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234,
            "phone": "1234"
        },
        "shipping_address": {
            "attention": "Mr.John",
            "address": "4900 Hopyard Rd, Suite 310",
            "street2": "Suite 310",
            "state_code": "CA",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234,
            "phone": "1234"
        },
        "facebook": "zoho",
        "twitter": "zoho",
        "contact_persons": [
            {
                "salutation": "Mr",
                "first_name": "Will",
                "last_name": "Smith",
                "email": "test@zylker.org",
                "phone": "1234",
                "mobile": "1234",
                "is_primary_contact": true
            }
        ],
        "default_templates": {
            "invoice_template_id": 460000000052069,
            "invoice_template_name": "Custom Classic",
            "estimate_template_id": 460000000000179,
            "estimate_template_name": "Service - Professional",
            "creditnote_template_id": 460000000000211,
            "creditnote_template_name": "Fixed Cost - Professional",
            "invoice_email_template_id": 460000000052071,
            "invoice_email_template_name": "Custom Invoice Notification",
            "estimate_email_template_id": 460000000052073,
            "estimate_email_template_name": "Custom Estimate Notification",
            "creditnote_email_template_id": 460000000052075,
            "creditnote_email_template_name": "Custom Credit Note Notification"
        },
        "notes": "Payment option : Through check",
        "created_time": "2013-10-07T12:06:10+0530",
        "last_modified_time": "2013-11-08T18:24:51+0530"
    }
}
Get a Contact
Get details of a Contact.
OAuth Scope : ZohoInvoice.contacts.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "contact": {
        "contact_id": 460000000026049,
        "contact_name": "Bowman and Co",
        "company_name": "Bowman and Co",
        "has_transaction": true,
        "contact_type": "customer",
        "is_taxable": true,
        "tax_id": 11149000000061058,
        "tax_name": "CGST",
        "tax_percentage": 12,
        "tax_authority_id": 11149000000061052,
        "tax_exemption_id": 11149000000061054,
        "tax_authority_name": "string",
        "tax_exemption_code": "string",
        "place_of_contact": "TN",
        "gst_no": "22AAAAA0000A1Z5",
        "vat_treatment": "string",
        "gst_treatment": "business_gst",
        "is_linked_with_zohocrm": false,
        "website": "www.zylker.org",
        "primary_contact_id": 460000000026051,
        "payment_terms": 15,
        "payment_terms_label": "Net 15",
        "currency_id": 460000000000097,
        "currency_code": "USD",
        "currency_symbol": "$",
        "outstanding_receivable_amount": 250,
        "outstanding_receivable_amount_bcy": 250,
        "unused_credits_receivable_amount": 1369.66,
        "unused_credits_receivable_amount_bcy": 1369.66,
        "status": "active",
        "facebook": "zoho",
        "twitter": "zoho",
        "payment_reminder_enabled": true,
        "custom_fields": [
            {
                "value": "GBGD078",
                "index": 1,
                "label": "VAT ID"
            }
        ],
        "billing_address": {
            "attention": "Mr.John",
            "address": "4900 Hopyard Rd, Suite 310",
            "street2": "Suite 310",
            "state_code": "CA",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234,
            "phone": "1234"
        },
        "shipping_address": {
            "attention": "Mr.John",
            "address": "4900 Hopyard Rd, Suite 310",
            "street2": "Suite 310",
            "state_code": "CA",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234,
            "phone": "1234"
        },
        "contact_persons": [
            {
                "salutation": "Mr",
                "first_name": "Will",
                "last_name": "Smith",
                "email": "test@zylker.org",
                "phone": "1234",
                "mobile": "1234",
                "is_primary_contact": true
            }
        ],
        "default_templates": {
            "invoice_template_id": 460000000052069,
            "invoice_template_name": "Custom Classic",
            "estimate_template_id": 460000000000179,
            "estimate_template_name": "Service - Professional",
            "creditnote_template_id": 460000000000211,
            "creditnote_template_name": "Fixed Cost - Professional",
            "invoice_email_template_id": 460000000052071,
            "invoice_email_template_name": "Custom Invoice Notification",
            "estimate_email_template_id": 460000000052073,
            "estimate_email_template_name": "Custom Estimate Notification",
            "creditnote_email_template_id": 460000000052075,
            "creditnote_email_template_name": "Custom Credit Note Notification"
        },
        "notes": "Payment option : Through check",
        "created_time": "2013-10-07T12:06:10+0530",
        "last_modified_time": "2013-11-08T18:24:51+0530"
    }
}
Delete a Contact
Delete an existing Contact.
OAuth Scope : ZohoInvoice.contacts.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The contact has been deleted."
}
Mark as Active
Mark a contact as active.
OAuth Scope : ZohoInvoice.contacts.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/active \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The contact has been marked as active."
}
Mark as Inactive
Mark a contact as inactive.
OAuth Scope : ZohoInvoice.contacts.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/inactive \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The contact has been marked as inactive."
}
Enable Portal Access
Enable Portal Access for a Contact.
OAuth Scope : ZohoInvoice.contacts.CREATE

Arguments
contact_persons
array
(Required)
Person/Individual who represents a company
Show Sub-Attributes arrow
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/portal/enable \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "contact_persons": [
        {
            "contact_person_id": 460000000026051
        }
    ]
}
Response Example

{
    "code": 0,
    "message": "Client Portal preferences have been updated"
}
View All Client Reviews
View the list of all client reviews for a particular contact.
OAuth Scope : ZohoInvoice.contacts.READ

Query Parameters
contact_id
Unique ID of a particular contact.
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/clientreviews \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "reviews": [
        {
            "comment_id": 460000000053131,
            "commented_by": "David Sujin",
            "contact_id": 460000000026049,
            "date": "2013-11-19",
            "description": "",
            "rating": 4
        },
        {...},
        {...}
    ]
}
Details of a Particular Client Review
View the details of a particular client review.
OAuth Scope : ZohoInvoice.contacts.READ

Query Parameters
contact_id
Unique ID of a particular contact.
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/clientreviews/460000000053131 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "reviews": [
        {
            "comment_id": 460000000053131,
            "commented_by": "David Sujin",
            "contact_id": 460000000026049,
            "date": "2013-11-19",
            "description": "",
            "is_client_review_or_comment": true,
            "rating": 4
        },
        {...},
        {...}
    ]
}
Reply a Client Review
Send a reply to a client's review.
OAuth Scope : ZohoInvoice.contacts.CREATE

Arguments
description
string
A short note on the purpose/reason for the credit note
Query Parameters
contact_id
Unique ID of a particular contact.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/clientreviews/460000000053131/comment \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "description": "Thank you for your feedback"
}
Response Example

{
    "code": 0,
    "message": "Comment has been updated.",
    "reviews": [
        {
            "comment_id": 460000000053131,
            "commented_by": "David Sujin",
            "contact_id": 460000000026049,
            "date": "2013-11-19",
            "description": "",
            "is_client_review_or_comment": true,
            "rating": 4
        },
        {...},
        {...}
    ]
}
Enable Payment Reminders
Enable automated payment reminders for a contact.
OAuth Scope : ZohoInvoice.contacts.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/paymentreminder/enable \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "All reminders associated with this contact have been enabled."
}
Disable Payment Reminders
Disable automated payment reminders for a contact.
OAuth Scope : ZohoInvoice.contacts.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/paymentreminder/disable \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "All reminders associated with this contact have been stopped."
}
Email Statement
Email statement to the contact. If JSONString is not inputted, mail will be sent with the default mail content.
OAuth Scope : ZohoInvoice.contacts.CREATE

Arguments
send_from_org_email_id
boolean
Boolean to trigger the email from the organization's email address
to_mail_ids
array
(Required)
Array of email addresses of the recipients.
cc_mail_ids
array
Array of email addresses of the recipients to be CC'd.
subject
string
(Required)
Subject of an email that has to be sent. Maximum length to be allowed [1000]
body
string
(Required)
Body/content of the email to be sent. Maximum length [5000]
Query Parameters
start_date
If start_date and end_date are not given, current month's statement will be sent to contact. Date format [yyyy-mm-dd]
end_date
End date for the statement. Date format [yyyy-mm-dd]
multipart_or_formdata
Files to be attached along with the statement.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/statements/email \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "send_from_org_email_id": true,
    "to_mail_ids": [
        "test@zylker.org"
    ],
    "cc_mail_ids": [
        "test@zylker.org"
    ],
    "subject": "Statement of transactions with Zillium Inc",
    "body": "Dear Customer,     <br/>We have attached with this email a list of all your transactions with us for the period 01 Sep 2013 to 30 Sep 2013. You can write to us or call us if you need any assistance or clarifications.     <br/>Thanks for your business.<br/>Regards<br/>Zillium Inc"
}
Response Example

{
    "code": 0,
    "message": "Statement has been sent to the Customer."
}
Get Statement Mail Content
Get the mail content of a contacts billing statement.
OAuth Scope : ZohoInvoice.contacts.READ

Query Parameters
start_date
If start_date and end_date are not given, current month's statement will be sent to contact. Date format [yyyy-mm-dd]
end_date
End date for the statement. Date format [yyyy-mm-dd]
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/statements/email \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "body": "Dear Customer,     <br/>We have attached with this email a list of all your transactions with us for the period 01 Sep 2013 to 30 Sep 2013. You can write to us or call us if you need any assistance or clarifications.     <br/>Thanks for your business.<br/>Regards<br/>Zillium Inc",
    "subject": "Statement of transactions with Zillium Inc",
    "to_contacts": [
        {
            "first_name": "Will",
            "selected": true,
            "phone": "1234",
            "email": "test@zylker.org",
            "contact_person_id": 460000000026051,
            "last_name": "Smith",
            "salutation": "Mr",
            "mobile": "1234"
        }
    ],
    "file_name": "statement_BowmanandCo.pdf",
    "from_emails": [
        {
            "user_name": "John Smith",
            "selected": true,
            "email": "test@zylker.org"
        }
    ],
    "contact_id": 460000000026049
}
Email Contact
Send email to contact.
OAuth Scope : ZohoInvoice.contacts.CREATE

Arguments
to_mail_ids
array
(Required)
Array of email addresses of the recipients.
subject
string
(Required)
Subject of an email has to be sent. Maximum length [1000]
body
string
(Required)
Body/content of the email to be sent. Maximum length [5000]
attachments
binary
Files to be attached to the email. It has to be sent in multipart/formdata
Query Parameters
send_customer_statement
Send customer statement pdf with email.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/email \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "to_mail_ids": [
        "test@zylker.org"
    ],
    "subject": "Welcome to Zillium Inc .",
    "body": "Dear Customer,     <br/>We have attached with this email a list of all your transactions with us for the period 01 Sep 2013 to 30 Sep 2013. You can write to us or call us if you need any assistance or clarifications.     <br/>Thanks for your business.<br/>Regards<br/>Zillium Inc",
    "attachments": "string"
}
Response Example

{
    "code": 0,
    "message": "Email has been sent."
}
List Comments
List recent activities of a contact.
OAuth Scope : ZohoInvoice.contacts.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "contact_comments": [
        {
            "comment_id": 460000000053131,
            "contact_id": 460000000026049,
            "contact_name": "Bowman and Co",
            "description": "",
            "commented_by_id": 460000000024003,
            "commented_by": "David Sujin",
            "date": "2013-11-19",
            "date_description": "4 days ago",
            "time": "6:03 PM",
            "transaction_id": 460000000053123,
            "transaction_type": "customer_payment",
            "is_entity_deleted": false,
            "operation_type": "added"
        },
        {...},
        {...}
    ]
}
Add Additional Address
Add an additional address for a contact using the arguments below.
OAuth Scope : ZohoInvoice.contacts.CREATE

Arguments
attention
string
address
string
Billing address of the contact. Maximum length allowed [500]
street2
string
city
string
City of the customer’s billing address.
state
string
State of the customer’s billing address.
zip
string
Zip code of the customer’s billing address.
country
string
Country of the customer’s billing address.
fax
string
Customer's fax number.
phone
string
phone number of the contact person.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/address \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "attention": "Mr.John",
    "address": "4900 Hopyard Rd, Suite 310",
    "street2": "Suite 310",
    "city": "Pleasanton",
    "state": "CA",
    "zip": 94588,
    "country": "U.S.A",
    "fax": 1234,
    "phone": 1234
}
Response Example

{
    "code": 0,
    "message": "The address has been created.",
    "address_info": {
        "address_id": 1053791000000186000,
        "attention": "Mr.John",
        "address": "4900 Hopyard Rd, Suite 310",
        "street2": "Suite 310",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": 1234,
        "phone": "1234"
    }
}
Get Contact Addresses
Get addresses of a contact including its Shipping Address, Billing Address and other additional addresses.
OAuth Scope : ZohoInvoice.contacts.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/address \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "addresses": [
        {
            "address_id": 1053791000000186000,
            "attention": "Mr.John",
            "address": "4900 Hopyard Rd, Suite 310",
            "street2": "Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234,
            "phone": "1234"
        },
        {...},
        {...}
    ]
}
Edit Additional Address
Edit the additional address of a contact using the arguments below.
OAuth Scope : ZohoInvoice.contacts.UPDATE

Arguments
attention
string
address
string
Billing address of the contact. Maximum length allowed [500]
street2
string
city
string
City of the customer’s billing address.
state
string
State of the customer’s billing address.
zip
string
Zip code of the customer’s billing address.
country
string
Country of the customer’s billing address.
fax
string
Customer's fax number.
phone
string
phone number of the contact person.
address_id
string
(Required)
Address id of the address
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/address/1053791000000186000 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "attention": "Mr.John",
    "address": "4900 Hopyard Rd, Suite 310",
    "street2": "Suite 310",
    "city": "Pleasanton",
    "state": "CA",
    "zip": 94588,
    "country": "U.S.A",
    "fax": 1234,
    "phone": 1234,
    "address_id": 1053791000000186000
}
Response Example

{
    "code": 0,
    "message": "The address has been updated.",
    "address_info": {
        "address_id": 1053791000000186000,
        "attention": "Mr.John",
        "address": "4900 Hopyard Rd, Suite 310",
        "street2": "Suite 310",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": 1234,
        "phone": "1234"
    }
}
Delete Additional Address
Delete the additional address of a contact.
OAuth Scope : ZohoInvoice.contacts.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/address/1053791000000186000 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The address has been deleted."
}
List Refunds
List the refund history of a contact.
OAuth Scope : ZohoInvoice.contacts.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/refunds \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "creditnote_refunds": [
        {
            "creditnote_refund_id": 982000000567158,
            "creditnote_id": 982000000567134,
            "date": "2013-11-19",
            "refund_mode": "cash",
            "reference_number": 782364,
            "creditnote_number": "CN-00001",
            "customer_name": "Bowman & Co",
            "description": "",
            "amount_bcy": 57.15,
            "amount_fcy": 57.15
        },
        {...},
        {...}
    ]
}



Contact Persons
A contact person is an individual who acts as a representative of an organisation for communication purpose. For example, a Manager can be a contact person for an organisation.

End Points
POST  
/contacts/contactpersons
PUT   
/contacts/contactpersons/{contact_person_id}
DELETE
/contacts/contactpersons/{contact_person_id}
GET   
/contacts/{contact_id}/contactpersons
GET   
/contacts/{contact_id}/contactpersons/{contact_person_id}
POST  
/contacts/contactpersons/{contact_person_id}/primary
Attribute
contact_id
string
ID of the contact person
contact_person_id
string
The ID of the contact person
salutation
string
Salutation for the contact. Maximum length allowed [25]
first_name
string
First Name of the contact. Maximum length allowed [100]
last_name
string
Last Name of the contact. Maximum length allowed [100]
email
string
Email ID of the contact person. Maximum length allowed [100]
phone
string
Phone number of the contact person. Maximum length [50]
mobile
string
Mobile/Cell number of the contact person. Maximum length [50]
is_primary_contact
boolean
To mark contact person as primary for communication.
skype
string
skype address of the contact person. Maximum length [50]
designation
string
designation of the contact person in the organisation. Maximum length [50]
department
string
department to which the contact person belongs. Maximum length [50]
is_added_in_portal
boolean
tells whether the contact person has portal access or not
Example

[
    {
        "contact_id": 460000000026049,
        "contact_person_id": 460000000026051,
        "salutation": "Mr",
        "first_name": "Will",
        "last_name": "Smith",
        "email": "test@zylker.org",
        "phone": 1234,
        "mobile": 1234,
        "is_primary_contact": true,
        "skype": "zoho",
        "designation": "Sales Engineer",
        "department": "Sales",
        "is_added_in_portal": true
    }
]
Create a contact person
Create a contact person for contact.
OAuth Scope : ZohoInvoice.contacts.CREATE

Arguments
contact_id
string
ID of the contact person
salutation
string
Salutation for the contact. Maximum length allowed [25]
first_name
string
(Required)
First Name of the contact. Maximum length allowed [100]
last_name
string
Last Name of the contact. Maximum length allowed [100]
email
string
Email ID of the contact person. Maximum length allowed [100]
phone
string
Phone number of the contact person. Maximum length [50]
mobile
string
Mobile/Cell number of the contact person. Maximum length [50]
skype
string
skype address of the contact person. Maximum length [50]
designation
string
designation of the contact person in the organisation. Maximum length [50]
department
string
department to which the contact person belongs. Maximum length [50]
enable_portal
boolean
option to enable or disable portal access the contact person. allowed values true,false
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/contacts/contactpersons \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "contact_id": 460000000026049,
    "salutation": "Mr",
    "first_name": "Will",
    "last_name": "Smith",
    "email": "test@zylker.org",
    "phone": 1234,
    "mobile": 1234,
    "skype": "zoho",
    "designation": "Sales Engineer",
    "department": "Sales",
    "enable_portal": true
}
Response Example

{
    "code": 0,
    "message": "success",
    "contact_person": [
        {
            "contact_id": 460000000026049,
            "contact_person_id": 460000000026051,
            "salutation": "Mr",
            "first_name": "Will",
            "last_name": "Smith",
            "email": "test@zylker.org",
            "phone": 1234,
            "mobile": 1234,
            "is_primary_contact": true,
            "skype": "zoho",
            "designation": "Sales Engineer",
            "department": "Sales",
            "is_added_in_portal": true
        },
        {...},
        {...}
    ]
}
Update a contact person
Update details of an existing contact person.
OAuth Scope : ZohoInvoice.contacts.UPDATE

Arguments
contact_id
string
(Required)
ID of the contact person
salutation
string
Salutation for the contact. Maximum length allowed [25]
first_name
string
(Required)
First Name of the contact. Maximum length allowed [100]
last_name
string
Last Name of the contact. Maximum length allowed [100]
email
string
Email ID of the contact person. Maximum length allowed [100]
phone
string
Phone number of the contact person. Maximum length [50]
mobile
string
Mobile/Cell number of the contact person. Maximum length [50]
skype
string
skype address of the contact person. Maximum length [50]
designation
string
designation of the contact person in the organisation. Maximum length [50]
department
string
department to which the contact person belongs. Maximum length [50]
enable_portal
boolean
option to enable or disable portal access the contact person. allowed values true,false
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/contacts/contactpersons/460000000026051 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "contact_id": 460000000026049,
    "salutation": "Mr",
    "first_name": "Will",
    "last_name": "Smith",
    "email": "test@zylker.org",
    "phone": 1234,
    "mobile": 1234,
    "skype": "zoho",
    "designation": "Sales Engineer",
    "department": "Sales",
    "enable_portal": true
}
Response Example

{
    "code": 0,
    "message": "success",
    "contact_person": [
        {
            "contact_id": 460000000026049,
            "contact_person_id": 460000000026051,
            "salutation": "Mr",
            "first_name": "Will",
            "last_name": "Smith",
            "email": "test@zylker.org",
            "phone": 1234,
            "mobile": 1234,
            "is_primary_contact": true,
            "skype": "zoho",
            "designation": "Sales Engineer",
            "department": "Sales",
            "is_added_in_portal": true
        },
        {...},
        {...}
    ]
}
Delete a contact person
Delete an existing contact person.
OAuth Scope : ZohoInvoice.contacts.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/contacts/contactpersons/460000000026051 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The contact person has been deleted."
}
List contact persons
List all contacts with pagination.
OAuth Scope : ZohoInvoice.contacts.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/contactpersons \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "contact_persons": [
        {
            "contact_id": 460000000026049,
            "contact_person_id": 460000000026051,
            "salutation": "Mr",
            "first_name": "Will",
            "last_name": "Smith",
            "email": "test@zylker.org",
            "phone": 1234,
            "mobile": 1234,
            "is_primary_contact": true,
            "skype": "zoho",
            "designation": "Sales Engineer",
            "department": "Sales",
            "is_added_in_portal": true
        },
        {...},
        {...}
    ]
}
Get a contact person
Get the details of a contact person.
OAuth Scope : ZohoInvoice.contacts.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/contacts/460000000026049/contactpersons/460000000026051 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "contact_person": {
        "contact_id": 460000000026049,
        "contact_person_id": 460000000026051,
        "salutation": "Mr",
        "first_name": "Will",
        "last_name": "Smith",
        "email": "test@zylker.org",
        "phone": 1234,
        "mobile": 1234,
        "is_primary_contact": true,
        "skype": "zoho",
        "designation": "Sales Engineer",
        "department": "Sales",
        "is_added_in_portal": true
    }
}
Mark as primary contact person
Mark a contact person as primary for contact.
OAuth Scope : ZohoInvoice.contacts.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/contacts/contactpersons/460000000026051/primary \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "This contact person has been marked as your primary contact person."
}




Estimates
An estimate is a quote or an approximation, of the prices, which a seller projects to a buyer. There can be different estimates to different buyers.

Possible error codes:
Error Code	Message
1001	Estimate Number already exist
1002	Estimate does not exist
2007	Estimate cannot be raised for items that have been deleted or marked as inactive
4041	Estimate status cannot be changed to Draft
9526	Please enter a valid retainer percentage. It should be greater than 0 and less than or equal to 100

End Points
POST  
/estimates
GET   
/estimates
PUT   
/estimates/{estimate_id}
GET   
/estimates/{estimate_id}
DELETE
/estimates/{estimate_id}
PUT   
/estimate/{estimate_id}/customfields
POST  
/estimates/{estimate_id}/status/sent
POST  
/estimates/{estimate_id}/status/accepted
POST  
/estimates/{estimate_id}/status/declined
POST  
/estimates/{estimate_id}/email
GET   
/estimates/{estimate_id}/email
POST  
/estimates/email
GET   
/estimates/pdf
GET   
/estimates/print
PUT   
/estimates/{estimate_id}/address/billing
PUT   
/estimates/{estimate_id}/address/shipping
GET   
/estimates/templates
PUT   
/estimates/{estimate_id}/templates/{template_id}
POST  
/estimates/{estimate_id}/comments
GET   
/estimates/{estimate_id}/comments
PUT   
/estimates/{estimate_id}/comments/{comment_id}
DELETE
/estimates/{estimate_id}/comments/{comment_id}
Attribute
estimate_id
string
The unique id of a particular estimate
estimate_number
string
Estimate Serial number.
date
string
Date on the estimate.
reference_number
string
Transaction reference number.
is_pre_gst
boolean
🇮🇳 only
Applicable for transactions that fall before july 1, 2017
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer.
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_treatment
string
🇲🇽 only
VAT treatment for the Estimate.Allowed Values:
home_country_mexico,border_region_mexico,non_mexico supported only for MX.
status
string
Status of the estimate. Allowed Valuesdraft, sent, invoiced , accepted, declined and expired
customer_id
string
Customer ID on the estimate.
customer_name
string
Name of the Customer to whom the estimate is sent.
contact_persons
array
Array of contact person(s) for whom estimate has to be sent.
currency_id
string
The Unique ID of the customer
currency_code
string
Currency code of the currency in which the customer wants to pay. If currency_code is not specified here, the currency chosen in your Zoho Subscriptions organization will be used for billing. currency_id and currency_symbol are set automatically in accordance to the currency_code.
exchange_rate
double
Foreign Exchange rate of the currency.
expiry_date
string
The date of expiration of the estimates
discount
double
Discount applied to the invoice. It can be either in % or in amount. e.g. 12.5% or 190.
is_discount_before_tax
boolean
Used to specify how the discount has to applied. Either before or after the calculation of tax.
discount_type
string
How the discount is specified. Allowed values are entity_level or item_level.Allowed Values: entity_level and item_level
is_inclusive_tax
boolean
Not applicable 🇺🇸
Used to specify whether the line item rates are inclusive or exclusive of tax.
line_items
array
Line items of an estimate.
Show Sub-Attributes arrow
shipping_charge
string
Shipping charges applied to the invoice.
adjustment
double
Adjustments made to the invoice.
adjustment_description
string
Customize the adjustment description. E.g. Rounding off value.
sub_total
float
The sub total of the all items
total
double
estimate total value.
tax_total
double
The total amount of the tax levied
price_precision
integer
The precision value on the price
taxes
array
List of the taxes levied
Show Sub-Attributes arrow
billing_address
object
The billing address of the customer
Show Sub-Attributes arrow
shipping_address
object
The shipping address of the customer
Show Sub-Attributes arrow
notes
string
The notes added below expressing gratitude or for conveying some information.
terms
string
Enlist the terms & conditions for estimate
custom_fields
array
Custom fields for an estimate.
Show Sub-Attributes arrow
template_id
string
ID of the template used for the estimate
template_name
string
Name of the template used
created_time
string
The time of creation of the estimates
last_modified_time
string
Last date of modification in estimate
salesperson_id
string
Unique ID of the sales person
salesperson_name
string
Name of the sales person.
project
object
Show Sub-Attributes arrow
Example

{
    "estimate_id": 982000000567011,
    "estimate_number": "EST-00002",
    "date": "2013-11-18",
    "reference_number": "QRT-12346",
    "is_pre_gst": false,
    "place_of_supply": "TN",
    "gst_no": "22AAAAA0000A1Z5",
    "gst_treatment": "business_gst",
    "tax_treatment": "vat_registered",
    "status": "draft",
    "customer_id": 982000000567001,
    "customer_name": "Bowman & Co",
    "contact_persons": [
        "982000000567003",
        "982000000567019"
    ],
    "currency_id": 982000000000190,
    "currency_code": "USD",
    "exchange_rate": 1,
    "expiry_date": "2013-11-30",
    "discount": 0,
    "is_discount_before_tax": true,
    "discount_type": "item_level",
    "is_inclusive_tax": false,
    "line_items": [
        {
            "item_id": " ",
            "name": "Hard Drive",
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "item_order": 1,
            "bcy_rate": 120,
            "rate": 120,
            "quantity": 1,
            "unit": " ",
            "discount_amount": 0,
            "discount": 0,
            "tax_id": 982000000557028,
            "tax_name": "VAT",
            "tax_type": "tax",
            "tax_percentage": 12.5,
            "item_total": 120
        }
    ],
    "shipping_charge": 0,
    "adjustment": 0,
    "adjustment_description": " ",
    "sub_total": 153,
    "total": 40.6,
    "tax_total": 22.6,
    "price_precision": 2,
    "taxes": [
        {
            "tax_name": "VAT",
            "tax_amount": 19.13
        }
    ],
    "billing_address": {
        "address": "4900 Hopyard Rd, Suite 310",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": 1234
    },
    "shipping_address": {
        "address": "4900 Hopyard Rd, Suite 310",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": 1234
    },
    "notes": "Looking forward for your business.",
    "terms": "Terms & Conditions apply",
    "custom_fields": [
        {
            "customfield_id": 439910000000236000,
            "data_type": "number",
            "index": 1,
            "label": "Delivery Date",
            "show_on_pdf": false,
            "show_in_all_pdf": true,
            "value": "15 Dec 2013"
        }
    ],
    "template_id": 982000000000143,
    "template_name": "Service - Classic",
    "created_time": "2013-11-18T02:17:40-0800",
    "last_modified_time": "2013-12-18T04:46:45-0500",
    "salesperson_id": 982000000567003,
    "salesperson_name": "Will smith",
    "project": {
        "project_id": 90300000087378,
        "project_name": "Sample Project"
    }
}
Create an Estimate
Create an estimate for your customer.
OAuth Scope : ZohoInvoice.estimates.CREATE

Arguments
customer_id
string
(Required)
Customer ID on the estimate.
contact_persons
array
Array of contact person(s) for whom estimate has to be sent.
template_id
string
ID of the template used for the estimate
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_treatment
string
🇲🇽 only
VAT treatment for the Estimate.Allowed Values:
home_country_mexico,border_region_mexico,non_mexico supported only for MX.
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer.
estimate_number
string
Estimate Serial number.
reference_number
string
Transaction reference number.
date
string
Date on the estimate.
expiry_date
string
The date of expiration of the estimates
exchange_rate
double
Foreign Exchange rate of the currency.
discount
double
Discount applied to the invoice. It can be either in % or in amount. e.g. 12.5% or 190.
is_discount_before_tax
boolean
Used to specify how the discount has to applied. Either before or after the calculation of tax.
discount_type
string
How the discount is specified. Allowed values are entity_level or item_level.Allowed Values: entity_level and item_level
is_inclusive_tax
boolean
Not applicable 🇺🇸
Used to specify whether the line item rates are inclusive or exclusive of tax.
custom_body
string
Custom content of the email
custom_subject
string
Subjet for the email to be sent
salesperson_name
string
Name of the sales person.
custom_fields
array
Custom fields for an estimate.
Show Sub-Attributes arrow
line_items
array
(Required)
Line items of an estimate.
Show Sub-Attributes arrow
notes
string
The notes added below expressing gratitude or for conveying some information.
terms
string
Enlist the terms & conditions for estimate
shipping_charge
string
Shipping charges applied to the invoice.
adjustment
double
Adjustments made to the invoice.
adjustment_description
string
Customize the adjustment description. E.g. Rounding off value.
tax_id
string
ID of the tax or tax group applied to the estimate
tax_exemption_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
ID of the tax exemption.
tax_authority_id
string
🇺🇸 , 🇨🇦 only
ID of the tax authority. Tax authority depends on the location of the customer. For example, if the customer is located in NY, then the tax authority is NY tax authority.
avatax_use_code
string
Avalara Integration only
Used to group like customers for exemption purposes. It is a custom value that links customers to a tax rule. Select from Avalara [standard codes][1] or enter a custom code.
avatax_tax_code
string
Avalara Integration only
A tax code is a unique label used to group Items (products, services, or charges) together. Maximum length [25]
avatax_exempt_no
string
Avalara Integration only
Exemption certificate number of the customer.
vat_treatment
string
🇬🇧 only
(Optional) VAT treatment for the estimates. VAT treatment denotes the location of the customer, if the customer resides in UK then the VAT treatment is uk. If the customer is in an EU country & VAT registered, you are resides in Northen Ireland and selling Goods then his VAT treatment is eu_vat_registered, if he resides outside of the UK then his VAT treatment is overseas (For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
project_id
string
ID of the project
Query Parameters
send
Send the estimate to the contact person(s) associated with the estimate.Allowed Values: true and false
ignore_auto_number_generation
Ignore auto estimate number generation for this estimate. This mandates the estimate number to be entered manually.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/estimates \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "customer_id": 982000000567001,
    "contact_persons": [
        "982000000567003",
        "982000000567019"
    ],
    "template_id": 982000000000143,
    "place_of_supply": "TN",
    "gst_treatment": "business_gst",
    "tax_treatment": "vat_registered",
    "gst_no": "22AAAAA0000A1Z5",
    "estimate_number": "EST-00002",
    "reference_number": "QRT-12346",
    "date": "2013-11-18",
    "expiry_date": "2013-11-30",
    "exchange_rate": 1,
    "discount": 0,
    "is_discount_before_tax": true,
    "discount_type": "item_level",
    "is_inclusive_tax": false,
    "custom_body": " ",
    "custom_subject": " ",
    "salesperson_name": "Will smith",
    "custom_fields": [
        {
            "label": "Delivery Date",
            "value": "15 Dec 2013"
        }
    ],
    "line_items": [
        {
            "item_id": " ",
            "name": "Hard Drive",
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "item_order": 1,
            "rate": 120,
            "product_type": "goods",
            "hsn_or_sac": 80540,
            "sat_item_key_code": 71121206,
            "unitkey_code": "E48",
            "quantity": 1,
            "unit": " ",
            "discount_amount": 0,
            "discount": 0,
            "tax_id": 982000000557028,
            "tds_tax_id": "982000000557012",
            "tax_exemption_id": 11149000000061054,
            "avatax_tax_code": "string",
            "avatax_use_code": "string",
            "tax_name": "VAT",
            "tax_type": "tax",
            "tax_percentage": 12.5,
            "item_total": 120
        }
    ],
    "notes": "Looking forward for your business.",
    "terms": "Terms & Conditions apply",
    "shipping_charge": 0,
    "adjustment": 0,
    "adjustment_description": " ",
    "tax_id": 982000000557028,
    "tax_exemption_id": 11149000000061054,
    "tax_authority_id": 11149000000061052,
    "avatax_use_code": "string",
    "avatax_tax_code": "string",
    "avatax_exempt_no": "string",
    "vat_treatment": "string",
    "project_id": 90300000087378
}
Response Example

{
    "code": 0,
    "message": "The estimate has been created",
    "estimate": {
        "estimate_id": 982000000567011,
        "estimate_number": "EST-00002",
        "date": "2013-11-18",
        "reference_number": "QRT-12346",
        "is_pre_gst": false,
        "place_of_supply": "TN",
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "tax_treatment": "vat_registered",
        "status": "draft",
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "contact_persons": [
            "982000000567003",
            "982000000567019"
        ],
        "currency_id": 982000000000190,
        "currency_code": "USD",
        "exchange_rate": 1,
        "expiry_date": "2013-11-30",
        "discount": 0,
        "is_discount_before_tax": true,
        "discount_type": "item_level",
        "is_inclusive_tax": false,
        "line_items": [
            {
                "item_id": " ",
                "name": "Hard Drive",
                "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
                "item_order": 1,
                "bcy_rate": 120,
                "rate": 120,
                "quantity": 1,
                "unit": " ",
                "discount_amount": 0,
                "discount": 0,
                "tax_id": 982000000557028,
                "tax_name": "VAT",
                "tax_type": "tax",
                "tax_percentage": 12.5,
                "item_total": 120
            }
        ],
        "shipping_charge": 0,
        "adjustment": 0,
        "adjustment_description": " ",
        "sub_total": 153,
        "total": 40.6,
        "tax_total": 22.6,
        "price_precision": 2,
        "taxes": [
            {
                "tax_name": "VAT",
                "tax_amount": 19.13
            }
        ],
        "billing_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234
        },
        "shipping_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234
        },
        "notes": "Looking forward for your business.",
        "terms": "Terms & Conditions apply",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "number",
                "index": 1,
                "label": "Delivery Date",
                "show_on_pdf": false,
                "show_in_all_pdf": true,
                "value": "15 Dec 2013"
            }
        ],
        "template_id": 982000000000143,
        "template_name": "Service - Classic",
        "created_time": "2013-11-18T02:17:40-0800",
        "last_modified_time": "2013-12-18T04:46:45-0500",
        "salesperson_id": 982000000567003,
        "salesperson_name": "Will smith",
        "project": {
            "project_id": 90300000087378,
            "project_name": "Sample Project"
        }
    }
}
List estimates
List all estimates with pagination.
OAuth Scope : ZohoInvoice.estimates.READ

Query Parameters
zcrm_potential_id
Potential ID of a Deal in CRM.
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/estimates \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "estimates": [
        {
            "estimate_id": 982000000567011,
            "customer_name": "Bowman & Co",
            "customer_id": 982000000567001,
            "status": "draft",
            "estimate_number": "EST-00002",
            "reference_number": "QRT-12346",
            "date": "2013-11-18",
            "currency_id": 982000000000190,
            "currency_code": "USD",
            "total": 40.6,
            "created_time": "2013-11-18T02:17:40-0800",
            "last_modified_time": "2013-12-18T04:46:45-0500",
            "accepted_date": " ",
            "declined_date": " ",
            "expiry_date": "2013-11-30",
            "has_attachment": false,
            "is_viewed_by_client": true,
            "client_viewed_time": "2016-06-19T05:49:12-0500"
        },
        {...},
        {...}
    ]
}
Update an Estimate
Update an existing estimate. To delete a line item just remove it from the line_items list.
OAuth Scope : ZohoInvoice.estimates.UPDATE

Arguments
customer_id
string
(Required)
Customer ID on the estimate.
contact_persons
array
Array of contact person(s) for whom estimate has to be sent.
template_id
string
ID of the template used for the estimate
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_treatment
string
🇲🇽 only
VAT treatment for the Estimate.Allowed Values:
home_country_mexico,border_region_mexico,non_mexico supported only for MX.
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer.
estimate_number
string
Estimate Serial number.
reference_number
string
Transaction reference number.
date
string
Date on the estimate.
expiry_date
string
The date of expiration of the estimates
exchange_rate
double
Foreign Exchange rate of the currency.
discount
double
Discount applied to the invoice. It can be either in % or in amount. e.g. 12.5% or 190.
is_discount_before_tax
boolean
Used to specify how the discount has to applied. Either before or after the calculation of tax.
discount_type
string
How the discount is specified. Allowed values are entity_level or item_level.Allowed Values: entity_level and item_level
is_inclusive_tax
boolean
Not applicable 🇺🇸
Used to specify whether the line item rates are inclusive or exclusive of tax.
custom_body
string
Custom content of the email
custom_subject
string
Subjet for the email to be sent
salesperson_name
string
Name of the sales person.
custom_fields
array
(Required)
Custom fields for an estimate.
Show Sub-Attributes arrow
line_items
array
Line items of an estimate.
Show Sub-Attributes arrow
notes
string
The notes added below expressing gratitude or for conveying some information.
terms
string
Enlist the terms & conditions for estimate
shipping_charge
string
Shipping charges applied to the invoice.
adjustment
double
Adjustments made to the invoice.
adjustment_description
string
Customize the adjustment description. E.g. Rounding off value.
tax_id
string
ID of the tax or tax group applied to the estimate
tax_exemption_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
ID of the tax exemption.
tax_authority_id
string
🇺🇸 , 🇨🇦 only
ID of the tax authority. Tax authority depends on the location of the customer. For example, if the customer is located in NY, then the tax authority is NY tax authority.
avatax_use_code
string
Avalara Integration only
Used to group like customers for exemption purposes. It is a custom value that links customers to a tax rule. Select from Avalara [standard codes][1] or enter a custom code.
avatax_tax_code
string
Avalara Integration only
A tax code is a unique label used to group Items (products, services, or charges) together. Maximum length [25]
avatax_exempt_no
string
Avalara Integration only
Exemption certificate number of the customer.
vat_treatment
string
🇬🇧 only
(Optional) VAT treatment for the estimates. VAT treatment denotes the location of the customer, if the customer resides in UK then the VAT treatment is uk. If the customer is in an EU country & VAT registered, you are resides in Northen Ireland and selling Goods then his VAT treatment is eu_vat_registered, if he resides outside of the UK then his VAT treatment is overseas (For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
project_id
string
ID of the project
Query Parameters
ignore_auto_number_generation
Ignore auto estimate number generation for this estimate. This mandates the estimate number to be entered manually.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "customer_id": 982000000567001,
    "contact_persons": [
        "982000000567003",
        "982000000567019"
    ],
    "template_id": 982000000000143,
    "place_of_supply": "TN",
    "gst_treatment": "business_gst",
    "tax_treatment": "vat_registered",
    "gst_no": "22AAAAA0000A1Z5",
    "estimate_number": "EST-00002",
    "reference_number": "QRT-12346",
    "date": "2013-11-18",
    "expiry_date": "2013-11-30",
    "exchange_rate": 1,
    "discount": 0,
    "is_discount_before_tax": true,
    "discount_type": "item_level",
    "is_inclusive_tax": false,
    "custom_body": " ",
    "custom_subject": " ",
    "salesperson_name": "Will smith",
    "custom_fields": [
        {
            "label": "Delivery Date",
            "value": "15 Dec 2013"
        }
    ],
    "line_items": [
        {
            "item_id": " ",
            "name": "Hard Drive",
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "item_order": 1,
            "rate": 120,
            "quantity": 1,
            "product_type": "goods",
            "hsn_or_sac": 80540,
            "sat_item_key_code": 71121206,
            "unitkey_code": "E48",
            "unit": " ",
            "discount_amount": 0,
            "discount": 0,
            "tax_id": 982000000557028,
            "tds_tax_id": "982000000557012",
            "tax_exemption_id": 11149000000061054,
            "avatax_tax_code": "string",
            "avatax_use_code": "string",
            "tax_name": "VAT",
            "tax_type": "tax",
            "tax_percentage": 12.5,
            "item_total": 120
        }
    ],
    "notes": "Looking forward for your business.",
    "terms": "Terms & Conditions apply",
    "shipping_charge": 0,
    "adjustment": 0,
    "adjustment_description": " ",
    "tax_id": 982000000557028,
    "tax_exemption_id": 11149000000061054,
    "tax_authority_id": 11149000000061052,
    "avatax_use_code": "string",
    "avatax_tax_code": "string",
    "avatax_exempt_no": "string",
    "vat_treatment": "string",
    "project_id": 90300000087378
}
Response Example

{
    "code": 0,
    "message": "Estimate information has been updated.",
    "estimate": {
        "estimate_id": 982000000567011,
        "estimate_number": "EST-00002",
        "date": "2013-11-18",
        "reference_number": "QRT-12346",
        "is_pre_gst": false,
        "place_of_supply": "TN",
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "tax_treatment": "vat_registered",
        "status": "draft",
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "contact_persons": [
            "982000000567003",
            "982000000567019"
        ],
        "currency_id": 982000000000190,
        "currency_code": "USD",
        "exchange_rate": 1,
        "expiry_date": "2013-11-30",
        "discount": 0,
        "is_discount_before_tax": true,
        "discount_type": "item_level",
        "is_inclusive_tax": false,
        "line_items": [
            {
                "item_id": " ",
                "name": "Hard Drive",
                "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
                "item_order": 1,
                "bcy_rate": 120,
                "rate": 120,
                "quantity": 1,
                "unit": " ",
                "discount_amount": 0,
                "discount": 0,
                "tax_id": 982000000557028,
                "tax_name": "VAT",
                "tax_type": "tax",
                "tax_percentage": 12.5,
                "item_total": 120
            }
        ],
        "shipping_charge": 0,
        "adjustment": 0,
        "adjustment_description": " ",
        "sub_total": 153,
        "total": 40.6,
        "tax_total": 22.6,
        "price_precision": 2,
        "taxes": [
            {
                "tax_name": "VAT",
                "tax_amount": 19.13
            }
        ],
        "billing_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234
        },
        "shipping_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234
        },
        "notes": "Looking forward for your business.",
        "terms": "Terms & Conditions apply",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "number",
                "index": 1,
                "label": "Delivery Date",
                "show_on_pdf": false,
                "show_in_all_pdf": true,
                "value": "15 Dec 2013"
            }
        ],
        "template_id": 982000000000143,
        "template_name": "Service - Classic",
        "created_time": "2013-11-18T02:17:40-0800",
        "last_modified_time": "2013-12-18T04:46:45-0500",
        "salesperson_id": 982000000567003,
        "salesperson_name": "Will smith",
        "project": {
            "project_id": 90300000087378,
            "project_name": "Sample Project"
        }
    }
}
Get an estimate
Get the details of an estimate.
OAuth Scope : ZohoInvoice.estimates.READ

Query Parameters
print
Print the exported pdf.
accept
Get the details of a particular estimate in formats such as json/ pdf/ html. Default format is json.Allowed Values: json, pdf and html
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "estimate": {
        "estimate_id": 982000000567011,
        "estimate_number": "EST-00002",
        "date": "2013-11-18",
        "reference_number": "QRT-12346",
        "is_pre_gst": false,
        "place_of_supply": "TN",
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "tax_treatment": "vat_registered",
        "status": "draft",
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "contact_persons": [
            "982000000567003",
            "982000000567019"
        ],
        "currency_id": 982000000000190,
        "currency_code": "USD",
        "exchange_rate": 1,
        "expiry_date": "2013-11-30",
        "discount": 0,
        "is_discount_before_tax": true,
        "discount_type": "item_level",
        "is_inclusive_tax": false,
        "is_viewed_by_client": true,
        "client_viewed_time": "2016-06-19T05:49:12-0500",
        "line_items": [
            {
                "item_id": " ",
                "name": "Hard Drive",
                "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
                "item_order": 1,
                "bcy_rate": 120,
                "rate": 120,
                "quantity": 1,
                "unit": " ",
                "discount_amount": 0,
                "discount": 0,
                "tax_id": 982000000557028,
                "tax_name": "VAT",
                "tax_type": "tax",
                "tax_percentage": 12.5,
                "item_total": 120
            }
        ],
        "shipping_charge": 0,
        "adjustment": 0,
        "adjustment_description": " ",
        "sub_total": 153,
        "total": 40.6,
        "tax_total": 22.6,
        "price_precision": 2,
        "taxes": [
            {
                "tax_name": "VAT",
                "tax_amount": 19.13
            }
        ],
        "billing_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234
        },
        "shipping_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": 1234
        },
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "number",
                "index": 1,
                "label": "Delivery Date",
                "show_on_pdf": false,
                "show_in_all_pdf": true,
                "value": "15 Dec 2013"
            }
        ],
        "template_id": 982000000000143,
        "template_name": "Service - Classic",
        "created_time": "2013-11-18T02:17:40-0800",
        "last_modified_time": "2013-12-18T04:46:45-0500",
        "salesperson_id": 982000000567003,
        "salesperson_name": "Will smith",
        "project": {
            "project_id": 90300000087378,
            "project_name": "Sample Project"
        }
    }
}
Delete an Estimate
Delete an existing estimate.
OAuth Scope : ZohoInvoice.estimates.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The estimate has been deleted."
}
Update custom field in existing estimates
Update the value of the custom field in existing estimates.
OAuth Scope : ZohoInvoice.estimates.UPDATE

Arguments
customfield_id
long
value
string
Value for the custom field
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/estimate/982000000567011/customfields \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


[
    {
        "customfield_id": "46000000012845",
        "value": "15 Dec 2013"
    }
]
Response Example

{
    "code": 0,
    "message": "Custom Fields Updated Successfully"
}
Mark an estimate as sent
Mark a draft estimate as sent.
OAuth Scope : ZohoInvoice.estimates.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011/status/sent \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Estimate status has been changed to Sent"
}
Mark an estimate as accepted
Mark a sent estimate as accepted if the customer has accepted it.
OAuth Scope : ZohoInvoice.estimates.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011/status/accepted \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Estimate status has been changed to Accepted."
}
Mark an estimate as declined
Mark a sent estimate as declined if the customer has rejected it.
OAuth Scope : ZohoInvoice.estimates.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011/status/declined \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Estimate status has been changed to Declined."
}
Email an estimate
Email an estimate to the customer. Input json string is not mandatory. If input json string is empty, mail will be send with default mail content.
OAuth Scope : ZohoInvoice.estimates.CREATE

Arguments
send_from_org_email_id
boolean
Boolean to trigger the email from the organization's email address
to_mail_ids
array
(Required)
Array of email addresses of the recipients.
cc_mail_ids
array
Array of email addresses of the recipients to be CC'd.
subject
string
Subject of an email has to be sent.
body
string
Body/content of an email has to be sent.
Query Parameters
attachments
Files to be attached to the email
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011/email \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "send_from_org_email_id": false,
    "to_mail_ids": [
        "test@zylker.org"
    ],
    "cc_mail_ids": [
        "test@zylker.org"
    ],
    "subject": "Statement of transactions with Zillium Inc",
    "body": "Dear Customer,   Thanks for your business enquiry.         The estimate EST-000002 is attached with this email.        We can get started if you send us your consent. For any assistance you can reach us via email or phone.         Looking forward to hearing back from you. Here's an overview of the estimate for your reference.        Estimate Overview:        Estimate  : EST-000002         Date : 03 Oct 2013        Amount : $36.47 Regards<br>\\nZillium Inc<br>\\n\"\""
}
Response Example

{
    "code": 0,
    "message": "Your estimate has been sent."
}
Get estimate email content
Get the email content of an estimate.
OAuth Scope : ZohoInvoice.estimates.READ

Query Parameters
email_template_id
(Required)
Get the email content based on a specific email template. If this param is not inputted, then the content will be based on the email template associated with the customer. If no template is associated with the customer, then default template will be used.
Request Example

cURL

curl --request GET \
  --url 'https://www.zohoapis.com/invoice/v3/estimates/982000000567011/email?email_template_id=982000000000079' \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "body": "Dear Customer,   Thanks for your business enquiry.         The estimate EST-000002 is attached with this email.        We can get started if you send us your consent. For any assistance you can reach us via email or phone.         Looking forward to hearing back from you. Here's an overview of the estimate for your reference.        Estimate Overview:        Estimate  : EST-000002         Date : 03 Oct 2013        Amount : $36.47 Regards<br>\\nZillium Inc<br>\\n\"\"",
    "error_list": [],
    "subject": "Statement of transactions with Zillium Inc",
    "emailtemplates": [
        {
            "selected": true,
            "name": "Default",
            "email_template_id": 982000000000079
        }
    ],
    "to_contacts": [
        {
            "first_name": "David",
            "selected": true,
            "phone": "1234",
            "email": "string",
            "last_name": "Sujin",
            "salutation": ":Mr",
            "contact_person_id": "982000000567003",
            "mobile": "1234"
        }
    ],
    "file_name": "EST-00001.pdf",
    "from_emails": [
        {
            "user_name": "John Smith",
            "selected": true,
            "email": "string"
        }
    ],
    "customer_id": 982000000567001
}
Email multiple estimates
Send estimates to your customers by email. Maximum of 10 estimates can be sent at once.
OAuth Scope : ZohoInvoice.estimates.CREATE

Query Parameters
estimate_ids
(Required)
Comma separated estimate ids which are to be emailed.
Request Example

cURL

curl --request POST \
  --url 'https://www.zohoapis.com/invoice/v3/estimates/email?estimate_ids=' \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Mission accomplished! We've sent all the estimates."
}
Bulk export estimates
Maximum of 25 estimates can be exported in a single pdf.
OAuth Scope : ZohoInvoice.estimates.READ

Query Parameters
estimate_ids
(Required)
Comma separated estimate ids which are to be emailed.
Request Example

cURL

curl --request GET \
  --url 'https://www.zohoapis.com/invoice/v3/estimates/pdf?estimate_ids=' \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success"
}
Bulk print estimates
Export estimates as pdf and print them. Maximum of 25 estimates can be printed.
OAuth Scope : ZohoInvoice.estimates.READ

Query Parameters
estimate_ids
(Required)
Comma separated estimate ids which are to be emailed.
Request Example

cURL

curl --request GET \
  --url 'https://www.zohoapis.com/invoice/v3/estimates/print?estimate_ids=' \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success"
}
Update billing address
Updates the billing address for this estimate alone.
OAuth Scope : ZohoInvoice.estimates.UPDATE

Arguments
address
string
Billing Address of the receiver
city
string
City of the Billing address of the contact
state
string
State of the Billing address of the contact
zip
string
ZIP code of the billing address
country
string
Country of the billing address
fax
string
FAX number of the contact
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011/address/billing \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "address": "B-1104, 11F, \nHorizon International Tower, \nNo. 6, ZhiChun Road, HaiDian District,",
    "city": "Beijing",
    "state": "Beijing",
    "zip": 1000881,
    "country": "China",
    "fax": "+86-10-82637827"
}
Response Example

{
    "code": 0,
    "message": "Billing address updated"
}
Update shipping address
Updates the shipping address for an existing estimate alone.
OAuth Scope : ZohoInvoice.estimates.UPDATE

Arguments
address
string
Billing address for the estimate
city
string
City of the customer’s billing address.
state
string
State of the customer’s billing address.
zip
string
Zip code of the customer’s billing address.
country
string
Country of the customer’s billing address.
fax
string
Customer's fax number.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011/address/shipping \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "address": "4900 Hopyard Rd, Suite 310",
    "city": "Pleasanton",
    "state": "CA",
    "zip": 94588,
    "country": "U.S.A",
    "fax": 1234
}
Response Example

{
    "code": 0,
    "message": "Shipping address updated"
}
List estimate templates
Get all estimate pdf templates.
OAuth Scope : ZohoInvoice.estimates.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/estimates/templates \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "templates": {
        "template_name": "Service - Classic",
        "template_id": 982000000000143,
        "template_type": "classic"
    }
}
Update estimate template
Update the pdf template associated with the estimate.
OAuth Scope : ZohoInvoice.estimates.UPDATE

Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011/templates/982000000000143 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Estimate information has been updated."
}
Add Comments
Add a comment for an estimate.
OAuth Scope : ZohoInvoice.estimates.CREATE

Arguments
description
string
A short note on the estimate
show_comment_to_clients
boolean
Boolean to show the comments to contacts in portal.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "description": "Estimate marked as sent",
    "show_comment_to_clients": true
}
Response Example

{
    "code": 0,
    "message": "Comments added"
}
List estimate comments & history
Get the complete history and comments of an estimate.
OAuth Scope : ZohoInvoice.estimates.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "comments": [
        {
            "comment_id": 982000000567019,
            "estimate_id": 982000000567011,
            "description": "Estimate created",
            "commented_by_id": 982000000554041,
            "commented_by": "David Sujin",
            "comment_type": "system",
            "date": "2013-11-18",
            "date_description": "yesterday",
            "time": "2:02 AM",
            "operation_type": "Added",
            "transaction_id": " ",
            "transaction_type": "estimate"
        },
        {...},
        {...}
    ]
}
Update comment
Update an existing comment of an estimate.
OAuth Scope : ZohoInvoice.estimates.UPDATE

Arguments
description
string
A short note on the estimate
show_comment_to_clients
boolean
Boolean to show the comments to contacts in portal.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011/comments/982000000567019 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "description": "Estimate created",
    "show_comment_to_clients": " "
}
Response Example

{
    "code": 0,
    "message": "Comment has been updated successfully.",
    "comment": {
        "comment_id": 982000000567019,
        "estimate_id": 982000000567011,
        "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
        "commented_by_id": 982000000554041,
        "commented_by": "David Sujin",
        "date": "2013-11-18",
        "date_description": "yesterday",
        "time": "2:02 AM",
        "comment_type": "system"
    }
}
Delete a comment
Delete an estimate comment.
OAuth Scope : ZohoInvoice.estimates.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/estimates/982000000567011/comments/982000000567019 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The comment has been deleted."
}




Invoices
An invoice is a statement of items sold by a seller. It includes all the details of sale including units of goods, price of goods sold, shipping details, etc.

Possible error codes:
Error Code	Message
1001	Invoice Number already exist
1002	Contact Person does not exist
3009	The contact details of this invoice cannot be edited as the credits have been applied to it
3010	The customer for this invoice cannot be changed because payments have been recorded for this invoice
4001	Payments have been recorded for these invoices.Hence they cannot be deleted
12008	This invoice has credits applied to it. Hence, it cannot be deleted

End Points
POST  
/invoices
GET   
/invoices
PUT   
/invoices/{invoice_id}
GET   
/invoices/{invoice_id}
DELETE
/invoices/{invoice_id}
PUT   
/invoice/{invoice_id}/customfields
POST  
/invoices/{invoice_id}/status/sent
POST  
/invoices/{invoice_id}/status/void
POST  
/invoices/{invoice_id}/status/draft
POST  
/invoices/{invoice_id}/email
GET   
/invoices/{invoice_id}/email
POST  
/invoices/email
POST  
/invoices/{invoice_id}/paymentreminder
GET   
/invoices/{invoice_id}/paymentreminder
POST  
/invoices/paymentreminder
GET   
/invoices/pdf
GET   
/invoices/print
POST  
/invoices/{invoice_id}/paymentreminder/disable
POST  
/invoices/{invoice_id}/paymentreminder/enable
POST  
/invoices/{invoice_id}/writeoff
POST  
/invoices/{invoice_id}/writeoff/cancel
PUT   
/invoices/{invoice_id}/address/billing
PUT   
/invoices/{invoice_id}/address/shipping
GET   
/invoices/templates
PUT   
/invoices/{invoice_id}/templates/{template_id}
GET   
/invoices/{invoice_id}/payments
GET   
/invoices/{invoice_id}/creditsapplied
POST  
/invoices/{invoice_id}/credits
DELETE
/invoices/{invoice_id}/payments/{invoice_payment_id}
DELETE
/invoices/{invoice_id}/creditsapplied/{creditnotes_invoice_id}
POST  
/invoices/{invoice_id}/attachment
PUT   
/invoices/{invoice_id}/attachment
GET   
/invoices/{invoice_id}/attachment
DELETE
/invoices/{invoice_id}/attachment
DELETE
/invoices/expenses/{expense_id}/receipt
POST  
/invoices/{invoice_id}/comments
GET   
/invoices/{invoice_id}/comments
PUT   
/invoices/{invoice_id}/comments/{comment_id}
DELETE
/invoices/{invoice_id}/comments/{comment_id}
Attribute
invoice_id
string
The ID of the invoice
ach_payment_initiated
boolean
To check initiation of ACH Payment
invoice_number
string
An unique number given to the invoice. Maximum length [100]
is_pre_gst
boolean
🇮🇳 only
Applicable for transactions that fall before july 1, 2017
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer.
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_treatment
string
🇲🇽 only
VAT treatment for the Estimate.Allowed Values:
home_country_mexico,border_region_mexico,non_mexico supported only for MX.
cfdi_usage
string
🇲🇽 only
Choose CFDI Usage. Allowed values:
acquisition_of_merchandise, return_discount_bonus, general_expense, buildings, furniture_office_equipment, transport_equipment, computer_equipmentdye_molds_tools, telephone_communication, satellite_communication, other_machinery_equipment, hospital_expense, medical_expense_disability, funeral_expense, donation, interest_mortage_loans, contribution_sar, medical_expense_insurance_pormium, school_transportation_expense, deposit_saving_account, payment_educational_service, no_tax_effect, payment, payroll.
vat_treatment
string
🇬🇧 only
(Optional) VAT treatment for the invoices. VAT treatment denotes the location of the customer, if the customer resides in UK then the VAT treatment is uk. If the customer is in an EU country & VAT registered, you are resides in Northen Ireland and selling Goods then his VAT treatment is eu_vat_registered, if he resides outside of the UK then his VAT treatment is overseas (For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
vat_reg_no
string
Enter VAT registration number.
date
string
invoice date. Date format yyyy-mm-dd
status
string
Status of the invoice. Allowed Values: sent, draft, overdue, paid, void, unpaid, partially_paid and viewed
payment_terms
integer
Payment terms in days e.g. 15, 30, 60. Invoice due date will be calculated based on this. Maximum length [100]
payment_terms_label
string
Used to override the default payment terms label. Default value for 15 days is "Net 15 Days". Maximum length [100]
due_date
string
due date of the invoices. Date format yyyy-mm-dd
payment_expected_date
string
The expected date of payment
last_payment_date
string
The last payment date of the invoice
reference_number
string
The reference number of the invoice
customer_id
string
ID of the customer to whom the invoice is created.
customer_name
string
The name of the customer. Maximum length [100]
contact_persons
array
The IDs of the contact person associated with the contact.
currency_id
string
The currenct id of the currency
currency_code
string
The currency code in which the invoice is created.
exchange_rate
float
Exchange rate of the currency.
discount
float
Discount applied to the invoice. It can be either in % or in amount. e.g. 12.5% or 190. Maximum length [100]
is_discount_before_tax
boolean
Check if discount is exclusive of tax
discount_type
string
Type of discount. Allowed values: entity_level and item_level.
is_inclusive_tax
boolean
To check if discount is inclusive of tax
recurring_invoice_id
string
ID of the recurring invoice from which the invoice is created.
is_viewed_by_client
boolean
Check if invoice is viewed by client
has_attachment
boolean
To check if invoice has an attachment
client_viewed_time
string
Time when client viewed the statement
line_items
array
Items listed in invoice
Show Sub-Attributes arrow
shipping_charge
string
Shipping charges applied to the invoice. Maximum length [100]
adjustment
double
Adjustments made to the invoice.
adjustment_description
string
Customize the adjustment description. E.g. Rounding off.
sub_total
float
The sub total of the all items
tax_total
double
The total amount of the tax levied
total
string
The total amount to be paid
taxes
array
List of the taxes levied
Show Sub-Attributes arrow
payment_reminder_enabled
boolean
Boolean to check if reminders have been enabled
payment_made
float
The amount paid
credits_applied
float
The credits applied
tax_amount_withheld
float
The tax amount which has been withheld
balance
string
The unpaid amount
write_off_amount
float
The write off amount. i.e. the amount which is not expected to be returned. Like a bad debt
allow_partial_payments
boolean
Boolean to check if partial payments are allowed for the contact
price_precision
integer
The precision value on the price
payment_options
object
Payment options available for payment
Show Sub-Attributes arrow
is_emailed
boolean
Boolean check to see if the mail has been sent
reminders_sent
integer
The number of reminders sent
last_reminder_sent_date
string
The date the last email was sent
billing_address
object
Billing address of the contact
Show Sub-Attributes arrow
shipping_address
object
Shipping address of the contact
Show Sub-Attributes arrow
notes
string
The notes added below expressing gratitude or for conveying some information.
terms
string
The terms added below expressing gratitude or for conveying some information.
custom_fields
array
Custom fields for an invoice.
Show Sub-Attributes arrow
template_id
string
ID of the pdf template associated with the invoice.
template_name
string
Name of the invoice template used
created_time
string
The time of creation of the invoices
last_modified_time
string
Date of last modification of the invoice
attachment_name
string
Name of the file attached
can_send_in_mail
boolean
To check if attachment can be sent in email
salesperson_id
string
ID of the salesperson linked to invoice
salesperson_name
string
Name of the salesperson. Maximum length [200]
invoice_url
string
Url of invoice as a link
Example

{
    "invoice_id": 982000000567114,
    "ach_payment_initiated": false,
    "invoice_number": "INV-00003",
    "is_pre_gst": true,
    "place_of_supply": "TN",
    "gst_no": "22AAAAA0000A1Z5",
    "gst_treatment": "business_gst",
    "tax_treatment": "vat_registered",
    "cfdi_usage": "acquisition_of_merchandise",
    "vat_treatment": "string",
    "vat_reg_no": "string",
    "date": "2013-11-17",
    "status": "draft",
    "payment_terms": 15,
    "payment_terms_label": "Net 15",
    "due_date": "2013-12-03",
    "payment_expected_date": " ",
    "last_payment_date": " ",
    "reference_number": " ",
    "customer_id": 982000000567001,
    "customer_name": "Bowman & Co",
    "contact_persons": [
        "982000000870911",
        "982000000870915"
    ],
    "currency_id": 982000000000190,
    "currency_code": "USD",
    "exchange_rate": 1,
    "discount": 0,
    "is_discount_before_tax": true,
    "discount_type": "item_level",
    "is_inclusive_tax": false,
    "recurring_invoice_id": " ",
    "is_viewed_by_client": false,
    "has_attachment": false,
    "client_viewed_time": "",
    "line_items": [
        {
            "line_item_id": 982000000567021,
            "item_id": 982000000030049,
            "project_id": 90300000087378,
            "project_name": "Sample Project",
            "time_entry_ids": [],
            "item_type": "goods",
            "product_type": "goods",
            "expense_id": " ",
            "name": "Hard Drive",
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "item_order": 1,
            "bcy_rate": 120,
            "rate": 120,
            "quantity": 1,
            "unit": " ",
            "discount_amount": 0,
            "discount": 0,
            "tax_id": 982000000557028,
            "tds_tax_id": "982000000557012",
            "tax_name": "VAT",
            "tax_type": "tax",
            "tax_percentage": 12.5,
            "item_total": 120,
            "sat_item_key_code": 71121206,
            "unitkey_code": "E48"
        }
    ],
    "shipping_charge": 0,
    "adjustment": 0,
    "adjustment_description": " ",
    "sub_total": 153,
    "tax_total": 22.6,
    "total": 40.6,
    "taxes": [
        {
            "tax_name": "VAT",
            "tax_amount": 19.13
        }
    ],
    "payment_reminder_enabled": true,
    "payment_made": 26.91,
    "credits_applied": 22.43,
    "tax_amount_withheld": 0,
    "balance": 40.6,
    "write_off_amount": 0,
    "allow_partial_payments": true,
    "price_precision": 2,
    "payment_options": {
        "payment_gateways": [
            {
                "configured": true,
                "additional_field1": "standard",
                "gateway_name": "paypal"
            }
        ]
    },
    "is_emailed": false,
    "reminders_sent": 1,
    "last_reminder_sent_date": " ",
    "billing_address": {
        "address": "4900 Hopyard Rd, Suite 310",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": "+1-925-924-9600"
    },
    "shipping_address": {
        "address": "4900 Hopyard Rd, Suite 310",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": "+1-925-924-9600"
    },
    "notes": "Looking forward for your business.",
    "terms": "Terms & Conditions apply",
    "custom_fields": [
        {
            "customfield_id": 439910000000236000,
            "data_type": "number",
            "index": 1,
            "label": "Record Number",
            "show_on_pdf": true,
            "show_in_all_pdf": true,
            "value": 23
        }
    ],
    "template_id": 982000000000143,
    "template_name": "Service - Classic",
    "created_time": "2013-11-17T02:17:40-0800",
    "last_modified_time": "2013-12-18T02:02:51-0800",
    "attachment_name": " ",
    "can_send_in_mail": true,
    "salesperson_id": " ",
    "salesperson_name": " ",
    "invoice_url": "https://invoice.zoho.com/portal/zylkar/secure?CInvoiceID=23d84d0cf64f9a72ea0c66fded25a08c8bafd0ab508aff05323a9f80e2cd03fdc5dd568d3d6407bbda969d3e870d740b6fce549a9438c4ea"
}
Create an invoice
Create an invoice for your customer.
OAuth Scope : ZohoInvoice.invoices.CREATE

Arguments
customer_id
string
(Required)
ID of the customer to whom the invoice is created.
contact_persons
array
The IDs of the contact person associated with the contact.
invoice_number
string
An unique number given to the invoice. Maximum length [100]
reference_number
string
The reference number of the invoice
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
vat_treatment
string
🇬🇧 only
(Optional) VAT treatment for the invoices. VAT treatment denotes the location of the customer, if the customer resides in UK then the VAT treatment is uk. If the customer is in an EU country & VAT registered, you are resides in Northen Ireland and selling Goods then his VAT treatment is eu_vat_registered, if he resides outside of the UK then his VAT treatment is overseas (For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_treatment
string
🇲🇽 only
VAT treatment for the Estimate.Allowed Values:
home_country_mexico,border_region_mexico,non_mexico supported only for MX.
cfdi_usage
string
🇲🇽 only
Choose CFDI Usage. Allowed values:
acquisition_of_merchandise, return_discount_bonus, general_expense, buildings, furniture_office_equipment, transport_equipment, computer_equipmentdye_molds_tools, telephone_communication, satellite_communication, other_machinery_equipment, hospital_expense, medical_expense_disability, funeral_expense, donation, interest_mortage_loans, contribution_sar, medical_expense_insurance_pormium, school_transportation_expense, deposit_saving_account, payment_educational_service, no_tax_effect, payment, payroll.
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer.
template_id
string
ID of the pdf template associated with the invoice.
date
string
(Required)
invoice date. Date format yyyy-mm-dd
payment_terms
integer
Payment terms in days e.g. 15, 30, 60. Invoice due date will be calculated based on this. Maximum length [100]
payment_terms_label
string
Used to override the default payment terms label. Default value for 15 days is "Net 15 Days". Maximum length [100]
due_date
string
due date of the invoices. Date format yyyy-mm-dd
discount
float
Discount applied to the invoice. It can be either in % or in amount. e.g. 12.5% or 190. Maximum length [100]
is_discount_before_tax
boolean
Check if discount is exclusive of tax
discount_type
string
Type of discount. Allowed values: entity_level and item_level.
is_inclusive_tax
boolean
To check if discount is inclusive of tax
exchange_rate
float
Exchange rate of the currency.
recurring_invoice_id
string
ID of the recurring invoice from which the invoice is created.
invoiced_estimate_id
string
ID of the invoice from which the invoice is created.
salesperson_name
string
Name of the salesperson. Maximum length [200]
custom_fields
array
Custom fields for an invoice.
Show Sub-Attributes arrow
project_id
string
Unique ID of the projet associated to an invoice
line_items
array
(Required)
Line items of an invoice.
Show Sub-Attributes arrow
payment_options
object
Payment options available for payment
Show Sub-Attributes arrow
allow_partial_payments
boolean
Boolean to check if partial payments are allowed for the contact
custom_body
string
Customized email content
custom_subject
string
Customized Subject line
notes
string
The notes added below expressing gratitude or for conveying some information.
terms
string
The terms added below expressing gratitude or for conveying some information.
shipping_charge
string
Shipping charges applied to the invoice. Maximum length [100]
adjustment
double
Adjustments made to the invoice.
adjustment_description
string
Customize the adjustment description. E.g. Rounding off.
reason
string
Description of the attachment
tax_authority_id
string
🇺🇸 , 🇨🇦 only
ID of the tax authority. Tax authority depends on the location of the customer. For example, if the customer is located in NY, then the tax authority is NY tax authority.
tax_exemption_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
ID of the tax exemption.
avatax_use_code
string
Avalara Integration only
Used to group like customers for exemption purposes. It is a custom value that links customers to a tax rule. Select from Avalara [standard codes][1] or enter a custom code. Maximum length [25]
avatax_tax_code
string
Avalara Integration only
A tax code is a unique label used to group Items (products, services, or charges) together. Maximum length [25]
avatax_exempt_no
string
Avalara Integration only
Exemption certificate number of the customer. Maximum length [25]
Query Parameters
send
Send the invoice to the contact person(s) associated with the invoice. Allowed values true and false.
ignore_auto_number_generation
Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values true and false
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "customer_id": 982000000567001,
    "contact_persons": [
        "982000000870911",
        "982000000870915"
    ],
    "invoice_number": "INV-00003",
    "reference_number": " ",
    "place_of_supply": "TN",
    "vat_treatment": "string",
    "gst_treatment": "business_gst",
    "tax_treatment": "vat_registered",
    "cfdi_usage": "acquisition_of_merchandise",
    "gst_no": "22AAAAA0000A1Z5",
    "template_id": 982000000000143,
    "date": "2013-11-17",
    "payment_terms": 15,
    "payment_terms_label": "Net 15",
    "due_date": "2013-12-03",
    "discount": 0,
    "is_discount_before_tax": true,
    "discount_type": "item_level",
    "is_inclusive_tax": false,
    "exchange_rate": 1,
    "recurring_invoice_id": " ",
    "invoiced_estimate_id": " ",
    "salesperson_name": " ",
    "custom_fields": [
        {
            "label": "Record Number",
            "value": 23
        }
    ],
    "project_id": 90300000087378,
    "line_items": [
        {
            "item_id": 982000000030049,
            "project_id": 90300000087378,
            "time_entry_ids": [],
            "expense_id": " ",
            "name": "Hard Drive",
            "product_type": "goods",
            "hsn_or_sac": 80540,
            "sat_item_key_code": 71121206,
            "unitkey_code": "E48",
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "item_order": 1,
            "rate": 120,
            "quantity": 1,
            "unit": " ",
            "discount": 0,
            "tax_id": 982000000557028,
            "tds_tax_id": "982000000557012",
            "tax_exemption_id": 11149000000061054,
            "avatax_use_code": "string",
            "avatax_exempt_no": "string",
            "tax_name": "VAT",
            "tax_type": "tax",
            "tax_percentage": 12.5,
            "item_total": 120
        }
    ],
    "payment_options": {
        "payment_gateways": [
            {
                "configured": true,
                "additional_field1": "standard",
                "gateway_name": "paypal"
            }
        ]
    },
    "allow_partial_payments": true,
    "custom_body": " ",
    "custom_subject": " ",
    "notes": "Looking forward for your business.",
    "terms": "Terms & Conditions apply",
    "shipping_charge": 0,
    "adjustment": 0,
    "adjustment_description": " ",
    "reason": " ",
    "tax_authority_id": 11149000000061052,
    "tax_exemption_id": 11149000000061054,
    "avatax_use_code": "string",
    "avatax_tax_code": "string",
    "avatax_exempt_no": "string"
}
Response Example

{
    "code": 0,
    "message": "The invoice has been created.",
    "invoice": {
        "invoice_id": 982000000567114,
        "ach_payment_initiated": false,
        "invoice_number": "INV-00003",
        "is_pre_gst": true,
        "place_of_supply": "TN",
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "tax_treatment": "vat_registered",
        "cfdi_usage": "acquisition_of_merchandise",
        "vat_treatment": "string",
        "vat_reg_no": "string",
        "date": "2013-11-17",
        "status": "draft",
        "payment_terms": 15,
        "payment_terms_label": "Net 15",
        "due_date": "2013-12-03",
        "payment_expected_date": " ",
        "last_payment_date": " ",
        "reference_number": " ",
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "contact_persons": [
            "982000000870911",
            "982000000870915"
        ],
        "currency_id": 982000000000190,
        "currency_code": "USD",
        "exchange_rate": 1,
        "discount": 0,
        "is_discount_before_tax": true,
        "discount_type": "item_level",
        "is_inclusive_tax": false,
        "recurring_invoice_id": " ",
        "is_viewed_by_client": false,
        "has_attachment": false,
        "client_viewed_time": "",
        "line_items": [
            {
                "line_item_id": 982000000567021,
                "item_id": 982000000030049,
                "project_id": 90300000087378,
                "project_name": "Sample Project",
                "time_entry_ids": [],
                "item_type": "goods",
                "product_type": "goods",
                "expense_id": " ",
                "name": "Hard Drive",
                "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
                "item_order": 1,
                "bcy_rate": 120,
                "rate": 120,
                "quantity": 1,
                "unit": " ",
                "discount_amount": 0,
                "discount": 0,
                "tax_id": 982000000557028,
                "tds_tax_id": "982000000557012",
                "tax_name": "VAT",
                "tax_type": "tax",
                "tax_percentage": 12.5,
                "item_total": 120,
                "sat_item_key_code": 71121206,
                "unitkey_code": "E48"
            }
        ],
        "shipping_charge": 0,
        "adjustment": 0,
        "adjustment_description": " ",
        "sub_total": 153,
        "tax_total": 22.6,
        "total": 40.6,
        "taxes": [
            {
                "tax_name": "VAT",
                "tax_amount": 19.13
            }
        ],
        "payment_reminder_enabled": true,
        "payment_made": 26.91,
        "credits_applied": 22.43,
        "tax_amount_withheld": 0,
        "balance": 40.6,
        "write_off_amount": 0,
        "allow_partial_payments": true,
        "price_precision": 2,
        "payment_options": {
            "payment_gateways": [
                {
                    "configured": true,
                    "additional_field1": "standard",
                    "gateway_name": "paypal"
                }
            ]
        },
        "is_emailed": false,
        "reminders_sent": 1,
        "last_reminder_sent_date": " ",
        "billing_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "shipping_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "notes": "Looking forward for your business.",
        "terms": "Terms & Conditions apply",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "number",
                "index": 1,
                "label": "Record Number",
                "show_on_pdf": true,
                "show_in_all_pdf": true,
                "value": 23
            }
        ],
        "template_id": 982000000000143,
        "template_name": "Service - Classic",
        "created_time": "2013-11-17T02:17:40-0800",
        "last_modified_time": "2013-12-18T02:02:51-0800",
        "attachment_name": " ",
        "can_send_in_mail": true,
        "salesperson_id": " ",
        "salesperson_name": " ",
        "invoice_url": "https://invoice.zoho.com/portal/zylkar/secure?CInvoiceID=23d84d0cf64f9a72ea0c66fded25a08c8bafd0ab508aff05323a9f80e2cd03fdc5dd568d3d6407bbda969d3e870d740b6fce549a9438c4ea"
    }
}
List invoices
List all invoices with pagination.
OAuth Scope : ZohoInvoice.invoices.READ

Query Parameters
invoice_number
An unique number given to the invoice. Maximum length [100]
item_name
item name.Variants: item_name_startswith and item_name_contains. Maximum length [100]
item_id
Unique item id.
item_description
Search invoices by item description.Variants: item_description_startswith and item_description_contains. Maximum length [100]
reference_number
The reference number of the invoice
customer_name
The name of the customer. Maximum length [100]
recurring_invoice_id
ID of the recurring invoice from which the invoice is created.
email
contact's email id. Maximum length [100]
total
The total amount to be paid
balance
The unpaid amount
custom_field
custom fields for invoice. Variants: custom_field_startswith and custom_field_contains
date
invoice date. Date format yyyy-mm-dd. Variants: due_date_start, due_date_end, due_date_before and due_date_after.
due_date
due date of the invoices. Date format yyyy-mm-dd. Variants: due_date_start, due_date_end, due_date_before and due_date_after
status
Search invoices by invoice status.Allowed Values: sent, draft, overdue, paid, void, unpaid, partially_paid and viewed
customer_id
ID of the customer to whom the invoice is created.
filter_by
Filter invoices by any status or payment expected date.Allowed Values: Status.All, Status.Sent, Status.Draft, Status.OverDue, Status.Paid, Status.Void, Status.Unpaid, Status.PartiallyPaid, Status.Viewed and Date.PaymentExpectedDate
search_text
Search invoices by invoice number or purchase order or customer name. Maximum length [100]
sort_column
Sort invoices.Allowed Values: customer_name, invoice_number, date, due_date, total, balance and created_time
zcrm_potential_id
Potential ID of a Deal in CRM.
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/invoices \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "invoices": [
        {
            "invoice_id": 982000000567114,
            "ach_payment_initiated": false,
            "customer_name": "Bowman & Co",
            "customer_id": 982000000567001,
            "status": "draft",
            "invoice_number": "INV-00003",
            "reference_number": " ",
            "date": "2013-11-17",
            "due_date": "2013-12-03",
            "due_days": "Due in 14 day(s)",
            "currency_id": 982000000000190,
            "schedule_time": "",
            "currency_code": "USD",
            "is_viewed_by_client": false,
            "has_attachment": false,
            "client_viewed_time": "",
            "total": 40.6,
            "balance": 40.6,
            "created_time": "2013-11-17T02:17:40-0800",
            "last_modified_time": "2013-12-18T02:02:51-0800",
            "is_emailed": false,
            "reminders_sent": 1,
            "last_reminder_sent_date": " ",
            "payment_expected_date": " ",
            "last_payment_date": " ",
            "custom_fields": [
                {
                    "customfield_id": 439910000000236000,
                    "data_type": "number",
                    "index": 1,
                    "label": "Record Number",
                    "show_on_pdf": true,
                    "show_in_all_pdf": true,
                    "value": 23
                }
            ],
            "documents": "",
            "salesperson_id": " ",
            "salesperson_name": " ",
            "shipping_charge": 0,
            "adjustment": 0,
            "write_off_amount": 0,
            "exchange_rate": 1
        },
        {...},
        {...}
    ]
}
Update an invoice
Update an existing invoice. To delete a line item just remove it from the line_items list.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Arguments
customer_id
string
(Required)
ID of the customer to whom the invoice is created.
contact_persons
array
The IDs of the contact person associated with the contact.
invoice_number
string
An unique number given to the invoice. Maximum length [100]
reference_number
string
The reference number of the invoice
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
vat_treatment
string
🇬🇧 only
(Optional) VAT treatment for the invoices. VAT treatment denotes the location of the customer, if the customer resides in UK then the VAT treatment is uk. If the customer is in an EU country & VAT registered, you are resides in Northen Ireland and selling Goods then his VAT treatment is eu_vat_registered, if he resides outside of the UK then his VAT treatment is overseas (For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_treatment
string
🇲🇽 only
VAT treatment for the Estimate.Allowed Values:
home_country_mexico,border_region_mexico,non_mexico supported only for MX.
cfdi_usage
string
🇲🇽 only
Choose CFDI Usage. Allowed values:
acquisition_of_merchandise, return_discount_bonus, general_expense, buildings, furniture_office_equipment, transport_equipment, computer_equipmentdye_molds_tools, telephone_communication, satellite_communication, other_machinery_equipment, hospital_expense, medical_expense_disability, funeral_expense, donation, interest_mortage_loans, contribution_sar, medical_expense_insurance_pormium, school_transportation_expense, deposit_saving_account, payment_educational_service, no_tax_effect, payment, payroll.
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer.
template_id
string
ID of the pdf template associated with the invoice.
date
string
invoice date. Date format yyyy-mm-dd
payment_terms
integer
Payment terms in days e.g. 15, 30, 60. Invoice due date will be calculated based on this. Maximum length [100]
payment_terms_label
string
Used to override the default payment terms label. Default value for 15 days is "Net 15 Days". Maximum length [100]
due_date
string
due date of the invoices. Date format yyyy-mm-dd
discount
float
Discount applied to the invoice. It can be either in % or in amount. e.g. 12.5% or 190. Maximum length [100]
is_discount_before_tax
boolean
Check if discount is exclusive of tax
discount_type
string
Type of discount. Allowed values: entity_level and item_level.
is_inclusive_tax
boolean
To check if discount is inclusive of tax
exchange_rate
float
Exchange rate of the currency.
recurring_invoice_id
string
ID of the recurring invoice from which the invoice is created.
invoiced_estimate_id
string
ID of the invoice from which the invoice is created.
salesperson_name
string
Name of the salesperson. Maximum length [200]
custom_fields
array
Custom fields for an invoice.
Show Sub-Attributes arrow
project_id
string
Unique ID of the projet associated to an invoice
line_items
array
(Required)
Line items of an invoice.
Show Sub-Attributes arrow
payment_options
object
Payment options available for payment
Show Sub-Attributes arrow
allow_partial_payments
boolean
Boolean to check if partial payments are allowed for the contact
custom_body
string
Customized email content
custom_subject
string
Customized Subject line
notes
string
The notes added below expressing gratitude or for conveying some information.
terms
string
The terms added below expressing gratitude or for conveying some information.
shipping_charge
string
Shipping charges applied to the invoice. Maximum length [100]
adjustment
double
Adjustments made to the invoice.
adjustment_description
string
Customize the adjustment description. E.g. Rounding off.
reason
string
Description of the attachment
tax_authority_id
string
🇺🇸 , 🇨🇦 only
ID of the tax authority. Tax authority depends on the location of the customer. For example, if the customer is located in NY, then the tax authority is NY tax authority.
tax_exemption_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
ID of the tax exemption.
avatax_use_code
string
Avalara Integration only
Used to group like customers for exemption purposes. It is a custom value that links customers to a tax rule. Select from Avalara [standard codes][1] or enter a custom code. Maximum length [25]
avatax_tax_code
string
Avalara Integration only
A tax code is a unique label used to group Items (products, services, or charges) together. Maximum length [25]
avatax_exempt_no
string
Avalara Integration only
Exemption certificate number of the customer. Maximum length [25]
Query Parameters
ignore_auto_number_generation
Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values true and false
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "customer_id": 982000000567001,
    "contact_persons": [
        "982000000870911",
        "982000000870915"
    ],
    "invoice_number": "INV-00003",
    "reference_number": " ",
    "place_of_supply": "TN",
    "vat_treatment": "string",
    "gst_treatment": "business_gst",
    "tax_treatment": "vat_registered",
    "cfdi_usage": "acquisition_of_merchandise",
    "gst_no": "22AAAAA0000A1Z5",
    "template_id": 982000000000143,
    "date": "2013-11-17",
    "payment_terms": 15,
    "payment_terms_label": "Net 15",
    "due_date": "2013-12-03",
    "discount": 0,
    "is_discount_before_tax": true,
    "discount_type": "item_level",
    "is_inclusive_tax": false,
    "exchange_rate": 1,
    "recurring_invoice_id": " ",
    "invoiced_estimate_id": " ",
    "salesperson_name": " ",
    "custom_fields": [
        {
            "label": "Record Number",
            "value": 23
        }
    ],
    "project_id": 90300000087378,
    "line_items": [
        {
            "item_id": 982000000030049,
            "project_id": 90300000087378,
            "time_entry_ids": [],
            "expense_id": " ",
            "name": "Hard Drive",
            "product_type": "goods",
            "hsn_or_sac": 80540,
            "sat_item_key_code": 71121206,
            "unitkey_code": "E48",
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "item_order": 1,
            "rate": 120,
            "quantity": 1,
            "unit": " ",
            "discount": 0,
            "tax_id": 982000000557028,
            "tds_tax_id": "982000000557012",
            "tax_exemption_id": 11149000000061054,
            "avatax_use_code": "string",
            "avatax_exempt_no": "string",
            "tax_name": "VAT",
            "tax_type": "tax",
            "tax_percentage": 12.5,
            "item_total": 120
        }
    ],
    "payment_options": {
        "payment_gateways": [
            {
                "configured": true,
                "additional_field1": "standard",
                "gateway_name": "paypal"
            }
        ]
    },
    "allow_partial_payments": true,
    "custom_body": " ",
    "custom_subject": " ",
    "notes": "Looking forward for your business.",
    "terms": "Terms & Conditions apply",
    "shipping_charge": 0,
    "adjustment": 0,
    "adjustment_description": " ",
    "reason": " ",
    "tax_authority_id": 11149000000061052,
    "tax_exemption_id": 11149000000061054,
    "avatax_use_code": "string",
    "avatax_tax_code": "string",
    "avatax_exempt_no": "string"
}
Response Example

{
    "code": 0,
    "message": "Invoice information has been updated.",
    "invoice": {
        "invoice_id": 982000000567114,
        "ach_payment_initiated": false,
        "invoice_number": "INV-00003",
        "date": "2013-11-17",
        "status": "draft",
        "is_pre_gst": true,
        "place_of_supply": "TN",
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "tax_treatment": "vat_registered",
        "cfdi_usage": "acquisition_of_merchandise",
        "vat_treatment": "string",
        "vat_reg_no": "string",
        "payment_terms": 15,
        "payment_terms_label": "Net 15",
        "due_date": "2013-12-03",
        "payment_expected_date": " ",
        "last_payment_date": " ",
        "reference_number": " ",
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "contact_persons": [
            "982000000870911",
            "982000000870915"
        ],
        "currency_id": 982000000000190,
        "currency_code": "USD",
        "exchange_rate": 1,
        "discount": 0,
        "is_discount_before_tax": true,
        "discount_type": "item_level",
        "is_inclusive_tax": false,
        "recurring_invoice_id": " ",
        "is_viewed_by_client": false,
        "has_attachment": false,
        "client_viewed_time": "",
        "line_items": [
            {
                "line_item_id": 982000000567021,
                "item_id": 982000000030049,
                "project_id": 90300000087378,
                "project_name": "Sample Project",
                "item_type": "goods",
                "product_type": "goods",
                "time_entry_ids": [],
                "expense_id": " ",
                "expense_receipt_name": "string",
                "name": "Hard Drive",
                "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
                "item_order": 1,
                "bcy_rate": 120,
                "rate": 120,
                "quantity": 1,
                "unit": " ",
                "discount_amount": 0,
                "discount": 0,
                "tax_id": 982000000557028,
                "tds_tax_id": "982000000557012",
                "tax_name": "VAT",
                "tax_type": "tax",
                "tax_percentage": 12.5,
                "item_total": 120,
                "sat_item_key_code": 71121206,
                "unitkey_code": "E48"
            }
        ],
        "shipping_charge": 0,
        "adjustment": 0,
        "adjustment_description": " ",
        "sub_total": 153,
        "tax_total": 22.6,
        "total": 40.6,
        "taxes": [
            {
                "tax_name": "VAT",
                "tax_amount": 19.13
            }
        ],
        "payment_reminder_enabled": true,
        "payment_made": 26.91,
        "credits_applied": 22.43,
        "tax_amount_withheld": 0,
        "balance": 40.6,
        "write_off_amount": 0,
        "allow_partial_payments": true,
        "price_precision": 2,
        "payment_options": {
            "payment_gateways": [
                {
                    "configured": true,
                    "additional_field1": "standard",
                    "gateway_name": "paypal"
                }
            ]
        },
        "is_emailed": false,
        "reminders_sent": 1,
        "last_reminder_sent_date": " ",
        "billing_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "shipping_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "notes": "Looking forward for your business.",
        "terms": "Terms & Conditions apply",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "number",
                "index": 1,
                "label": "Record Number",
                "show_on_pdf": true,
                "show_in_all_pdf": true,
                "value": 23
            }
        ],
        "template_id": 982000000000143,
        "template_name": "Service - Classic",
        "created_time": "2013-11-17T02:17:40-0800",
        "last_modified_time": "2013-12-18T02:02:51-0800",
        "attachment_name": " ",
        "can_send_in_mail": true,
        "salesperson_id": " ",
        "salesperson_name": " ",
        "invoice_url": "https://invoice.zoho.com/portal/zylkar/secure?CInvoiceID=23d84d0cf64f9a72ea0c66fded25a08c8bafd0ab508aff05323a9f80e2cd03fdc5dd568d3d6407bbda969d3e870d740b6fce549a9438c4ea"
    }
}
Get an invoice
Get the details of an invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Query Parameters
print
Print the exported pdf.
accept
Get the details of a particular invoice in formats such as json/ pdf/ html. Default format is json. Allowed values json pdf and html
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "invoice": {
        "invoice_id": 982000000567114,
        "ach_payment_initiated": false,
        "invoice_number": "INV-00003",
        "is_pre_gst": true,
        "place_of_supply": "TN",
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "tax_treatment": "vat_registered",
        "cfdi_usage": "acquisition_of_merchandise",
        "vat_treatment": "string",
        "vat_reg_no": "string",
        "date": "2013-11-17",
        "status": "draft",
        "payment_terms": 15,
        "payment_terms_label": "Net 15",
        "due_date": "2013-12-03",
        "payment_expected_date": " ",
        "last_payment_date": " ",
        "reference_number": " ",
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "contact_persons": [
            "982000000870911",
            "982000000870915"
        ],
        "currency_id": 982000000000190,
        "currency_code": "USD",
        "exchange_rate": 1,
        "discount": 0,
        "is_discount_before_tax": true,
        "discount_type": "item_level",
        "is_inclusive_tax": false,
        "recurring_invoice_id": " ",
        "is_viewed_by_client": false,
        "has_attachment": false,
        "client_viewed_time": "",
        "line_items": [
            {
                "line_item_id": 982000000567021,
                "item_id": 982000000030049,
                "project_id": 90300000087378,
                "project_name": "Sample Project",
                "item_type": "goods",
                "product_type": "goods",
                "time_entry_ids": [],
                "expense_id": " ",
                "expense_receipt_name": "string",
                "name": "Hard Drive",
                "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
                "item_order": 1,
                "bcy_rate": 120,
                "rate": 120,
                "quantity": 1,
                "unit": " ",
                "discount_amount": 0,
                "discount": 0,
                "tax_id": 982000000557028,
                "tds_tax_id": "982000000557012",
                "tax_name": "VAT",
                "tax_type": "tax",
                "tax_percentage": 12.5,
                "item_total": 120,
                "sat_item_key_code": 71121206,
                "unitkey_code": "E48"
            }
        ],
        "shipping_charge": 0,
        "adjustment": 0,
        "adjustment_description": " ",
        "sub_total": 153,
        "tax_total": 22.6,
        "total": 40.6,
        "taxes": [
            {
                "tax_name": "VAT",
                "tax_amount": 19.13
            }
        ],
        "payment_reminder_enabled": true,
        "payment_made": 26.91,
        "credits_applied": 22.43,
        "tax_amount_withheld": 0,
        "balance": 40.6,
        "write_off_amount": 0,
        "allow_partial_payments": true,
        "price_precision": 2,
        "payment_options": {
            "payment_gateways": [
                {
                    "configured": true,
                    "additional_field1": "standard",
                    "gateway_name": "paypal"
                }
            ]
        },
        "is_emailed": false,
        "reminders_sent": 1,
        "last_reminder_sent_date": " ",
        "billing_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "shipping_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "notes": "Looking forward for your business.",
        "terms": "Terms & Conditions apply",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "number",
                "index": 1,
                "label": "Record Number",
                "show_on_pdf": true,
                "show_in_all_pdf": true,
                "value": 23
            }
        ],
        "template_id": 982000000000143,
        "template_name": "Service - Classic",
        "created_time": "2013-11-17T02:17:40-0800",
        "last_modified_time": "2013-12-18T02:02:51-0800",
        "attachment_name": " ",
        "can_send_in_mail": true,
        "salesperson_id": " ",
        "salesperson_name": " ",
        "invoice_url": "https://invoice.zoho.com/portal/zylkar/secure?CInvoiceID=23d84d0cf64f9a72ea0c66fded25a08c8bafd0ab508aff05323a9f80e2cd03fdc5dd568d3d6407bbda969d3e870d740b6fce549a9438c4ea"
    }
}
Delete an invoice
Delete an existing invoice. Invoices which have payment or credits note applied cannot be deleted.
OAuth Scope : ZohoInvoice.invoices.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The invoice has been deleted."
}
Update custom field in existing invoices
Update the value of the custom field in existing invoices.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Arguments
customfield_id
long
value
integer
Value of the custom field
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/invoice/982000000567114/customfields \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


[
    {
        "customfield_id": "46000000012845",
        "value": 23
    }
]
Response Example

{
    "code": 0,
    "message": "Custom Fields Updated Successfully"
}
Mark an invoice as sent
Mark a draft invoice as sent.
OAuth Scope : ZohoInvoice.invoices.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/status/sent \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Invoice status has been changed to Sent."
}
Void an invoice
Mark an invoice status as void. Upon voiding, the payments and credits associated with the invoices will be unassociated and will be under customer credits.
OAuth Scope : ZohoInvoice.invoices.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/status/void \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Invoice status has been changed to Void."
}
Mark as draft
Mark a voided invoice as draft.
OAuth Scope : ZohoInvoice.invoices.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/status/draft \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Status of invoice changed from void to draft"
}
Email an invoice
Email an invoice to the customer. Input json string is not mandatory. If input json string is empty, mail will be send with default mail content.
OAuth Scope : ZohoInvoice.invoices.CREATE

Arguments
send_from_org_email_id
boolean
Boolean to trigger the email from the organization's email address
to_mail_ids
array
(Required)
Array of email addresses of the recipients.
cc_mail_ids
array
Array of email addresses of the recipients to be CC'd.
subject
string
The subject of the mail
body
string
The body/content of the mail
Query Parameters
send_customer_statement
Send customer statement pdf a with email.
send_attachment
Send the invoice attachment a with the email.
attachments
Files to be attached to the email
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/email \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "send_from_org_email_id": false,
    "to_mail_ids": [
        "willsmith@bowmanfurniture.com"
    ],
    "cc_mail_ids": [
        "peterparker@bowmanfurniture.com"
    ],
    "subject": "Invoice from Zillium Inc (Invoice#: INV-00001)",
    "body": "Dear Customer,         <br><br><br><br>Thanks for your business.         <br><br><br><br>The invoice INV-00001 is attached with this email. You can choose the easy way out and <a href= https://invoice.zoho.com/portal/zylkar/secure?CInvoiceID=b9800228e011ae86abe71227bdacb3c68e1af685f647dcaed747812e0b9314635e55ac6223925675b371fcbd2d5ae3dc  >pay online for this invoice.</a>         <br><br>Here's an overview of the invoice for your reference.         <br><br><br><br>Invoice Overview:         <br><br>Invoice  : INV-00001         <br><br>Date : 05 Aug 2013         <br><br>Amount : $541.82         <br><br><br><br>It was great working with you. Looking forward to working with you again.<br><br><br>\\nRegards<br>\\nZillium Inc<br>\\n\","
}
Response Example

{
    "code": 0,
    "message": "Your invoice has been sent."
}
Get invoice email content
Get the email content of an invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Query Parameters
email_template_id
Get the email content based on a specific email template. If this param is not inputted, then the content will be based on the email template associated with the customer. If no template is associated with the customer, then default template will be used.
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/email \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "data": {
        "bcc_mails": "",
        "gateways_configured": true,
        "gateways_associated": true,
        "bcc_mails_str": "",
        "body": "Dear Customer,         <br><br><br><br>Thanks for your business.         <br><br><br><br>The invoice INV-00001 is attached with this email. You can choose the easy way out and <a href= https://invoice.zoho.com/portal/zylkar/secure?CInvoiceID=b9800228e011ae86abe71227bdacb3c68e1af685f647dcaed747812e0b9314635e55ac6223925675b371fcbd2d5ae3dc  >pay online for this invoice.</a>         <br><br>Here's an overview of the invoice for your reference.         <br><br><br><br>Invoice Overview:         <br><br>Invoice  : INV-00001         <br><br>Date : 05 Aug 2013         <br><br>Amount : $541.82         <br><br><br><br>It was great working with you. Looking forward to working with you again.<br><br><br>\\nRegards<br>\\nZillium Inc<br>\\n\",",
        "documents": "",
        "customer_name": "Bowman & Co",
        "attach_pdf": true,
        "entity_id": "2000000007037",
        "cc_mails_list": [
            {
                "user_name": "David Sujin",
                "email": "string"
            }
        ],
        "file_name_without_extension": "INV-000004",
        "to_mails_str": "",
        "cc_mails_str": "",
        "from_email": "",
        "from_address": "",
        "deprecated_placeholders_used": [],
        "error_list": [],
        "subject": "Invoice from Zillium Inc (Invoice#: INV-00001)",
        "emailtemplates": [
            {
                "selected": true,
                "name": "Default",
                "email_template_id": "982000000000067"
            }
        ],
        "emailtemplate_documents": "",
        "to_contacts": [
            {
                "first_name": "David",
                "selected": true,
                "phone": "+1-925-921-9201",
                "email": "string",
                "last_name": "Sujin",
                "salutation": "Mr",
                "contact_person_id": 982000000567003,
                "mobile": "+1-4054439562"
            }
        ],
        "attachment_name": " ",
        "file_name": "INV-00001.pdf",
        "from_emails": [
            {
                "user_name": "David Sujin",
                "selected": true,
                "email": "string",
                "organization_contact_id": "2000000002266",
                "is_org_email_id": true
            }
        ],
        "customer_id": 982000000567001
    }
}
Email invoices
Send invoices to your customers by email. Maximum of 10 invoices can be sent at once.
OAuth Scope : ZohoInvoice.invoices.CREATE

Arguments
contacts
array
(Required)
Contacts to whom email or snail mail has to be sent.
Show Sub-Attributes arrow
Query Parameters
invoice_ids
(Required)
Comma separated invoice ids which are to be emailed.
Request Example

cURL

curl --request POST \
  --url 'https://www.zohoapis.com/invoice/v3/invoices/email?invoice_ids=' \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "contacts": [
        {
            "contact_id": 460000000026049,
            "email": true,
            "snail_mail": false
        }
    ]
}
Response Example

{
    "code": 0,
    "message": "Mission accomplished! We've sent all the invoices."
}
Remind Customer
Remind your customer about an unpaid invoice by email. Reminder will be sent, only for the invoices which are in open or overdue status.
OAuth Scope : ZohoInvoice.invoices.CREATE

Arguments
to_mail_ids
array
Array of email addresses of the recipients.
cc_mail_ids
array
(Required)
Array of email addresses of the recipients to be CC'd.
subject
string
The subject of the mail
body
string
content of the email
send_from_org_email_id
boolean
Boolean to trigger the email from the organization's email address
Query Parameters
send_customer_statement
Send customer statement pdf a with email.
attachments
Files to be attached to the email
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/paymentreminder \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "to_mail_ids": [
        "willsmith@bowmanfurniture.com"
    ],
    "cc_mail_ids": [
        "peterparker@bowmanfurniture.com"
    ],
    "subject": "Invoice from Zillium Inc (Invoice#: INV-00001)",
    "body": "<br>Dear Mr. Sujin,&nbsp;<br><br>You might have missed the payment date and the invoice is now overdue by&nbsp;1&nbsp;days.<br><br>----------------------------------------------------------------------------------------<br><h2>Invoice# : INV-000004 </h2>Dated : 23 Dec 2016<br>----------------------------------------------------------------------------------------<br><b>&nbsp;Due Date &nbsp; &nbsp; &nbsp; &nbsp; : &nbsp;&nbsp;23 Dec 2016</b><br><b>&nbsp;Amount &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : &nbsp;&nbsp;$139.65</b><br>----------------------------------------------------------------------------------------<br><br><span>Not to worry at all !&nbsp;</span>View your invoice and take the easy way out by making an&nbsp;<a href=\"https://invoice.zoho.com/portal/zilliuminc/index#/invoices/invoice/2000000007037 \">online payment</a>.<br><br>If you have already paid, please accept our apologies and kindly ignore this payment reminder.<br><br><br>Regards,<br><br>David Sujin<br>Zillium Inc<br><br><br>",
    "send_from_org_email_id": false
}
Response Example

{
    "code": 0,
    "message": "Your payment reminder has been sent."
}
Get payment reminder mail content
Get the mail content of the payment reminder.
OAuth Scope : ZohoInvoice.invoices.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/paymentreminder \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "data": {
        "bcc_mails": "",
        "gateways_configured": true,
        "gateways_associated": true,
        "bcc_mails_str": "",
        "body": "<br>Dear Mr. Sujin,&nbsp;<br><br>You might have missed the payment date and the invoice is now overdue by&nbsp;1&nbsp;days.<br><br>----------------------------------------------------------------------------------------<br><h2>Invoice# : INV-000004 </h2>Dated : 23 Dec 2016<br>----------------------------------------------------------------------------------------<br><b>&nbsp;Due Date &nbsp; &nbsp; &nbsp; &nbsp; : &nbsp;&nbsp;23 Dec 2016</b><br><b>&nbsp;Amount &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : &nbsp;&nbsp;$139.65</b><br>----------------------------------------------------------------------------------------<br><br><span>Not to worry at all !&nbsp;</span>View your invoice and take the easy way out by making an&nbsp;<a href=\"https://invoice.zoho.com/portal/zilliuminc/index#/invoices/invoice/2000000007037 \">online payment</a>.<br><br>If you have already paid, please accept our apologies and kindly ignore this payment reminder.<br><br><br>Regards,<br><br>David Sujin<br>Zillium Inc<br><br><br>",
        "documents": "",
        "customer_name": "Bowman & Co",
        "attach_pdf": true,
        "entity_id": "2000000007037",
        "cc_mails_list": [
            {
                "user_name": "David Sujin",
                "email": "string"
            }
        ],
        "file_name_without_extension": "INV-000004",
        "to_mails_str": "",
        "cc_mails_str": "",
        "from_email": "",
        "from_address": "",
        "deprecated_placeholders_used": [],
        "error_list": [],
        "subject": "Invoice from Zillium Inc (Invoice#: INV-00001)",
        "emailtemplates": [
            {
                "selected": true,
                "name": "Default",
                "email_template_id": "982000000000067"
            }
        ],
        "emailtemplate_documents": "",
        "to_contacts": [
            {
                "first_name": "David",
                "selected": true,
                "phone": "+1-925-921-9201",
                "email": "string",
                "last_name": "Sujin",
                "salutation": "Mr",
                "contact_person_id": 982000000567003,
                "mobile": "+1-4054439562"
            }
        ],
        "attachment_name": " ",
        "file_name": "INV-00001.pdf",
        "from_emails": [
            {
                "user_name": "David Sujin",
                "selected": true,
                "email": "string",
                "organization_contact_id": "2000000002266",
                "is_org_email_id": true
            }
        ],
        "customer_id": 982000000567001
    }
}
Bulk invoice reminder
Remind your customer about an unpaid invoices by email. Reminder mail will be send, only for the invoices is in open or overdue status. Maximum 10 invoices can be reminded at once.
OAuth Scope : ZohoInvoice.invoices.CREATE

Query Parameters
invoice_ids
(Required)
Array of invoice ids for which the reminder has to be sent.
Request Example

cURL

curl --request POST \
  --url 'https://www.zohoapis.com/invoice/v3/invoices/paymentreminder?invoice_ids=' \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "info": {
        "email_success_info": {
            "message": "The reminders were successfully sent",
            "sent_count": 2
        },
        "email_errors_info": [
            {
                "message": "The reminders were successfully sent",
                "ids": "2000000007037"
            }
        ],
        "code": 4083
    }
}
Bulk export Invoices
Maximum of 25 invoices can be exported in a single pdf.
OAuth Scope : ZohoInvoice.invoices.READ

Query Parameters
invoice_ids
(Required)
Comma separated invoice ids which are to be export as pdf.
Request Example

cURL

curl --request GET \
  --url 'https://www.zohoapis.com/invoice/v3/invoices/pdf?invoice_ids=' \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success"
}
Bulk print invoices
Export invoices as pdf and print them. Maximum of 25 invoices can be printed.
OAuth Scope : ZohoInvoice.invoices.READ

Query Parameters
invoice_ids
(Required)
Export invoices as pdf and print them. Maximum of 25 invoices can be printed.
Request Example

cURL

curl --request GET \
  --url 'https://www.zohoapis.com/invoice/v3/invoices/print?invoice_ids=' \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success"
}
Disable payment reminder
Disable automated payment reminders for an invoice.
OAuth Scope : ZohoInvoice.invoices.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/paymentreminder/disable \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Reminders stopped."
}
Enable payment reminder
Enable automated payment reminders for an invoice.
OAuth Scope : ZohoInvoice.invoices.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/paymentreminder/enable \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Reminders enabled."
}
Write off invoice
Write off the invoice balance amount of an invoice.
OAuth Scope : ZohoInvoice.invoices.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/writeoff \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Invoice has been written off"
}
Cancel write off
Cancel the write off amount of an invoice.
OAuth Scope : ZohoInvoice.invoices.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/writeoff/cancel \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The write off done for this invoice has been cancelled."
}
Update billing address
Updates the billing address for this invoice alone.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Arguments
address
string
Billing address of the customer
city
string
City of the customer's billing address
state
string
State of the customer's billing address
zip
string
ZIP code of the contact's billing address
country
string
Country of the contact's billing address
fax
string
FAX number of the customer
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/address/billing \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "address": "B-1104, 11F, \nHorizon International Tower, \nNo. 6, ZhiChun Road, HaiDian District",
    "city": "Beijing",
    "state": "Beijing",
    "zip": 1000881,
    "country": "string",
    "fax": "+86-10-82637827"
}
Response Example

{
    "code": 0,
    "message": "Billing address updated"
}
Update shipping address
Updates the shipping address for this invoice alone.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Arguments
address
string
Shipping address of the customer
city
string
City of the contact's shipping address
state
string
State of the Contact's shipping address
zip
string
ZIP code of the contact's shipping address
country
string
Contact's country for the given shipping address
fax
string
FAX number of the contact
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/address/shipping \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "address": "4900 Hopyard Rd, Suit 310",
    "city": "Pleasanton",
    "state": "CA",
    "zip": 945881,
    "country": "USA",
    "fax": "+1-925-924-9600"
}
Response Example

{
    "code": 0,
    "message": "Shipping address updated"
}
List invoice templates
Get all invoice pdf templates.
OAuth Scope : ZohoInvoice.invoices.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/invoices/templates \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "templates": [
        {
            "template_name": "Service - Classic",
            "template_id": 982000000000143,
            "template_type": "classic"
        },
        {...},
        {...}
    ]
}
Update invoice template
Update the pdf template associated with the invoice.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/templates/982000000000143 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Invoice information has been updated."
}
List invoice payments
Get the list of payments made for an invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/payments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "payments": [
        {
            "payment_id": 982000000567190,
            "payment_number": 7,
            "invoice_id": 982000000567114,
            "invoice_payment_id": 982000000567192,
            "payment_mode": "cash",
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "date": "2013-11-17",
            "reference_number": " ",
            "exchange_rate": 1,
            "amount": 10.57,
            "tax_amount_withheld": 0,
            "online_transaction_id": "",
            "is_single_invoice_payment": true
        },
        {...},
        {...}
    ]
}
List credits applied
Get the list of credits applied for an invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/creditsapplied \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "credits": [
        {
            "creditnote_id": 982000000567134,
            "creditnotes_invoice_id": "982000000567172",
            "creditnotes_number": "CN-00001",
            "credited_date": "2013-11-18",
            "amount_applied": 12.2
        },
        {...},
        {...}
    ]
}
Apply credits
Apply the customer credits either from credit notes or excess customer payments to an invoice. Multiple credits can be applied at once.
OAuth Scope : ZohoInvoice.invoices.CREATE

Arguments
invoice_payments
array
Payments applied to an invoice.
Show Sub-Attributes arrow
apply_creditnotes
array
Credits applied to invoice.
Show Sub-Attributes arrow
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/credits \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "invoice_payments": [
        {
            "payment_id": 460000000031003,
            "amount_applied": 15
        }
    ],
    "apply_creditnotes": [
        {
            "creditnote_id": 460000000029003,
            "amount_applied": 22.5
        }
    ]
}
Response Example

{
    "code": 0,
    "message": "Credits have been applied to the invoice(s)."
}
Delete a payment
Delete a payment made to an invoice.
OAuth Scope : ZohoInvoice.invoices.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/payments/982000000567192 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The payment has been deleted."
}
Delete applied credit
Delete a particular credit applied to an invoice.
OAuth Scope : ZohoInvoice.invoices.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/creditsapplied/982000000567172 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Credits applied to an invoice have been deleted."
}
Add attachment to an invoice
Attach a file to an invoice.
OAuth Scope : ZohoInvoice.invoices.CREATE

Query Parameters
can_send_in_mail
True to send the attachment with the invoice when emailed.
attachment
The file to be attached.Allowed Extensions: gif, png, jpeg, jpg, bmp and pdf
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/attachment \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Your file has been successfully attached to the invoice."
}
Update attachment preference
Set whether you want to send the attached file while emailing the invoice.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Query Parameters
can_send_in_mail
(Required)
Boolean to send the attachment with the invoice when emailed.
Request Example

cURL

curl --request PUT \
  --url 'https://www.zohoapis.com/invoice/v3/invoices/982000000567114/attachment?can_send_in_mail=true' \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Invoice information has been updated."
}
Get an invoice attachment
Returns the file attached to the invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Query Parameters
preview
Get the thumbnail of the attachment.
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/attachment \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success"
}
Delete an attachment
Delete the file attached to the invoice.
OAuth Scope : ZohoInvoice.invoices.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/attachment \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Your file is no longer attached to the invoice."
}
Delete the expense receipt
Delete the expense receipts attached to an invoice which is raised from an expense.
OAuth Scope : ZohoInvoice.invoices.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/invoices/expenses//receipt \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The attached expense receipt has been deleted."
}
Add comment
Add a comment for an invoice.
OAuth Scope : ZohoInvoice.invoices.CREATE

Query Parameters
description
A short note added
payment_expected_date
Expected date pf payment
show_comment_to_clients
Boolean to check if the comment to be shown to the clients
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Comments added."
}
List invoice comments & history
Get the complete history and comments of an invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "comments": [
        {
            "comment_id": 982000000567019,
            "invoice_id": 982000000567114,
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "commented_by_id": 982000000554041,
            "commented_by": "John David",
            "comment_type": "system",
            "operation_type": "Added",
            "date": "2013-11-18",
            "date_description": "yesterday",
            "time": "2:38 AM",
            "transaction_id": "982000000567204",
            "transaction_type": "invoice"
        },
        {...},
        {...}
    ]
}
Update comment
Update an existing comment of an invoice.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Query Parameters
description
The comment on a invoice
show_comment_to_clients
Boolean to check if the comment to be shown to the clients
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/comments/982000000567019 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "comment_id": 982000000567019,
    "invoice_id": 982000000567114,
    "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
    "commented_by_id": 982000000554041,
    "commented_by": "John David",
    "date": "2013-11-17",
    "date_description": "yesterday",
    "time": "2:02 AM",
    "comment_type": "system"
}
Delete a comment
Delete an invoice comment.
OAuth Scope : ZohoInvoice.invoices.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/invoices/982000000567114/comments/982000000567019 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The comment has been deleted."
}





Recurring Invoices
Recurring Invoices are created in order to send invoice in a predefined time interval.

Possible error codes:
Error Code	Message
1002	Recurring Invoice does not exist
4031	Please enter a name for this Recurring Invoice

End Points
POST  
/recurringinvoices
GET   
/recurringinvoices
PUT   
/recurringinvoices/{recurring_invoice_id}
GET   
/recurringinvoices/{recurring_invoice_id}
DELETE
/recurringinvoices/{recurring_invoice_id}
POST  
/recurringinvoices/{recurring_invoice_id}/status/stop
POST  
/recurringinvoices/{recurring_invoice_id}/status/resume
PUT   
/recurringinvoices/{recurring_invoice_id}/templates/{template_id}
GET   
/recurringinvoices/{recurring_invoice_id}/comments
Attribute
recurring_invoice_id
string
Unique ID of the recurring invoice generated by the server.
recurrence_name
string
Unique name for the recurring profile given by the user. Maximum length [100]
reference_number
string
The Order number of the Recurring Invoice.
is_pre_gst
string
🇮🇳 only
Applicable for transactions that fall before july 1, 2017
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer.
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_treatment
string
🇲🇽 only
VAT treatment for the Estimate.Allowed Values:
home_country_mexico,border_region_mexico,non_mexico supported only for MX.
cfdi_usage
string
🇲🇽 only
Choose CFDI Usage. Allowed values:
acquisition_of_merchandise, return_discount_bonus, general_expense, buildings, furniture_office_equipment, transport_equipment, computer_equipmentdye_molds_tools, telephone_communication, satellite_communication, other_machinery_equipment, hospital_expense, medical_expense_disability, funeral_expense, donation, interest_mortage_loans, contribution_sar, medical_expense_insurance_pormium, school_transportation_expense, deposit_saving_account, payment_educational_service, no_tax_effect, payment, payroll.
allow_partial_payments
boolean
🇲🇽 only
Choose false for PPU-Single Payments and true for PPD-Installment Payments
vat_treatment
string
🇬🇧 only
(Optional) VAT treatment for the invoices. VAT treatment denotes the location of the customer, if the customer resides in UK then the VAT treatment is uk. If the customer is in an EU country & VAT registered, you are resides in Northen Ireland and selling Goods then his VAT treatment is eu_vat_registered, if he resides outside of the UK then his VAT treatment is overseas (For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
customer_name
string
Name of the customer to whom the recurring invoice is raised.
customer_id
string
Customer ID of the customer for whom the recurring invoice is raised.
currency_id
string
The currenct id of the currency
currency_code
string
The currency code in which the invoice is created.
start_date
string
The date on which the recurring invoice starts.
end_date
string
The date on which the recurring invoice expires.
last_sent_date
string
The date at which the last invoice was sent.
next_invoice_date
string
The date at which next invoice is to be sent.
custom_fields
array
Show Sub-Attributes arrow
line_items
array
Line items of an invoice.
Show Sub-Attributes arrow
billing_address
object
The address to which the Item has to be billed.
Show Sub-Attributes arrow
shipping_address
object
The address to which the Item has to be shipped.
Show Sub-Attributes arrow
payment_gateways
array
Show Sub-Attributes arrow
payment_options
object
Boolean check to see if a payment gateway ahs been configured
Show Sub-Attributes arrow
avatax_exempt_no
string
Avalara Integration only
Exemption certificate number of the customer. Maximum length [25]
avatax_use_code
string
Avalara Integration only
Used to group like customers for exemption purposes. It is a custom value that links customers to a tax rule. Select from Avalara [standard codes][1] or enter a custom code. Maximum length [25]
Example

{
    "recurring_invoice_id": "90300000072369",
    "recurrence_name": "MonthlyInvoice",
    "reference_number": "12314",
    "is_pre_gst": false,
    "gst_no": "22AAAAA0000A1Z5",
    "gst_treatment": "business_gst",
    "tax_treatment": "vat_registered",
    "cfdi_usage": "acquisition_of_merchandise",
    "allow_partial_payments": true,
    "vat_treatment": "overseas",
    "place_of_supply": "TN",
    "customer_name": "David Sujin",
    "customer_id": "903000000000099",
    "currency_id": "982000000000190",
    "currency_code": "USD",
    "start_date": "2016-06-12",
    "end_date": "2017-10-12",
    "last_sent_date": "2016-07-12",
    "next_invoice_date": "2016-08-17",
    "custom_fields": [
        {
            "value": "129890",
            "label": "label",
            "data_type": "text"
        }
    ],
    "line_items": [
        {
            "line_item_id": "982000000567021",
            "quantity": 1,
            "name": "Hard Drive",
            "item_total": 100,
            "sku": "LEV-JN-SL-36-GN",
            "product_type": "goods",
            "project_id": 90300000087378,
            "project_name": "Sample Project"
        }
    ],
    "billing_address": {
        "address": "4900 Hopyard Rd, Suite 310",
        "street2": "McMillan Avenue",
        "city": "Pleasanton",
        "state": "CA",
        "zip": "94588",
        "country": "U.S.A",
        "fax": "+1-925-924-9600"
    },
    "shipping_address": {
        "address": "4900 Hopyard Rd, Suite 310",
        "city": "Pleasanton",
        "state": "CA",
        "zip": "94588",
        "country": "U.S.A",
        "fax": "+1-925-924-9600"
    },
    "payment_gateways": [
        {
            "configured": true,
            "additional_field1": "standard",
            "gateway_name": "paypal"
        }
    ],
    "payment_options": true,
    "avatax_exempt_no": "string",
    "avatax_use_code": "string"
}
Create a Recurring Invoice
Creating a new recurring invoice.
OAuth Scope : ZohoInvoice.invoices.CREATE

Arguments
recurrence_name
string
(Required)
Unique name for the recurring profile given by the user. Maximum length [100]
reference_number
string
The Order number of the Recurring Invoice.
customer_id
string
(Required)
Customer ID of the customer for whom the recurring invoice is raised.
contact_persons
array
Contact Persons associated with the recurring invoice.
start_date
string
The date on which the recurring invoice starts.
end_date
string
The date on which the recurring invoice expires.
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
vat_treatment
string
🇬🇧 only
(Optional) VAT treatment for the invoices. VAT treatment denotes the location of the customer, if the customer resides in UK then the VAT treatment is uk. If the customer is in an EU country & VAT registered, you are resides in Northen Ireland and selling Goods then his VAT treatment is eu_vat_registered, if he resides outside of the UK then his VAT treatment is overseas (For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_treatment
string
🇲🇽 only
VAT treatment for the Estimate.Allowed Values:
home_country_mexico,border_region_mexico,non_mexico supported only for MX.
cfdi_usage
string
🇲🇽 only
Choose CFDI Usage. Allowed values:
acquisition_of_merchandise, return_discount_bonus, general_expense, buildings, furniture_office_equipment, transport_equipment, computer_equipmentdye_molds_tools, telephone_communication, satellite_communication, other_machinery_equipment, hospital_expense, medical_expense_disability, funeral_expense, donation, interest_mortage_loans, contribution_sar, medical_expense_insurance_pormium, school_transportation_expense, deposit_saving_account, payment_educational_service, no_tax_effect, payment, payroll.
allow_partial_payments
boolean
🇲🇽 only
Choose false for PPU-Single Payments and true for PPD-Installment Payments
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer.
recurrence_frequency
string
(Required)
The frequency of time interval at which the invoice is to be generated.
repeat_every
integer
The period between every recurrency frequency.
custom_fields
array
Show Sub-Attributes arrow
line_items
array
Line items of an invoice.
Show Sub-Attributes arrow
tax_id
string
Unique to denote the tax associate to the recurring invoice.
email
string
Email address of the customer.
payment_gateways
array
Show Sub-Attributes arrow
tax_authority_id
string
🇺🇸 , 🇨🇦 only
Unique ID of the tax authority. Tax authority depends on the location of the customer. For example, if the customer is located in NY, then the tax authority is NY tax authority.
tax_exemption_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
Unique ID of the tax exemption.
avatax_use_code
string
Avalara Integration only
Used to group like customers for exemption purposes. It is a custom value that links customers to a tax rule. Select from Avalara [standard codes][1] or enter a custom code. Maximum length [25]
avatax_exempt_no
string
Avalara Integration only
Exemption certificate number of the customer. Maximum length [25]
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/recurringinvoices \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "recurrence_name": "MonthlyInvoice",
    "reference_number": "12314",
    "customer_id": "903000000000099",
    "contact_persons": [
        "903000006532"
    ],
    "start_date": "2016-06-12",
    "end_date": "2017-10-12",
    "place_of_supply": "TN",
    "vat_treatment": "overseas",
    "gst_treatment": "business_gst",
    "tax_treatment": "vat_registered",
    "cfdi_usage": "acquisition_of_merchandise",
    "allow_partial_payments": true,
    "gst_no": "22AAAAA0000A1Z5",
    "recurrence_frequency": "weeks",
    "repeat_every": 2,
    "custom_fields": [
        {
            "value": "129890",
            "label": "label",
            "data_type": "text"
        }
    ],
    "line_items": [
        {
            "item_id": "90300000081501",
            "name": "Hard Drive",
            "description": "10 GB Space, 300 GB Transfer 100 Email Accounts 10 MySQL Databases",
            "rate": 100,
            "quantity": 1,
            "discount": 10,
            "tax_id": "903000000000356",
            "tds_tax_id": "982000000557012",
            "tax_exemption_id": "903000006345",
            "avatax_tax_code": "string",
            "avatax_use_code": "string",
            "item_total": 100,
            "product_type": "goods",
            "hsn_or_sac": 80540,
            "project_id": 90300000087378,
            "sat_item_key_code": 71121206,
            "unitkey_code": "E48"
        }
    ],
    "tax_id": "903000000000356",
    "email": "test@zylker.org",
    "payment_gateways": [
        {
            "configured": true,
            "additional_field1": "standard",
            "gateway_name": "paypal"
        }
    ],
    "tax_authority_id": "903000006345",
    "tax_exemption_id": "903000006345",
    "avatax_use_code": "string",
    "avatax_exempt_no": "string"
}
Response Example

{
    "code": 0,
    "message": "The recurring invoice has been created.",
    "recurring_invoice": {
        "recurring_invoice_id": "90300000072369",
        "recurrence_name": "MonthlyInvoice",
        "reference_number": "12314",
        "is_pre_gst": false,
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "tax_treatment": "vat_registered",
        "cfdi_usage": "acquisition_of_merchandise",
        "allow_partial_payments": true,
        "vat_treatment": "overseas",
        "place_of_supply": "TN",
        "customer_name": "David Sujin",
        "customer_id": "903000000000099",
        "currency_id": "982000000000190",
        "currency_code": "USD",
        "start_date": "2016-06-12",
        "end_date": "2017-10-12",
        "last_sent_date": "2016-07-12",
        "next_invoice_date": "2016-08-17",
        "custom_fields": [
            {
                "value": "129890",
                "label": "label",
                "data_type": "text"
            }
        ],
        "line_items": [
            {
                "line_item_id": "982000000567021",
                "quantity": 1,
                "name": "Hard Drive",
                "item_total": 100,
                "sku": "LEV-JN-SL-36-GN",
                "product_type": "goods",
                "project_id": 90300000087378,
                "project_name": "Sample Project"
            }
        ],
        "billing_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "street2": "McMillan Avenue",
            "city": "Pleasanton",
            "state": "CA",
            "zip": "94588",
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "shipping_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": "94588",
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "payment_gateways": [
            {
                "configured": true,
                "additional_field1": "standard",
                "gateway_name": "paypal"
            }
        ],
        "payment_options": true,
        "avatax_exempt_no": "string",
        "avatax_use_code": "string"
    }
}
List Recurring Invoice
List the details of all recurring invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Query Parameters
filter_by
Filter Recurring invoices by any status or payment expected date.Allowed Values: Status.All, Status.Active, Status.Stopped, Status.Expired
search_text
Search invoices by invoice number or purchase order or customer name.Maximum length [100]
sort_column
Sort based on column value
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/recurringinvoices \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Details of a recurring invoice is displayed successfully.",
    "recurring_invoices": [
        {
            "recurring_invoice_id": "90300000072369",
            "recurrence_name": "MonthlyInvoice",
            "customer_name": "David Sujin",
            "customer_id": "903000000000099",
            "currency_id": "982000000000190",
            "currency_code": "USD",
            "start_date": "2016-06-12",
            "end_date": "2017-10-12",
            "last_sent_date": "2016-07-12",
            "next_invoice_date": "2016-08-17",
            "custom_fields": [
                {
                    "value": "129890",
                    "label": "label",
                    "data_type": "text"
                }
            ],
            "line_items": [
                {
                    "line_item_id": "982000000567021",
                    "quantity": 1,
                    "name": "Hard Drive",
                    "item_total": 100,
                    "project_id": 90300000087378
                }
            ],
            "billing_address": {
                "address": "4900 Hopyard Rd, Suite 310",
                "street2": "McMillan Avenue",
                "city": "Pleasanton",
                "state": "CA",
                "zip": "94588",
                "country": "U.S.A",
                "fax": "+1-925-924-9600"
            },
            "shipping_address": {
                "address": "4900 Hopyard Rd, Suite 310",
                "city": "Pleasanton",
                "state": "CA",
                "zip": "94588",
                "country": "U.S.A",
                "fax": "+1-925-924-9600"
            },
            "payment_gateways": [
                {
                    "configured": true,
                    "additional_field1": "standard",
                    "gateway_name": "paypal"
                }
            ],
            "payment_options": true
        },
        {...},
        {...}
    ]
}
Update Recurring Invoice
Update the recurring invoice.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Arguments
recurrence_name
string
(Required)
Unique name for the recurring profile given by the user. Maximum length [100]
reference_number
string
The Order number of the Recurring Invoice.
customer_id
string
(Required)
Customer ID of the customer for whom the recurring invoice is raised.
contact_persons
array
Contact Persons associated with the recurring invoice.
start_date
string
The date on which the recurring invoice starts.
end_date
string
The date on which the recurring invoice expires.
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
vat_treatment
string
🇬🇧 only
(Optional) VAT treatment for the invoices. VAT treatment denotes the location of the customer, if the customer resides in UK then the VAT treatment is uk. If the customer is in an EU country & VAT registered, you are resides in Northen Ireland and selling Goods then his VAT treatment is eu_vat_registered, if he resides outside of the UK then his VAT treatment is overseas (For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_treatment
string
🇲🇽 only
VAT treatment for the Estimate.Allowed Values:
home_country_mexico,border_region_mexico,non_mexico supported only for MX.
cfdi_usage
string
🇲🇽 only
Choose CFDI Usage. Allowed values:
acquisition_of_merchandise, return_discount_bonus, general_expense, buildings, furniture_office_equipment, transport_equipment, computer_equipmentdye_molds_tools, telephone_communication, satellite_communication, other_machinery_equipment, hospital_expense, medical_expense_disability, funeral_expense, donation, interest_mortage_loans, contribution_sar, medical_expense_insurance_pormium, school_transportation_expense, deposit_saving_account, payment_educational_service, no_tax_effect, payment, payroll.
allow_partial_payments
boolean
🇲🇽 only
Choose false for PPU-Single Payments and true for PPD-Installment Payments
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer.
recurrence_frequency
string
(Required)
The frequency of time interval at which the invoice is to be generated.
repeat_every
integer
The period between every recurrency frequency.
custom_fields
array
Show Sub-Attributes arrow
line_items
array
Line items of an invoice.
Show Sub-Attributes arrow
tax_id
string
Unique to denote the tax associate to the recurring invoice.
email
string
Email address of the customer.
payment_gateways
array
Show Sub-Attributes arrow
tax_authority_id
string
🇺🇸 , 🇨🇦 only
Unique ID of the tax authority. Tax authority depends on the location of the customer. For example, if the customer is located in NY, then the tax authority is NY tax authority.
tax_exemption_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
Unique ID of the tax exemption.
avatax_use_code
string
Avalara Integration only
Used to group like customers for exemption purposes. It is a custom value that links customers to a tax rule. Select from Avalara [standard codes][1] or enter a custom code. Maximum length [25]
avatax_exempt_no
string
Avalara Integration only
Exemption certificate number of the customer. Maximum length [25]
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/recurringinvoices/90300000072369 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "recurrence_name": "MonthlyInvoice",
    "reference_number": "12314",
    "customer_id": "903000000000099",
    "contact_persons": [
        "903000006532"
    ],
    "start_date": "2016-06-12",
    "end_date": "2017-10-12",
    "place_of_supply": "TN",
    "vat_treatment": "overseas",
    "gst_treatment": "business_gst",
    "tax_treatment": "vat_registered",
    "cfdi_usage": "acquisition_of_merchandise",
    "allow_partial_payments": true,
    "gst_no": "22AAAAA0000A1Z5",
    "recurrence_frequency": "weeks",
    "repeat_every": 2,
    "custom_fields": [
        {
            "value": "129890",
            "label": "label",
            "data_type": "text"
        }
    ],
    "line_items": [
        {
            "item_id": "90300000081501",
            "name": "Hard Drive",
            "description": "10 GB Space, 300 GB Transfer 100 Email Accounts 10 MySQL Databases",
            "rate": 100,
            "quantity": 1,
            "discount": 10,
            "tax_id": "903000000000356",
            "tds_tax_id": "982000000557012",
            "tax_exemption_id": "903000006345",
            "avatax_tax_code": "string",
            "avatax_use_code": "string",
            "item_total": 100,
            "product_type": "goods",
            "hsn_or_sac": 80540,
            "project_id": 90300000087378,
            "sat_item_key_code": 71121206,
            "unitkey_code": "E48"
        }
    ],
    "tax_id": "903000000000356",
    "email": "test@zylker.org",
    "payment_gateways": [
        {
            "configured": true,
            "additional_field1": "standard",
            "gateway_name": "paypal"
        }
    ],
    "tax_authority_id": "903000006345",
    "tax_exemption_id": "903000006345",
    "avatax_use_code": "string",
    "avatax_exempt_no": "string"
}
Response Example

{
    "code": 0,
    "message": "success",
    "recurring_invoice": {
        "recurring_invoice_id": "90300000072369",
        "recurrence_name": "MonthlyInvoice",
        "reference_number": "12314",
        "is_pre_gst": false,
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "tax_treatment": "vat_registered",
        "cfdi_usage": "acquisition_of_merchandise",
        "allow_partial_payments": true,
        "vat_treatment": "overseas",
        "place_of_supply": "TN",
        "customer_name": "David Sujin",
        "customer_id": "903000000000099",
        "currency_id": "982000000000190",
        "currency_code": "USD",
        "start_date": "2016-06-12",
        "end_date": "2017-10-12",
        "last_sent_date": "2016-07-12",
        "next_invoice_date": "2016-08-17",
        "custom_fields": [
            {
                "value": "129890",
                "label": "label",
                "data_type": "text"
            }
        ],
        "line_items": [
            {
                "line_item_id": "982000000567021",
                "quantity": 1,
                "name": "Hard Drive",
                "item_total": 100,
                "sku": "LEV-JN-SL-36-GN",
                "product_type": "goods",
                "project_id": 90300000087378,
                "project_name": "Sample Project"
            }
        ],
        "billing_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "street2": "McMillan Avenue",
            "city": "Pleasanton",
            "state": "CA",
            "zip": "94588",
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "shipping_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": "94588",
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "payment_gateways": [
            {
                "configured": true,
                "additional_field1": "standard",
                "gateway_name": "paypal"
            }
        ],
        "payment_options": true,
        "avatax_exempt_no": "string",
        "avatax_use_code": "string"
    }
}
Get a Recurring Invoice
Get the details of a recurring invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/recurringinvoices/90300000072369 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Details of a recurring invoice is displayed successfully.",
    "recurring_invoice": {
        "recurring_invoice_id": "90300000072369",
        "recurrence_name": "MonthlyInvoice",
        "reference_number": "12314",
        "customer_name": "David Sujin",
        "customer_id": "903000000000099",
        "is_pre_gst": false,
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "tax_treatment": "vat_registered",
        "cfdi_usage": "acquisition_of_merchandise",
        "allow_partial_payments": true,
        "vat_treatment": "overseas",
        "place_of_supply": "TN",
        "company_name": "ABC Studios",
        "customer_email": "test@zylker.org",
        "customer_mobile_phone": 1234,
        "customer_phone": 1234,
        "photo_url": "https://secure.gravatar.com/avatar/xxxxxxxxxx?&d=mm",
        "currency_id": "982000000000190",
        "currency_code": "USD",
        "start_date": "2016-06-12",
        "end_date": "2017-10-12",
        "last_sent_date": "2016-07-12",
        "next_invoice_date": "2016-08-17",
        "custom_fields": [
            {
                "value": "129890",
                "label": "label",
                "data_type": "text"
            }
        ],
        "line_items": [
            {
                "line_item_id": "982000000567021",
                "quantity": 1,
                "name": "Hard Drive",
                "item_total": 100,
                "sku": "LEV-JN-SL-36-GN",
                "product_type": "goods",
                "project_id": 90300000087378,
                "project_name": "Sample Project"
            }
        ],
        "paid_invoices_total": 100,
        "unpaid_invoices_balance": 100,
        "billing_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "street2": "McMillan Avenue",
            "city": "Pleasanton",
            "state": "CA",
            "zip": "94588",
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "shipping_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": "94588",
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "payment_gateways": [
            {
                "configured": true,
                "additional_field1": "standard",
                "gateway_name": "paypal"
            }
        ],
        "payment_options": true
    }
}
Delete a Recurring Invoice
Delete an existing recurring invoice.
OAuth Scope : ZohoInvoice.invoices.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/recurringinvoices/90300000072369 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The recurring invoice is deleted successfully."
}
Stop a Recurring Invoice
Stop an active recurring invoice.
OAuth Scope : ZohoInvoice.invoices.CREATE

Arguments
recurring_invoice_id
string
Unique ID of the recurring invoice generated by the server.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/recurringinvoices/90300000072369/status/stop \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "recurring_invoice_id": "90300000072369"
}
Response Example

{
    "code": 0,
    "message": "The recurring invoice has been stopped."
}
Resume a Recurring Invoice
Resume a stopped recurring invoice.
OAuth Scope : ZohoInvoice.invoices.CREATE

Arguments
recurring_invoice_id
string
Unique ID of the recurring invoice generated by the server.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/recurringinvoices/90300000072369/status/resume \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "recurring_invoice_id": "90300000072369"
}
Response Example

{
    "code": 0,
    "message": "The recurring invoice has been resumed."
}
Update Recurring Invoice template
Update the pdf template associated with the recurring invoice.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Arguments
recurring_invoice_id
string
Unique ID of the recurring invoice generated by the server.
template_id
string
Unique ID of the recurring invoice template.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/recurringinvoices/90300000072369/templates/90300000001336 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "recurring_invoice_id": "90300000072369",
    "template_id": "90300043563547"
}
Response Example

{
    "code": 0,
    "message": "The template of the recurring invoice has been updated."
}
List Recurring Invoice History
Get the complete history and comments of a recurring invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/recurringinvoices/90300000072369/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The complete history and comments of a recurring invoice are displayed successfully.",
    "comments": [
        {
            "comment_id": "982000000567019",
            "recurring_invoice_id": "90300000072369",
            "comment_description": "Recurring Invoice created",
            "commented_by_id": "982000000554041",
            "commented_by": "David Sujin",
            "comment_type": "system",
            "operation_type": "Added",
            "date": "2016-06-05",
            "date_description": "yesterday",
            "time": "2:02 AM",
            "transaction_id": "903000002072369",
            "transaction_type": "estimate"
        },
        {...},
        {...}
    ]
}




Customer Payments
A payment object describes details regarding a particular customer payment. There can be multiple payments for a single invoice. Multiple invoices can be paid in a single payment as well.

Possible error codes:
Error Code	Message
3004	The Customer field can neither be blank nor incorrect. Please enter a correct Customer
9521	Partial payment for retainer invoice is not allowed. Please record the full payment
9523	Payment amount made to retainer invoice cannot be changed. You could instead delete it and add it back
24016	The amount entered is more than the balance due for this invoice

End Points
POST  
/customerpayments
GET   
/customerpayments
PUT   
/customerpayment/{customer_payment_id}/customfields
PUT   
/customerpayments/{payment_id}
GET   
/customerpayments/{payment_id}
DELETE
/customerpayments/{payment_id}
POST  
/customerpayments/{customer_payment_id}/refunds
GET   
/customerpayments/{customer_payment_id}/refunds
PUT   
/customerpayments/{customer_payment_id}/refunds/{refund_id}
GET   
/customerpayments/{customer_payment_id}/refunds/{refund_id}
DELETE
/customerpayments/{customer_payment_id}/refunds/{refund_id}
Attribute
payment_id
string
Unique ID of the payment generated by the server. Maximum length allowed [2000]
payment_mode
string
Mode through which payment is made. This can be check, cash, creditcard, banktransfer, bankremittance, autotransaction or others. Maximum length [100]
amount
double
Amount paid in the respective payment.
amount_refunded
double
Amount that is refunded. Refunds are applicable only for payments whose payment_mode is autotransaction. Refunds would be made to the respective card provided by the customer.
bank_charges
double
Denotes any additional bank charges.
date
string
Date on which payment is made. Date Format [yyyy-mm-dd]
status
string
Status of the payment. It can either be success or failure.
reference_number
string
Reference number generated for the payment. A string of your choice can also be used as the reference number. Maximum length of the reference number [100]
description
string
Description about the payment.
customer_id
string
Customer ID of the customer involved in the payment.
customer_name
string
Name of the customer to whom the invoice is raised. Maximum length [100]
email
string
Email address of the customer involved in the payment.
invoices
array
Invoice related to a payment
Show Sub-Attributes arrow
currency_code
string
Currency code in which the payment is made.
currency_symbol
string
Customer's currency symbol.
custom_fields
array
Custom fields for a payment received.
Show Sub-Attributes arrow
Example

{
    "payment_id": "9030000079467",
    "payment_mode": "cash",
    "amount": 450,
    "amount_refunded": 50,
    "bank_charges": 10,
    "date": "2016-06-05",
    "status": "success",
    "reference_number": "INV-384",
    "description": "Payment has been added to INV-384",
    "customer_id": "903000000000099",
    "customer_name": "Bowman Furniture",
    "email": "test@zylker.org",
    "invoices": [
        {
            "invoice_id": "90300000079426",
            "invoice_payment_id": "27161000000203281",
            "invoice_number": "INV-384",
            "date": "2016-06-05",
            "invoice_amount": 450,
            "amount_applied": 450,
            "balance_amount": 0
        }
    ],
    "currency_code": "USD",
    "currency_symbol": "$",
    "custom_fields": [
        {
            "customfield_id": 439910000000236000,
            "data_type": "number",
            "index": 1,
            "label": "Record Number",
            "show_on_pdf": true,
            "show_in_all_pdf": true,
            "value": 23
        }
    ]
}
Create a payment
Create a new payment.
OAuth Scope : ZohoInvoice.customerpayments.CREATE

Arguments
customer_id
string
(Required)
Customer ID of the customer involved in the payment.
payment_mode
string
(Required)
Mode through which payment is made. This can be check, cash, creditcard, banktransfer, bankremittance, autotransaction or others. Maximum length [100]
amount
double
(Required)
Amount paid in the respective payment.
date
string
(Required)
Date on which payment is made. Date Format [yyyy-mm-dd]
reference_number
string
Reference number generated for the payment. A string of your choice can also be used as the reference number. Maximum length of the reference number [100]
description
string
Description about the payment.
invoices
array
(Required)
List of invoices associated with the payment. Each invoice object contains invoice_id, invoice_number, date, invoice_amount, amount_applied and balance_amount.
Show Sub-Attributes arrow
exchange_rate
double
, default is 1
Exchange rate for the currency used in the invoices and customer's currency. The payment amount would be the multiplicative product of the original amount and the exchange rate.
payment_form
string
🇲🇽 only
Mode of Vendor Payment
bank_charges
double
Denotes any additional bank charges.
custom_fields
array
Custom fields for a payment received.
Show Sub-Attributes arrow
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/customerpayments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "customer_id": "903000000000099",
    "payment_mode": "cash",
    "amount": 450,
    "date": "2016-06-05",
    "reference_number": "INV-384",
    "description": "Payment has been added to INV-384",
    "invoices": [
        {
            "invoice_id": "90300000079426",
            "amount_applied": 450
        }
    ],
    "exchange_rate": 1,
    "payment_form": "cash",
    "bank_charges": 10,
    "custom_fields": [
        {
            "label": "Record Number",
            "value": 23
        }
    ]
}
Response Example

{
    "code": 0,
    "message": "The payment has been created.",
    "payment": {
        "payment_id": "9030000079467",
        "payment_mode": "cash",
        "amount": 450,
        "amount_refunded": 50,
        "bank_charges": 10,
        "date": "2016-06-05",
        "status": "success",
        "reference_number": "INV-384",
        "description": "Payment has been added to INV-384",
        "customer_id": "903000000000099",
        "customer_name": "Bowman Furniture",
        "email": "test@zylker.org",
        "invoices": [
            {
                "invoice_id": "90300000079426",
                "invoice_payment_id": "27161000000203281",
                "invoice_number": "INV-384",
                "date": "2016-06-05",
                "invoice_amount": 450,
                "amount_applied": 450,
                "balance_amount": 0
            }
        ],
        "currency_code": "USD",
        "currency_symbol": "$",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "number",
                "index": 1,
                "label": "Record Number",
                "show_on_pdf": true,
                "show_in_all_pdf": true,
                "value": 23
            }
        ]
    }
}
List Customer Payments
List all the payments made by your customer.
OAuth Scope : ZohoInvoice.customerpayments.READ

Query Parameters
customer_name
Search payments by customer name. Variants: customer_name_startswith and customer_name_contains. Maximum length [100]
reference_number
Search payments by reference number. Variants: reference_number_startswith and reference_number_contains. Maximum length [100]
date
Date on which payment is made. Date Format [yyyy-mm-dd]
amount
Search payments by payment amount. Variants: amount_less_than, amount_less_equals, amount_greater_than and amount_greater_equals
notes
Search payments by customer notes. Variants: notes_startswith and notes_contains
payment_mode
Search payments by payment mode. Variants: payment_mode_startswith and payment_mode_contains
filter_by
Filter payments by mode.Allowed Values: PaymentMode.All, PaymentMode.Check, PaymentMode.Cash, PaymentMode.BankTransfer, PaymentMode.Paypal, PaymentMode.CreditCard, PaymentMode.GoogleCheckout, PaymentMode.Credit, PaymentMode.Authorizenet, PaymentMode.BankRemittance, PaymentMode.Payflowpro, PaymentMode.Stripe, PaymentMode.TwoCheckout, PaymentMode.Braintree and PaymentMode.Others
sort_column
Sort based on selected column
search_text
Search payments by reference number or customer name or payment description. Maximum length [100]
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/customerpayments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "customerpayments": [
        {
            "payment_id": "9030000079467",
            "payment_number": "2",
            "invoice_number": "INV-384",
            "date": "2016-06-05",
            "payment_mode": "cash",
            "amount": 450,
            "bcy_amount": 450
        },
        {...},
        {...}
    ]
}
Update custom field in existing customerpayments
Update the value of the custom field in existing customerpayments.
OAuth Scope : ZohoInvoice.customerpayments.UPDATE

Arguments
customfield_id
long
value
integer
Value of the custom field
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/customerpayment/9030000079467/customfields \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


[
    {
        "customfield_id": "46000000012845",
        "value": 23
    }
]
Response Example

{
    "code": 0,
    "message": "Custom Fields Updated Successfully"
}
Update a payment
Update an existing payment information.
OAuth Scope : ZohoInvoice.customerpayments.UPDATE

Arguments
customer_id
string
(Required)
Customer ID of the customer involved in the payment.
payment_mode
string
(Required)
Mode through which payment is made. This can be check, cash, creditcard, banktransfer, bankremittance, autotransaction or others. Maximum length [100]
amount
double
(Required)
Amount paid in the respective payment.
date
string
(Required)
Date on which payment is made. Date Format [yyyy-mm-dd]
reference_number
string
Reference number generated for the payment. A string of your choice can also be used as the reference number. Maximum length of the reference number [100]
description
string
Description about the payment.
invoices
array
(Required)
Invoice associated to a payment
Show Sub-Attributes arrow
exchange_rate
double
, default is 1
Exchange rate for the currency used in the invoices and customer's currency. The payment amount would be the multiplicative product of the original amount and the exchange rate.
payment_form
string
🇲🇽 only
Mode of Vendor Payment
bank_charges
double
Denotes any additional bank charges.
custom_fields
array
Additional fields to support payment information
Show Sub-Attributes arrow
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/customerpayments/9030000079467 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "customer_id": "903000000000099",
    "payment_mode": "cash",
    "amount": 450,
    "date": "2016-06-05",
    "reference_number": "INV-384",
    "description": "Payment has been added to INV-384",
    "invoices": [
        {
            "invoice_id": "90300000079426",
            "invoice_payment_id": "27161000000203281",
            "amount_applied": 450
        }
    ],
    "exchange_rate": 1,
    "payment_form": "cash",
    "bank_charges": 10,
    "custom_fields": [
        {
            "label": "Record Number",
            "value": 23
        }
    ]
}
Response Example

{
    "code": 0,
    "message": "The payment details have been updated.",
    "payment": {
        "payment_id": "9030000079467",
        "payment_mode": "cash",
        "amount": 450,
        "amount_refunded": 50,
        "bank_charges": 10,
        "date": "2016-06-05",
        "status": "success",
        "reference_number": "INV-384",
        "description": "Payment has been added to INV-384",
        "customer_id": "903000000000099",
        "customer_name": "Bowman Furniture",
        "email": "test@zylker.org",
        "invoices": [
            {
                "invoice_id": "90300000079426",
                "invoice_payment_id": "27161000000203281",
                "invoice_number": "INV-384",
                "date": "2016-06-05",
                "invoice_amount": 450,
                "amount_applied": 450,
                "balance_amount": 0
            }
        ],
        "currency_code": "USD",
        "currency_symbol": "$",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "number",
                "index": 1,
                "label": "Record Number",
                "show_on_pdf": true,
                "show_in_all_pdf": true,
                "value": 23
            }
        ]
    }
}
Retrieve a payment
Details of an existing payment.
OAuth Scope : ZohoInvoice.customerpayments.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/customerpayments/9030000079467 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "payment": {
        "payment_id": "9030000079467",
        "payment_mode": "cash",
        "amount": 450,
        "amount_refunded": 50,
        "bank_charges": 10,
        "date": "2016-06-05",
        "status": "success",
        "reference_number": "INV-384",
        "description": "Payment has been added to INV-384",
        "online_transaction_id": "",
        "customer_id": "903000000000099",
        "customer_name": "Bowman Furniture",
        "email": "test@zylker.org",
        "invoices": [
            {
                "invoice_id": "90300000079426",
                "invoice_payment_id": "27161000000203281",
                "invoice_number": "INV-384",
                "date": "2016-06-05",
                "invoice_amount": 450,
                "amount_applied": 450,
                "balance_amount": 0
            }
        ],
        "currency_code": "USD",
        "currency_symbol": "$",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "number",
                "index": 1,
                "label": "Record Number",
                "show_on_pdf": true,
                "show_in_all_pdf": true,
                "value": 23
            }
        ]
    }
}
Delete a payment
Delete an existing payment.
OAuth Scope : ZohoInvoice.customerpayments.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/customerpayments/9030000079467 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The payment has been deleted."
}
Refund an excess customer payment
Refund the excess amount paid by the customer.
OAuth Scope : ZohoInvoice.customerpayments.CREATE

Arguments
date
string
(Required)
Date on which payment is made. Date Format [yyyy-mm-dd]
refund_mode
string
The method of refund. Maximum length [50]
reference_number
string
Reference number generated for the payment. A string of your choice can also be used as the reference number. Maximum length of the reference number [100]
amount
double
(Required)
Amount paid in the respective payment.
exchange_rate
double
, default is 1
Exchange rate for the currency used in the invoices and customer's currency. The payment amount would be the multiplicative product of the original amount and the exchange rate.
payment_form
string
🇲🇽 only
Mode of Vendor Payment
description
string
Description about the payment.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/customerpayments/9030000079467/refunds \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "date": "2016-06-05",
    "refund_mode": "cash",
    "reference_number": "INV-384",
    "amount": 450,
    "exchange_rate": 1,
    "payment_form": "cash",
    "description": "Payment has been added to INV-384"
}
Response Example

{
    "code": 0,
    "message": "The refund information for this payment has been saved.",
    "payment_refunds": [
        {
            "payment_refund_id": "3000000003017",
            "payment_id": "9030000079467",
            "date": "2016-06-05",
            "refund_mode": "cash",
            "reference_number": "INV-384",
            "amount": 450,
            "exchange_rate": 1,
            "payment_form": "cash",
            "description": "Payment has been added to INV-384"
        },
        {...},
        {...}
    ]
}
List refunds of a customer payment
List all the refunds pertaining to an existing customer payment.
OAuth Scope : ZohoInvoice.customerpayments.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/customerpayments/9030000079467/refunds \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The list of refunds of the customer is displayed successfully.",
    "payment_refunds": [
        {
            "payment_refund_id": "3000000003017",
            "payment_id": "9030000079467",
            "date": "2016-06-05",
            "refund_mode": "cash",
            "reference_number": "INV-384",
            "payment_number": "2",
            "customer_name": "Bowman Furniture",
            "amount_bcy": 10,
            "amount_fcy": 10
        },
        {...},
        {...}
    ]
}
Update a refund
Update the refunded transaction.
OAuth Scope : ZohoInvoice.customerpayments.UPDATE

Arguments
date
string
(Required)
Date on which payment is made. Date Format [yyyy-mm-dd]
refund_mode
string
The method of refund. Maximum length [50]
reference_number
string
Reference number generated for the payment. A string of your choice can also be used as the reference number. Maximum length of the reference number [100]
amount
double
(Required)
Amount paid in the respective payment.
exchange_rate
double
, default is 1
Exchange rate for the currency used in the invoices and customer's currency. The payment amount would be the multiplicative product of the original amount and the exchange rate.
payment_form
string
🇲🇽 only
Mode of Vendor Payment
description
string
Description about the payment.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/customerpayments/9030000079467/refunds/ \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "date": "2016-06-05",
    "refund_mode": "cash",
    "reference_number": "INV-384",
    "amount": 450,
    "exchange_rate": 1,
    "payment_form": "cash",
    "description": "Payment has been added to INV-384"
}
Response Example

{
    "code": 0,
    "message": "The refund information has been saved.",
    "payment_refunds": [
        {
            "payment_refund_id": "3000000003017",
            "payment_id": "9030000079467",
            "date": "2016-06-05",
            "refund_mode": "cash",
            "reference_number": "INV-384",
            "amount": 450,
            "exchange_rate": 1,
            "payment_form": "cash",
            "description": "Payment has been added to INV-384"
        },
        {...},
        {...}
    ]
}
Details of a refund
Obtain details of a particular refund of a customer payment.
OAuth Scope : ZohoInvoice.customerpayments.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/customerpayments/9030000079467/refunds/ \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The details of the refund are displayed successfully.",
    "payment_refunds": {
        "payment_refund_id": "3000000003017",
        "payment_id": "9030000079467",
        "date": "2016-06-05",
        "refund_mode": "cash",
        "reference_number": "INV-384",
        "amount": 450,
        "exchange_rate": 1,
        "payment_form": "cash",
        "description": "Payment has been added to INV-384"
    }
}
Delete a Refund
Delete refund pertaining to an existing customer payment.
OAuth Scope : ZohoInvoice.customerpayments.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/customerpayments/9030000079467/refunds/ \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The refund has been deleted."
}



Retainer Invoices
A retainer invoice is an advanced payment from a customer before we record any transaction with him.

Possible error codes:
Error Code	Message
9520	Retainer Invoices for which payments have been recorded cannot be deleted
9533	Cannot modify Retainer Invoice amount, once the payment is recorded

End Points
POST  
/retainerinvoices
GET   
/retainerinvoices
PUT   
/retainerinvoices/{retainerinvoice_id}
GET   
/retainerinvoices/{retainerinvoice_id}
DELETE
/retainerinvoices/{retainerinvoice_id}
POST  
/retainerinvoices/{retainerinvoice_id}/status/sent
PUT   
/retainerinvoices/{retainerinvoice_id}/templates/{template_id}
POST  
/retainerinvoices/{retainerinvoice_id}/status/void
POST  
/retainerinvoices/{reatinerinvoice_id}/status/draft
POST  
/retainerinvoices/{retainerinvoice_id}/email
GET   
/retainerinvoices/{retainerinvoice_id}/email
PUT   
/retainerinvoices/{retainerinvoice_id}/address/billing
GET   
/retainerinvoices/templates
POST  
/retainerinvoices/{retainerinvoice_id}/attachment
GET   
/retainerinvoices/{retainerinvoice_id}/attachment
DELETE
/retainerinvoices/{retainerinvoice_id}/documents/{document_id}
POST  
/retainerinvoices/{retainerinvoice_id}/comments
GET   
/retainerinvoices/{retainerinvoice_id}/comments
PUT   
/retainerinvoices/{retainerinvoice_id}/comments/{comment_id}
DELETE
/retainerinvoices/{retainerinvoice_id}/comments/{comment_id}
Attribute
retainerinvoice_id
string
The id of the retainerinvoice
retainerinvoice_number
string
number of the retainer invoice.
date
string
The date of creation of the retainer invoice.
status
string
retainer invoice status.Allowed Values: sent, draft, overdue, paid, void, unpaid, partially_paid and viewed
is_pre_gst
string
Applicable for transactions that fall before july 1, 2017
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
project_id
string
ID of the project
project_name
string
Name of the project
last_payment_date
string
The last payment date of the retainer invoice
reference_number
string
The reference number of the retainer invoice. Maximum length [100]
customer_id
string
ID of the customer the retainer invoice has to be created.
customer_name
string
The name of the customer. Maximum length [100]
contact_persons
array
The conatct persons associated with the contact.
currency_id
string
The currenct id of the currency
currency_code
string
The currency code in which the retainer invoice is created.
currency_symbol
string
The currency symbol in which the retainer invoice is created.
exchange_rate
float
Exchange rate of the currency.
is_viewed_by_client
boolean
Boolean is retainer invoice viewed by client in client portal.
client_viewed_time
boolean
client viewed time for retainer invoice in client portal.
is_inclusive_tax
boolean
To check if the total amount is inclusive of tax
line_items
array
Line items of a retainer invoice.
Show Sub-Attributes arrow
sub_total
float
The sub total of the all items
total
string
The total amount to be paid
taxes
array
List of the taxes levied
Show Sub-Attributes arrow
payment_made
float
The amount paid
payment_drawn
float
The amount drawn
balance
string
The unpaid amount
allow_partial_payments
boolean
Boolean to check if partial payments are allowed for the contact
price_precision
integer
The precision value on the price
payment_options
object
Payment options for the retainer invoice, online payment gateways and bank accounts. Will be displayed in the pdf.
Show Sub-Attributes arrow
is_emailed
string
Boolean check to if the email was sent
documents
array
documents attached to the retainer invoice
billing_address
object
Organisation's billing address
Show Sub-Attributes arrow
shipping_address
object
Organisation's shipping address
Show Sub-Attributes arrow
notes
string
The notes added below expressing gratitude or for conveying some information.
terms
string
The terms added below expressing gratitude or for conveying some information.
custom_fields
array
Custom fields for a retainer invoice.
Show Sub-Attributes arrow
template_id
string
ID of the pdf template associated with the retainer invoice.
template_name
string
Name of template used by organisation
page_width
string
Width of page of contents
page_height
string
Height of page of contents
orientation
string
Page orientation
template_type
string
The type of template type
created_time
string
The time of creation of the retainer invoice
last_modified_time
string
The time of last modification of the retainer invoice
created_by_id
string
Filted by ID of comment
attachment_name
string
name of file attached
can_send_in_mail
boolean
Check if attachment can be sent via mail
invoice_url
string
Url link of invoice
Example

{
    "retainerinvoice_id": 982000000567114,
    "retainerinvoice_number": "RET-00003",
    "date": "2013-11-17",
    "status": "draft",
    "is_pre_gst": false,
    "place_of_supply": "TN",
    "project_id": 982000000567154,
    "project_name": "string",
    "last_payment_date": " ",
    "reference_number": " ",
    "customer_id": 982000000567001,
    "customer_name": "Bowman & Co",
    "contact_persons": [
        "982000000567003",
        "982000000567003"
    ],
    "currency_id": 982000000000190,
    "currency_code": "USD",
    "currency_symbol": "USD",
    "exchange_rate": 1,
    "is_viewed_by_client": true,
    "client_viewed_time": true,
    "is_inclusive_tax": false,
    "line_items": [
        {
            "line_item_id": 982000000567021,
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "item_order": 1,
            "rate": 120,
            "bcy_rate": 120,
            "tax_id": 982000000557028,
            "tax_name": "VAT",
            "tax_type": "tax",
            "tax_percentage": 12.5,
            "item_total": 120
        }
    ],
    "sub_total": 153,
    "total": 40.6,
    "taxes": [
        {
            "tax_name": "VAT",
            "tax_amount": 19.13
        }
    ],
    "payment_made": 26.91,
    "payment_drawn": 26.91,
    "balance": 40.6,
    "allow_partial_payments": true,
    "price_precision": 2,
    "payment_options": {
        "payment_gateways": [
            {
                "gateway_name": "paypal"
            }
        ]
    },
    "is_emailed": false,
    "documents": [],
    "billing_address": {
        "address": "Suite 125, McMillan Avenue",
        "street2": "McMillan Avenue",
        "city": "San Francisco",
        "state": "CA",
        "zip": 94134,
        "country": "U.S.A",
        "fax": "+86-10-82637827"
    },
    "shipping_address": {
        "address": "Suite 125, McMillan Avenue",
        "street2": "McMillan Avenue",
        "city": "San Francisco",
        "state": "CA",
        "zip": 94134,
        "country": "U.S.A",
        "fax": "+86-10-82637827"
    },
    "notes": "Looking forward for your business.",
    "terms": "Terms & Conditions apply",
    "custom_fields": [
        {
            "customfield_id": 439910000000236000,
            "data_type": "number",
            "index": 1,
            "label": "Record Number",
            "show_on_pdf": true,
            "show_in_all_pdf": true,
            "value": 23
        }
    ],
    "template_id": 982000000000143,
    "template_name": "Service - Classic",
    "page_width": "8.27in",
    "page_height": "11.69in",
    "orientation": "portrait",
    "template_type": "classic",
    "created_time": "2013-11-17T02:31:51-0800",
    "last_modified_time": "2013-12-18T02:31:51-0800",
    "created_by_id": 14909000000072000,
    "attachment_name": "new file",
    "can_send_in_mail": true,
    "invoice_url": "https://invoice.zoho.com/portal/zylkar/secure?CInvoiceID=23d84d0cf64f9a72ea0c66fded25a08c8bafd0ab508aff05323a9f80e2cd03fdc5dd568d3d6407bbda969d3e870d740b6fce549a9438c4ea"
}
Create a retainer invoice
Create a retainer invoice for your customer.
OAuth Scope : ZohoInvoice.invoices.CREATE

Arguments
customer_id
string
(Required)
ID of the customer the retainer invoice has to be created.
reference_number
string
The reference number of the retainer invoice. Maximum length [100]
date
string
The date of creation of the retainer invoice.
contact_persons
array
The conatct persons associated with the contact.
custom_fields
array
Custom fields for a retainer invoice.
Show Sub-Attributes arrow
notes
string
The notes added below expressing gratitude or for conveying some information.
terms
string
The terms added below expressing gratitude or for conveying some information.
line_items
array
(Required)
Line items of an invoice.
Show Sub-Attributes arrow
payment_options
object
Payment options for the retainer invoice, online payment gateways and bank accounts. Will be displayed in the pdf.
Show Sub-Attributes arrow
template_id
string
ID of the pdf template associated with the retainer invoice.
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
Query Parameters
ignore_auto_number_generation
Ignore auto invoice number generation for this invoice. This mandates the invoice number. Allowed values true and false
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "customer_id": 982000000567001,
    "reference_number": " ",
    "date": "2013-11-17",
    "contact_persons": [
        "982000000567003",
        "982000000567003"
    ],
    "custom_fields": [
        {
            "label": "Record Number",
            "value": 23
        }
    ],
    "notes": "Looking forward for your business.",
    "terms": "Terms & Conditions apply",
    "line_items": [
        {
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "item_order": 1,
            "rate": 120
        }
    ],
    "payment_options": {
        "payment_gateways": [
            {
                "gateway_name": "paypal"
            }
        ]
    },
    "template_id": 982000000000143,
    "place_of_supply": "TN"
}
Response Example

{
    "code": 0,
    "message": "The retainer invoice has been created.",
    "retainerinvoices": {
        "retainerinvoice_id": 982000000567114,
        "retainerinvoice_number": "RET-00003",
        "date": "2013-11-17",
        "status": "draft",
        "is_pre_gst": false,
        "place_of_supply": "TN",
        "project_id": 982000000567154,
        "project_name": "string",
        "last_payment_date": " ",
        "reference_number": " ",
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "contact_persons": [
            "982000000567003",
            "982000000567003"
        ],
        "currency_id": 982000000000190,
        "currency_code": "USD",
        "currency_symbol": "USD",
        "exchange_rate": 1,
        "is_viewed_by_client": true,
        "client_viewed_time": true,
        "is_inclusive_tax": false,
        "line_items": [
            {
                "line_item_id": 982000000567021,
                "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
                "item_order": 1,
                "rate": 120,
                "bcy_rate": 120,
                "tax_id": 982000000557028,
                "tax_name": "VAT",
                "tax_type": "tax",
                "tax_percentage": 12.5,
                "item_total": 120
            }
        ],
        "sub_total": 153,
        "total": 40.6,
        "taxes": [
            {
                "tax_name": "VAT",
                "tax_amount": 19.13
            }
        ],
        "payment_made": 26.91,
        "payment_drawn": 26.91,
        "balance": 40.6,
        "allow_partial_payments": true,
        "price_precision": 2,
        "payment_options": {
            "payment_gateways": [
                {
                    "gateway_name": "paypal"
                }
            ]
        },
        "is_emailed": false,
        "documents": [],
        "billing_address": {
            "address": "Suite 125, McMillan Avenue",
            "street2": "McMillan Avenue",
            "city": "San Francisco",
            "state": "CA",
            "zip": 94134,
            "country": "U.S.A",
            "fax": "+86-10-82637827"
        },
        "shipping_address": {
            "address": "Suite 125, McMillan Avenue",
            "street2": "McMillan Avenue",
            "city": "San Francisco",
            "state": "CA",
            "zip": 94134,
            "country": "U.S.A",
            "fax": "+86-10-82637827"
        },
        "notes": "Looking forward for your business.",
        "terms": "Terms & Conditions apply",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "number",
                "index": 1,
                "label": "Record Number",
                "show_on_pdf": true,
                "show_in_all_pdf": true,
                "value": 23
            }
        ],
        "template_id": 982000000000143,
        "template_name": "Service - Classic",
        "page_width": "8.27in",
        "page_height": "11.69in",
        "orientation": "portrait",
        "template_type": "classic",
        "created_time": "2013-11-17T02:31:51-0800",
        "last_modified_time": "2013-12-18T02:31:51-0800",
        "created_by_id": 14909000000072000,
        "attachment_name": "new file",
        "can_send_in_mail": true,
        "invoice_url": "https://invoice.zoho.com/portal/zylkar/secure?CInvoiceID=23d84d0cf64f9a72ea0c66fded25a08c8bafd0ab508aff05323a9f80e2cd03fdc5dd568d3d6407bbda969d3e870d740b6fce549a9438c4ea"
    }
}
List Retainer invoices
List all retainer invoices with pagination.
OAuth Scope : ZohoInvoice.invoices.READ

Query Parameters
print
Print the exported pdf.
sort_column
Sort retainer invoices.Allowed Values: customer_name, retainer invoice_number, date, due_date, total, balance and created_time
filter_by
Filter invoices by any status or payment expected date.Allowed Values: Status.All, Status.Sent, Status.Draft, Status.OverDue, Status.Paid, Status.Void, Status.Unpaid, Status.PartiallyPaid, Status.Viewed and Date.PaymentExpectedDate
sort_order
The order for sorting
page
Number of pages
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "retainerinvoices": [
        {
            "retainerinvoice_id": 982000000567114,
            "customer_name": "Bowman & Co",
            "retainerinvoice_number": "RET-00003",
            "customer_id": 982000000567001,
            "status": "draft",
            "reference_number": " ",
            "project_or_estimate_name": "new project",
            "date": "2013-11-17",
            "currency_id": 982000000000190,
            "currency_code": "USD",
            "is_viewed_by_client": true,
            "client_viewed_time": true,
            "total": 40.6,
            "balance": 40.6,
            "created_time": "2013-11-17T02:31:51-0800",
            "last_modified_time": "2013-12-18T02:31:51-0800",
            "is_emailed": false,
            "last_payment_date": " ",
            "has_attachment": true
        },
        {...},
        {...}
    ]
}
Update a retainer invoice
Update an existing invoice.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Arguments
customer_id
string
(Required)
ID of the customer the retainer invoice has to be created.
reference_number
string
The reference number of the retainer invoice. Maximum length [100]
date
string
The date of creation of the retainer invoice.
contact_persons
array
The conatct persons associated with the contact.
custom_fields
array
Custom fields for a retainer invoice.
Show Sub-Attributes arrow
notes
string
The notes added below expressing gratitude or for conveying some information.
terms
string
The terms added below expressing gratitude or for conveying some information.
line_items
array
(Required)
Line items of a retainer invoice.
Show Sub-Attributes arrow
payment_options
object
Payment options for the retainer invoice, online payment gateways and bank accounts. Will be displayed in the pdf.
Show Sub-Attributes arrow
template_id
string
ID of the pdf template associated with the retainer invoice.
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
project_id
string
ID of the project
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "customer_id": 982000000567001,
    "reference_number": " ",
    "date": "2013-11-17",
    "contact_persons": [
        "982000000567003",
        "982000000567003"
    ],
    "custom_fields": [
        {
            "label": "Record Number",
            "value": 23
        }
    ],
    "notes": "Looking forward for your business.",
    "terms": "Terms & Conditions apply",
    "line_items": [
        {
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "item_order": 1,
            "rate": 120
        }
    ],
    "payment_options": {
        "payment_gateways": [
            {
                "gateway_name": "paypal"
            }
        ]
    },
    "template_id": 982000000000143,
    "place_of_supply": "TN",
    "project_id": 982000000567154
}
Response Example

{
    "code": 0,
    "message": "Retainer Invoice information has been updated.",
    "retainerinvoices": {
        "retainerinvoice_id": 982000000567114,
        "retainerinvoice_number": "RET-00003",
        "date": "2013-11-17",
        "status": "draft",
        "is_pre_gst": false,
        "place_of_supply": "TN",
        "project_id": 982000000567154,
        "project_name": "string",
        "last_payment_date": " ",
        "reference_number": " ",
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "contact_persons": [
            "982000000567003",
            "982000000567003"
        ],
        "currency_id": 982000000000190,
        "currency_code": "USD",
        "currency_symbol": "USD",
        "exchange_rate": 1,
        "is_viewed_by_client": true,
        "client_viewed_time": true,
        "is_inclusive_tax": false,
        "line_items": [
            {
                "line_item_id": 982000000567021,
                "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
                "item_order": 1,
                "rate": 120,
                "bcy_rate": 120,
                "tax_id": 982000000557028,
                "tax_name": "VAT",
                "tax_type": "tax",
                "tax_percentage": 12.5,
                "item_total": 120
            }
        ],
        "sub_total": 153,
        "total": 40.6,
        "taxes": [
            {
                "tax_name": "VAT",
                "tax_amount": 19.13
            }
        ],
        "payment_made": 26.91,
        "payment_drawn": 26.91,
        "balance": 40.6,
        "allow_partial_payments": true,
        "price_precision": 2,
        "payment_options": {
            "payment_gateways": [
                {
                    "gateway_name": "paypal"
                }
            ]
        },
        "is_emailed": false,
        "documents": [],
        "billing_address": {
            "address": "Suite 125, McMillan Avenue",
            "street2": "McMillan Avenue",
            "city": "San Francisco",
            "state": "CA",
            "zip": 94134,
            "country": "U.S.A",
            "fax": "+86-10-82637827"
        },
        "shipping_address": {
            "address": "Suite 125, McMillan Avenue",
            "street2": "McMillan Avenue",
            "city": "San Francisco",
            "state": "CA",
            "zip": 94134,
            "country": "U.S.A",
            "fax": "+86-10-82637827"
        },
        "notes": "Looking forward for your business.",
        "terms": "Terms & Conditions apply",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "number",
                "index": 1,
                "label": "Record Number",
                "show_on_pdf": true,
                "show_in_all_pdf": true,
                "value": 23
            }
        ],
        "template_id": 982000000000143,
        "template_name": "Service - Classic",
        "page_width": "8.27in",
        "page_height": "11.69in",
        "orientation": "portrait",
        "template_type": "classic",
        "created_time": "2013-11-17T02:31:51-0800",
        "last_modified_time": "2013-12-18T02:31:51-0800",
        "created_by_id": 14909000000072000,
        "attachment_name": "new file",
        "can_send_in_mail": true,
        "invoice_url": "https://invoice.zoho.com/portal/zylkar/secure?CInvoiceID=23d84d0cf64f9a72ea0c66fded25a08c8bafd0ab508aff05323a9f80e2cd03fdc5dd568d3d6407bbda969d3e870d740b6fce549a9438c4ea"
    }
}
Get a retainer invoice
Get the details of a retainer invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "retainerinvoice": {
        "retainerinvoice_id": 982000000567114,
        "retainerinvoice_number": "RET-00003",
        "date": "2013-11-17",
        "status": "draft",
        "is_pre_gst": false,
        "place_of_supply": "TN",
        "project_id": 982000000567154,
        "project_name": "string",
        "last_payment_date": " ",
        "reference_number": " ",
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "contact_persons": [
            "982000000567003",
            "982000000567003"
        ],
        "currency_id": 982000000000190,
        "currency_code": "USD",
        "currency_symbol": "USD",
        "exchange_rate": 1,
        "is_viewed_by_client": true,
        "client_viewed_time": true,
        "is_inclusive_tax": false,
        "line_items": {
            "line_item_id": 982000000567021,
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "item_order": 1,
            "rate": 120,
            "bcy_rate": 120,
            "tax_id": 982000000557028,
            "tax_name": "VAT",
            "tax_type": "tax",
            "tax_percentage": 12.5,
            "item_total": 120
        },
        "sub_total": 153,
        "total": 40.6,
        "taxes": [
            {
                "tax_name": "VAT",
                "tax_amount": 19.13
            }
        ],
        "payment_made": 26.91,
        "payment_drawn": 26.91,
        "balance": 40.6,
        "allow_partial_payments": true,
        "price_precision": 2,
        "payment_options": {
            "payment_gateways": [
                {
                    "gateway_name": "paypal"
                }
            ]
        },
        "is_emailed": false,
        "documents": [],
        "billing_address": {
            "address": "Suite 125, McMillan Avenue",
            "street2": "McMillan Avenue",
            "city": "San Francisco",
            "state": "CA",
            "zip": 94134,
            "country": "U.S.A",
            "fax": "+86-10-82637827"
        },
        "shipping_address": {
            "address": "Suite 125, McMillan Avenue",
            "street2": "McMillan Avenue",
            "city": "San Francisco",
            "state": "CA",
            "zip": 94134,
            "country": "U.S.A",
            "fax": "+86-10-82637827"
        },
        "notes": "Looking forward for your business.",
        "terms": "Terms & Conditions apply",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "number",
                "index": 1,
                "label": "Record Number",
                "show_on_pdf": true,
                "show_in_all_pdf": true,
                "value": 23
            }
        ],
        "template_id": 982000000000143,
        "template_name": "Service - Classic",
        "page_width": "8.27in",
        "page_height": "11.69in",
        "orientation": "portrait",
        "template_type": "classic",
        "created_time": "2013-11-17T02:31:51-0800",
        "last_modified_time": "2013-12-18T02:31:51-0800",
        "created_by_id": 14909000000072000,
        "attachment_name": "new file",
        "can_send_in_mail": true,
        "invoice_url": "https://invoice.zoho.com/portal/zylkar/secure?CInvoiceID=23d84d0cf64f9a72ea0c66fded25a08c8bafd0ab508aff05323a9f80e2cd03fdc5dd568d3d6407bbda969d3e870d740b6fce549a9438c4ea"
    }
}
Delete a retainer invoice
Delete an existing retainer invoice. Invoices which have payment or credits note applied cannot be deleted.
OAuth Scope : ZohoInvoice.invoices.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The retainer invoice has been deleted."
}
Mark a retainer invoice as sent
Mark a draft retainer invoice as sent.
OAuth Scope : ZohoInvoice.invoices.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/status/sent \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Retainer Invoice status has been changed to Sent."
}
Update retainer invoice template
Update the pdf template associated with the retainer invoice.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/templates/982000000000143 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Retainer Invoice information has been updated."
}
Void a retainer invoice
Mark an invoice status as void. Upon voiding, the payments and credits associated with the retainer invoices will be unassociated and will be under customer credits.
OAuth Scope : ZohoInvoice.invoices.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/status/void \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Retainer Invoice status has been changed to 'Void'."
}
Mark as draft
Mark a voided retainer invoice as draft.
OAuth Scope : ZohoInvoice.invoices.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices//status/draft \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Status of retainer invoice changed from void to draft."
}
Email a retainer invoice
Email a retainer invoice to the customer. Input json string is not mandatory. If input json string is empty, mail will be send with default mail content.
OAuth Scope : ZohoInvoice.invoices.CREATE

Arguments
send_from_org_email_id
boolean
Boolean to trigger the email from the organization's email address
to_mail_ids
array
(Required)
Array of email address of the recipients.
cc_mail_ids
array
Array of email address of the recipients to be CC'd.
subject
string
The subject of the mail
body
string
The body of the mail
Query Parameters
send_customer_statement
Send customer statement pdf a with email.
send_attachment
Send the retainer invoice attachment a with the email.
attachments
Files to be attached to the email
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/email \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "send_from_org_email_id": false,
    "to_mail_ids": [
        "test@zylker.org"
    ],
    "cc_mail_ids": [
        "test@zylker.org"
    ],
    "subject": "Retainer Invoice from Zillium Inc (Retainer Invoice#: RET-00001)",
    "body": "Dear Customer,         <br><br><br><br>Thanks for your business.         <br><br><br><br>The retainer invoice RET-00001 is attached with this email. You can choose the easy way out and <a href= https://invoice.zoho.com/portal/zylkar/secure?CInvoiceID=b9800228e011ae86abe71227bdacb3c68e1af685f647dcaed747812e0b9314635e55ac6223925675b371fcbd2d5ae3dc  >pay online for this invoice.</a>         <br><br>Here's an overview of the invoice for your reference.         <br><br><br><br>Invoice Overview:         <br><br>Invoice  : INV-00001         <br><br>Date : 05 Aug 2013         <br><br>Amount : $541.82         <br><br><br><br>It was great working with you. Looking forward to working with you again.<br><br><br>\\nRegards<br>\\nZillium Inc<br>\\n\","
}
Response Example

{
    "code": 0,
    "message": "Your retainer invoice has been sent."
}
Get retainer invoice email content
Get the email content of a retainer invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/email \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "gateways_configured": true,
    "deprecated_placeholders_used": [],
    "body": "Dear Customer,         <br><br><br><br>Thanks for your business.         <br><br><br><br>The retainer invoice RET-00001 is attached with this email. You can choose the easy way out and <a href= https://invoice.zoho.com/portal/zylkar/secure?CInvoiceID=b9800228e011ae86abe71227bdacb3c68e1af685f647dcaed747812e0b9314635e55ac6223925675b371fcbd2d5ae3dc  >pay online for this invoice.</a>         <br><br>Here's an overview of the invoice for your reference.         <br><br><br><br>Invoice Overview:         <br><br>Invoice  : INV-00001         <br><br>Date : 05 Aug 2013         <br><br>Amount : $541.82         <br><br><br><br>It was great working with you. Looking forward to working with you again.<br><br><br>\\nRegards<br>\\nZillium Inc<br>\\n\",",
    "error_list": [],
    "subject": "Retainer Invoice from Zillium Inc (Retainer Invoice#: RET-00001)",
    "to_contacts": [
        {
            "first_name": "Will",
            "selected": false,
            "phone": "1234",
            "email": "test@zylker.org",
            "last_name": "Smith",
            "salutation": "Mr",
            "contact_person_id": 982000000567003,
            "mobile": "1234"
        }
    ],
    "attachment_name": "new file",
    "email_template_id": "string",
    "file_name": "RET-00001.pdf",
    "from_emails": [
        {
            "user_name": "John Smith",
            "selected": false,
            "email": "test@zylker.org"
        }
    ],
    "customer_id": 982000000567001
}
Update billing address
Updates the billing address for this retainer invoice alone.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Arguments
address
string
address of the customer
city
string
city of the customer
state
string
state of the customer
zip
string
zip of the customer
country
string
country of the customer
fax
string
fax of the customer
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/address/billing \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "address": "B-1104, 11F, \nHorizon International Tower, \nNo. 6, ZhiChun Road, HaiDian District",
    "city": "Beijing",
    "state": "Beijing",
    "zip": 1000881,
    "country": "string",
    "fax": "+86-10-82637827"
}
Response Example

{
    "code": 0,
    "message": "Billing address updated"
}
List retainer invoice templates
Get all retainer invoice pdf templates.
OAuth Scope : ZohoInvoice.invoices.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/templates \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "templates": [
        {
            "template_name": "Service - Classic",
            "template_id": 982000000000143,
            "template_type": "classic"
        },
        {...},
        {...}
    ]
}
Add attachment to a retainer invoice
Attach a file to an invoice.
OAuth Scope : ZohoInvoice.invoices.CREATE

Arguments
can_send_in_mail
boolean
Check if attachment can be sent via mail
attachment
binary
The file to be attached. It has to be sent in multipart/formdata
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/attachment \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "can_send_in_mail": true,
    "attachment": "string"
}
Response Example

{
    "code": 0,
    "message": "Your file has been attached."
}
Get a retainer invoice attachment
Returns the file attached to the retainer invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/attachment \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success"
}
Delete an attachment
Delete the file attached to the retainer invoice.
OAuth Scope : ZohoInvoice.invoices.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/documents/ \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Your file is no longer attached to the invoice."
}
Add comment
Add a comment for a retainer invoice.
OAuth Scope : ZohoInvoice.invoices.CREATE

Arguments
description
string
The description of the line items. Maximum length [2000]
payment_expected_date
string
Actual date when payment is expected to be cedited
show_comment_to_clients
boolean
Boolean to check if the comment to be shown to the clients
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "description": "comment added",
    "payment_expected_date": " ",
    "show_comment_to_clients": true
}
Response Example

{
    "code": 0,
    "message": "Comments added."
}
List retainer invoice comments & history
Get the complete history and comments of a retainer invoice.
OAuth Scope : ZohoInvoice.invoices.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "comments": [
        {
            "comment_id": 982000000567019,
            "retainerinvoice_id": 982000000567114,
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "commented_by_id": 982000000554041,
            "commented_by": "John David",
            "comment_type": "system",
            "operation_type": "Added",
            "date": "2013-11-17",
            "date_description": "yesterday",
            "time": "2:38 AM",
            "transaction_id": "982000000567204",
            "transaction_type": "retainer_payment"
        },
        {...},
        {...}
    ]
}
Update comment
Update an existing comment of a retainer invoice.
OAuth Scope : ZohoInvoice.invoices.UPDATE

Arguments
description
string
The description of the line items. Maximum length [2000]
show_comment_to_clients
boolean
Boolean to check if the comment to be shown to the clients
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/comments/982000000567019 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "description": "comment updated",
    "show_comment_to_clients": true
}
Response Example

{
    "code": 0,
    "message": "The comment has been deleted.",
    "comment_id": 982000000567019,
    "retainerinvoice_id": 982000000567114,
    "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
    "commented_by_id": 982000000554041,
    "commented_by": "John David",
    "date": "2013-11-17",
    "date_description": "yesterday",
    "time": "2:38 AM",
    "comment_type": "system"
}
Delete a comment
Delete a retainer invoice comment.
OAuth Scope : ZohoInvoice.invoices.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/retainerinvoices/982000000567114/comments/982000000567019 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The comment has been deleted."
}



Credit Notes
A credit note is a promisory note issued to a person, when we owe him money. Credit notes are created when a refund is to be made to a customer. A credit note object allows you to keep track of all credit note related information.

Possible error codes:
Error Code	Message
1002	Credit Note does not exists
12003	Credit notes that are in closed status cannot be applied to invoices
12004	Credit notes that are in void status cannot be applied to invoices
12005	Credits cannot be applied to invoices in the draft status
12006	Credits cannot be applied to invoices in the closed status
12007	Credits cannot be applied to invoices in the void status
12018	The specified Credit Note Number already exists

End Points
POST  
/creditnotes
GET   
/creditnotes
PUT   
/creditnotes/{creditnote_id}
GET   
/creditnotes/{creditnote_id}
DELETE
/creditnotes/{creditnote_id}
POST  
/creditnotes/{creditnote_id}/email
POST  
/creditnotes/{creditnote_id}/void
POST  
/creditnotes/{creditnote_id}/converttoopen
GET   
/creditnotes/{creditnote_id}/emailhistory
PUT   
/creditnotes/{creditnote_id}/address/billing
PUT   
/creditnotes/{creditnote_id}/address/shipping
GET   
/creditnotes/templates
PUT   
/creditnotes/{creditnote_id}/templates/{template_id}
POST  
/creditnotes/{creditnote_id}/invoices
GET   
/creditnotes/{creditnote_id}/invoices
DELETE
/creditnotes/{creditnote_id}/invoices/{creditnote_invoice_id}
POST  
/creditnotes/{creditnote_id}/comments
GET   
/creditnotes/{creditnote_id}/comments
DELETE
/creditnotes/{creditnote_id}/comments/{comment_id}
GET   
/creditnotes/refunds
POST  
/creditnotes/{creditnote_id}/refunds
GET   
/creditnotes/{creditnote_id}/refunds
PUT   
/creditnotes/{creditnote_id}/refunds/{creditnote_refund_id}
GET   
/creditnotes/{creditnote_id}/refunds/{creditnote_refund_id}
DELETE
/creditnotes/{creditnote_id}/refunds/{creditnote_refund_id}
Attribute
creditnote_id
string
Unique ID of the credit note generated by the server.
creditnote_number
string
Unique number generated (starts with CN) which will be displayed in the interface and credit notes. Maximum Length [100]
date
string
The date on which credit note is raised. Date Format [yyyy-mm-dd]
status
string
Status of the credit note. This can be open, closed or void.
customer_id
string
Customer ID of the customer for whom the credit note is raised.
product_type
string
Enter goods/services
serial_numbers
string
Enter serial number
customer_name
string
Name of the customer to whom the credit note is raised. Maximum Length of the name [100]
custom_fields
array
Custom fields for a credit note.
Show Sub-Attributes arrow
reference_number
string
Reference number generated for the payment. A string of your choice can also be used as the reference number. Maximum Length [100]
email
string
Email address of the customer.
total
double
Total credits raised in this credit note.
balance
double
The unapplied/existing credits.
line_items
array
Items present in a credit note
Show Sub-Attributes arrow
invoices
array
Invoices included for a credit note redemption
Show Sub-Attributes arrow
taxes
array
Taxes associated with the subscription.
Show Sub-Attributes arrow
currency_code
string
Customer's currency code. This currency code is used in credit notes.
currency_symbol
string
Customer's currency symbol.
billing_address
object
Address to which a customer is billed
Show Sub-Attributes arrow
shipping_address
object
Address to which goods/any exchange must be shipped to contact
Show Sub-Attributes arrow
created_time
string
Time at which the credit note was created.
updated_time
string
Time at which the credit note details were last updated.
template_id
string
Unique ID of the creditnote template used
template_name
string
Name of the default template of the creditnote used
notes
string
A short note for the credit note. Maximum length [5000]
terms
string
Terms & condition to be displayed in the credit note. Maximum length [10000]
Example

{
    "creditnote_id": "90300000072369",
    "creditnote_number": "CN-29",
    "date": "2016-06-05",
    "status": "open",
    "customer_id": "903000000000099",
    "product_type": "goods",
    "serial_numbers": "string",
    "customer_name": "Bowman Furniture",
    "custom_fields": [
        {
            "customfield_id": 439910000000236000,
            "data_type": "text",
            "label": "label",
            "show_on_pdf": true,
            "show_in_all_pdf": true,
            "value": 129890
        }
    ],
    "reference_number": "INV-384",
    "email": "test@zylker.org",
    "total": 450,
    "balance": 10,
    "line_items": [
        {
            "item_id": "90300000081501",
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "name": "Hard Drive",
            "type": 1,
            "quantity": 1,
            "tax_id": "903000000000356",
            "tds_tax_id": "903000000000357",
            "rate": 100,
            "item_total": 100,
            "product_type": "goods",
            "hsn_or_sac": 80540,
            "project_id": 90300000087378,
            "project_name": "Sample Project",
            "sat_item_key_code": 71121206,
            "unitkey_code": "box"
        }
    ],
    "invoices": [
        {
            "invoice_id": "90300000079426",
            "invoice_number": "INV-384",
            "amount": 450
        }
    ],
    "taxes": [
        {
            "tax_id": "903000000000356",
            "tax_name": "Basic Tax",
            "tax_amount": "2.50"
        }
    ],
    "currency_code": "USD",
    "currency_symbol": "$",
    "billing_address": {
        "address": "4900 Hopyard Rd, Suite 310",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": "+1-925-924-9600"
    },
    "shipping_address": {
        "address": "4900 Hopyard Rd, Suite 310",
        "city": "Pleasanton",
        "state": "CA",
        "zip": 94588,
        "country": "U.S.A",
        "fax": "+1-925-924-9600"
    },
    "created_time": "2016-06-05T02:30:08-0700",
    "updated_time": "2016-07-05T02:30:08-0700",
    "template_id": "90300000001336",
    "template_name": "Standard Template",
    "notes": "Offer for the referral",
    "terms": "Can be added for refund only if purchased again"
}
Create a credit note
Details of an existing creditnote.
OAuth Scope : ZohoInvoice.creditnotes.CREATE

Arguments
customer_id
string
(Required)
Customer ID of the customer for whom the credit note is raised.
contact_persons
array
Contact Persons associated with the credit note.
date
string
(Required)
The date on which credit note is raised. Date Format [yyyy-mm-dd]
exchange_rate
string
Exchange rate for the currency associated with the customer.
line_items
array
(Required)
Items present in a credit note
Show Sub-Attributes arrow
creditnote_number
string
(Required)
Unique number generated (starts with CN) which will be displayed in the interface and credit notes. Maximum Length [100]
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_treatment
string
🇲🇽 only
VAT treatment for the Estimate.Allowed Values:
home_country_mexico,border_region_mexico,non_mexico supported only for MX.
cfdi_usage
string
🇲🇽 only
Choose CFDI Usage.
Allowed values: acquisition_of_merchandise, return_discount_bonus, general_expense, buildings, furniture_office_equipment, transport_equipment, computer_equipmentdye_molds_tools, telephone_communication, satellite_communication, other_machinery_equipment, hospital_expense, medical_expense_disability, funeral_expense, donation, interest_mortage_loans, contribution_sar, medical_expense_insurance_pormium, school_transportation_expense, deposit_saving_account, payment_educational_service, no_tax_effect, payment, payroll.
cfdi_reference_type
string
🇲🇽 only
Choose CFDI Reference Type.
Allowed values: credit_note, debit_note, return_of_merchandise, substitution_previous_cfdi, transfer_of_goods, invoice_generated_from_order, cfdi_for_advance.
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer.
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
ignore_auto_number_generation
boolean
Set to true if you need to provide your own credit note number.
reference_number
string
Reference number generated for the payment. A string of your choice can also be used as the reference number. Maximum Length [100]
custom_fields
array
Custom fields for a credit note.
Show Sub-Attributes arrow
notes
string
A short note for the credit note. Maximum length [5000]
terms
string
Terms & condition to be displayed in the credit note. Maximum length [10000]
template_id
string
Unique ID of the creditnote template used
tax_authority_id
string
🇺🇸 , 🇨🇦 only
Unique ID of the tax authority. Tax authority depends on the location of the customer. For example, if the customer is located in NY, then the tax authority is NY tax authority.
tax_exemption_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
Unique ID of the tax exemption.
avatax_use_code
string
Avalara Integration only
Used to group like customers for exemption purposes. It is a custom value that links customers to a tax rule. Select from Avalara [standard codes][1] or enter a custom code. Maximum length [25]
avatax_tax_code
string
Avalara Integration only
A tax code is a unique label used to group Items (products, services, or charges) together. Maximum length [25]
avatax_exempt_no
string
Avalara Integration only
Exemption certificate number of the customer. Maximum length [25]
vat_treatment
string
🇬🇧 only
(Optional) VAT treatment for the credit notes. VAT treatment denotes the location of the customer, if the customer resides in UK then the VAT treatment is uk. If the customer is in an EU country & VAT registered, you are resides in Northen Ireland and selling Goods then his VAT treatment is eu_vat_registered, if he resides outside of the UK then his VAT treatment is overseas (For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
Query Parameters
invoice_id
Invoice ID of the required invoice.
ignore_auto_number_generation
Set to true if you need to provide your own credit note number.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/creditnotes \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "customer_id": "903000000000099",
    "contact_persons": [
        "903000006532"
    ],
    "date": "2016-06-05",
    "exchange_rate": "5.5",
    "line_items": [
        {
            "item_id": "90300000081501",
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "name": "Hard Drive",
            "type": 1,
            "quantity": 1,
            "tax_id": "903000000000356",
            "tds_tax_id": "903000000000357",
            "tax_exemption_id": "903000006345",
            "avatax_tax_code": "string",
            "avatax_use_code": "string",
            "rate": 100,
            "item_total": 100,
            "product_type": "goods",
            "hsn_or_sac": 80540,
            "project_id": 90300000087378,
            "sat_item_key_code": 71121206,
            "unitkey_code": "box"
        }
    ],
    "creditnote_number": "CN-29",
    "gst_treatment": "business_gst",
    "tax_treatment": "vat_registered",
    "cfdi_usage": "acquisition_of_merchandise",
    "cfdi_reference_type": "return_of_merchandise",
    "gst_no": "22AAAAA0000A1Z5",
    "place_of_supply": "TN",
    "ignore_auto_number_generation": false,
    "reference_number": "INV-384",
    "custom_fields": [
        {
            "label": "label",
            "value": 129890
        }
    ],
    "notes": "Offer for the referral",
    "terms": "Can be added for refund only if purchased again",
    "template_id": "90300000001336",
    "tax_authority_id": "903000006345",
    "tax_exemption_id": "903000006345",
    "avatax_use_code": "string",
    "avatax_tax_code": "string",
    "avatax_exempt_no": "string",
    "vat_treatment": "overseas"
}
Response Example

{
    "code": 0,
    "message": "The credit note has been created.",
    "creditnote": {
        "creditnote_id": "90300000072369",
        "creditnote_number": "CN-29",
        "date": "2016-06-05",
        "status": "open",
        "customer_id": "903000000000099",
        "product_type": "goods",
        "serial_numbers": "string",
        "customer_name": "Bowman Furniture",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "text",
                "label": "label",
                "show_on_pdf": true,
                "show_in_all_pdf": true,
                "value": 129890
            }
        ],
        "reference_number": "INV-384",
        "email": "test@zylker.org",
        "total": 450,
        "balance": 10,
        "line_items": [
            {
                "item_id": "90300000081501",
                "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
                "name": "Hard Drive",
                "type": 1,
                "quantity": 1,
                "tax_id": "903000000000356",
                "tds_tax_id": "903000000000357",
                "rate": 100,
                "item_total": 100,
                "product_type": "goods",
                "hsn_or_sac": 80540,
                "project_id": 90300000087378,
                "project_name": "Sample Project",
                "sat_item_key_code": 71121206,
                "unitkey_code": "box"
            }
        ],
        "invoices": [
            {
                "invoice_id": "90300000079426",
                "invoice_number": "INV-384",
                "amount": 450
            }
        ],
        "taxes": [
            {
                "tax_id": "903000000000356",
                "tax_name": "Basic Tax",
                "tax_amount": "2.50"
            }
        ],
        "currency_code": "USD",
        "currency_symbol": "$",
        "billing_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "shipping_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "created_time": "2016-06-05T02:30:08-0700",
        "updated_time": "2016-07-05T02:30:08-0700",
        "template_id": "90300000001336",
        "template_name": "Standard Template",
        "notes": "Offer for the referral",
        "terms": "Can be added for refund only if purchased again"
    }
}
List Credit Notes
List all the Credit Notes.
OAuth Scope : ZohoInvoice.creditnotes.READ

Query Parameters
creditnote_number
Unique number generated (starts with CN) which will be displayed in the interface and credit notes. Maximum Length [100]
date
The date on which credit note is raised. Date Format [yyyy-mm-dd]
status
Status of the credit note. This can be open, closed or void.
total
Total credits raised in this credit note.
reference_number
Reference number generated for the payment. A string of your choice can also be used as the reference number. Maximum Length [100]
customer_name
Name of the customer to whom the credit note is raised. Maximum Length of the name [100]
item_name
Search credit notes by item name. Maximum length [100]
customer_id
Customer ID of the customer for whom the credit note is raised.
item_description
description for the item. Variants item_description_startswith and item_description_contains. Maximum length [100]
item_id
Unique string generated for the item to which a refund is to be made.
filter_by
Filter credit notes by status. Allowed values Status.All Status.Open Status.Draft Status.Closed and Status.Void
search_text
Search credit notes by credit note number or customer name or credit note reference number. Maximum length [100]
sort_column
Sort credit notes by following columns customer_name, creditnote_number, balance, total, date and created_time. Allowed Values customer_name creditnote_number balance total date and created_time
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/creditnotes \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "creditnotes": [
        {
            "creditnote_id": "90300000072369",
            "creditnote_number": "CN-29",
            "status": "open",
            "reference_number": "INV-384",
            "date": "2016-06-05",
            "total": 450,
            "balance": 10,
            "customer_id": "903000000000099",
            "customer_name": "Bowman Furniture",
            "currency_id": "982000000567240",
            "currency_code": "USD",
            "created_time": "2016-06-05T02:30:08-0700",
            "last_modified_time": "2016-06-05T02:30:08-0700",
            "is_emailed": true
        },
        {...},
        {...}
    ]
}
Update a credit note
Update Details of an existing creditnote.
OAuth Scope : ZohoInvoice.creditnotes.UPDATE

Arguments
customer_id
string
(Required)
Customer ID of the customer for whom the credit note is raised.
contact_persons
array
Contact Persons associated with the credit note.
date
string
(Required)
The date on which credit note is raised. Date Format [yyyy-mm-dd]
exchange_rate
string
Exchange rate for the currency associated with the customer.
line_items
array
(Required)
Items present in a credit note
Show Sub-Attributes arrow
creditnote_number
string
(Required)
Unique number generated (starts with CN) which will be displayed in the interface and credit notes. Maximum Length [100]
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
tax_treatment
string
🇲🇽 only
VAT treatment for the Estimate.Allowed Values:
home_country_mexico,border_region_mexico,non_mexico supported only for MX.
cfdi_usage
string
🇲🇽 only
Choose CFDI Usage.
Allowed values: acquisition_of_merchandise, return_discount_bonus, general_expense, buildings, furniture_office_equipment, transport_equipment, computer_equipmentdye_molds_tools, telephone_communication, satellite_communication, other_machinery_equipment, hospital_expense, medical_expense_disability, funeral_expense, donation, interest_mortage_loans, contribution_sar, medical_expense_insurance_pormium, school_transportation_expense, deposit_saving_account, payment_educational_service, no_tax_effect, payment, payroll.
cfdi_reference_type
string
🇲🇽 only
Choose CFDI Reference Type.
Allowed values: credit_note, debit_note, return_of_merchandise, substitution_previous_cfdi, transfer_of_goods, invoice_generated_from_order, cfdi_for_advance.
gst_no
string
🇮🇳 only
15 digit GST identification number of the customer.
place_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, place of contact given for the contact will be taken)
ignore_auto_number_generation
boolean
Set to true if you need to provide your own credit note number.
reference_number
string
Reference number generated for the payment. A string of your choice can also be used as the reference number. Maximum Length [100]
custom_fields
array
Custom fields for a credit note.
Show Sub-Attributes arrow
notes
string
A short note for the credit note. Maximum length [5000]
terms
string
Terms & condition to be displayed in the credit note. Maximum length [10000]
template_id
string
Unique ID of the creditnote template used
tax_authority_id
string
🇺🇸 , 🇨🇦 only
Unique ID of the tax authority. Tax authority depends on the location of the customer. For example, if the customer is located in NY, then the tax authority is NY tax authority.
tax_exemption_id
string
🇮🇳 , 🇺🇸 , 🇨🇦 only
Unique ID of the tax exemption.
avatax_use_code
string
Avalara Integration only
Used to group like customers for exemption purposes. It is a custom value that links customers to a tax rule. Select from Avalara [standard codes][1] or enter a custom code. Maximum length [25]
avatax_tax_code
string
Avalara Integration only
A tax code is a unique label used to group Items (products, services, or charges) together. Maximum length [25]
avatax_exempt_no
string
Avalara Integration only
Exemption certificate number of the customer. Maximum length [25]
vat_treatment
string
🇬🇧 only
(Optional) VAT treatment for the credit notes. VAT treatment denotes the location of the customer, if the customer resides in UK then the VAT treatment is uk. If the customer is in an EU country & VAT registered, you are resides in Northen Ireland and selling Goods then his VAT treatment is eu_vat_registered, if he resides outside of the UK then his VAT treatment is overseas (For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
Query Parameters
ignore_auto_number_generation
Set to true if you need to provide your own credit note number.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "customer_id": "903000000000099",
    "contact_persons": [
        "903000006532"
    ],
    "date": "2016-06-05",
    "exchange_rate": "5.5",
    "line_items": [
        {
            "item_id": "90300000081501",
            "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
            "name": "Hard Drive",
            "type": 1,
            "quantity": 1,
            "tax_id": "903000000000356",
            "tds_tax_id": "903000000000357",
            "tax_exemption_id": "903000006345",
            "avatax_tax_code": "string",
            "avatax_use_code": "string",
            "rate": 100,
            "item_total": 100,
            "product_type": "goods",
            "hsn_or_sac": 80540,
            "project_id": 90300000087378,
            "sat_item_key_code": 71121206,
            "unitkey_code": "box"
        }
    ],
    "creditnote_number": "CN-29",
    "gst_treatment": "business_gst",
    "tax_treatment": "vat_registered",
    "cfdi_usage": "acquisition_of_merchandise",
    "cfdi_reference_type": "return_of_merchandise",
    "gst_no": "22AAAAA0000A1Z5",
    "place_of_supply": "TN",
    "ignore_auto_number_generation": false,
    "reference_number": "INV-384",
    "custom_fields": [
        {
            "label": "label",
            "value": 129890
        }
    ],
    "notes": "Offer for the referral",
    "terms": "Can be added for refund only if purchased again",
    "template_id": "90300000001336",
    "tax_authority_id": "903000006345",
    "tax_exemption_id": "903000006345",
    "avatax_use_code": "string",
    "avatax_tax_code": "string",
    "avatax_exempt_no": "string",
    "vat_treatment": "overseas"
}
Response Example

{
    "code": 0,
    "message": "The credit note has been updated.",
    "creditnote": {
        "creditnote_id": "90300000072369",
        "creditnote_number": "CN-29",
        "date": "2016-06-05",
        "status": "open",
        "customer_id": "903000000000099",
        "product_type": "goods",
        "serial_numbers": "string",
        "customer_name": "Bowman Furniture",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "text",
                "label": "label",
                "show_on_pdf": true,
                "show_in_all_pdf": true,
                "value": 129890
            }
        ],
        "reference_number": "INV-384",
        "email": "test@zylker.org",
        "total": 450,
        "balance": 10,
        "line_items": [
            {
                "item_id": "90300000081501",
                "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
                "name": "Hard Drive",
                "type": 1,
                "quantity": 1,
                "tax_id": "903000000000356",
                "tds_tax_id": "903000000000357",
                "rate": 100,
                "item_total": 100,
                "product_type": "goods",
                "hsn_or_sac": 80540,
                "project_id": 90300000087378,
                "project_name": "Sample Project",
                "sat_item_key_code": 71121206,
                "unitkey_code": "box"
            }
        ],
        "invoices": [
            {
                "invoice_id": "90300000079426",
                "invoice_number": "INV-384",
                "amount": 450
            }
        ],
        "taxes": [
            {
                "tax_id": "903000000000356",
                "tax_name": "Basic Tax",
                "tax_amount": "2.50"
            }
        ],
        "currency_code": "USD",
        "currency_symbol": "$",
        "billing_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "shipping_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "created_time": "2016-06-05T02:30:08-0700",
        "updated_time": "2016-07-05T02:30:08-0700",
        "template_id": "90300000001336",
        "template_name": "Standard Template",
        "notes": "Offer for the referral",
        "terms": "Can be added for refund only if purchased again"
    }
}
Get a credit note
Details of an existing creditnote.
OAuth Scope : ZohoInvoice.creditnotes.READ

Query Parameters
print
Export credit note pdf with default print option. Allowed Values: true, false, on and off
accept
You can get credit note details as json/pdf/html. Default format is html. Allowed Values: json, pdf and html
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "creditnote": {
        "creditnote_id": "90300000072369",
        "creditnote_number": "CN-29",
        "date": "2016-06-05",
        "status": "open",
        "customer_id": "903000000000099",
        "product_type": "goods",
        "serial_numbers": "string",
        "customer_name": "Bowman Furniture",
        "custom_fields": [
            {
                "customfield_id": 439910000000236000,
                "data_type": "text",
                "label": "label",
                "show_on_pdf": true,
                "show_in_all_pdf": true,
                "value": 129890
            }
        ],
        "reference_number": "INV-384",
        "email": "test@zylker.org",
        "total": 450,
        "balance": 10,
        "line_items": [
            {
                "item_id": "90300000081501",
                "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case.",
                "name": "Hard Drive",
                "type": 1,
                "quantity": 1,
                "tax_id": "903000000000356",
                "tds_tax_id": "903000000000357",
                "rate": 100,
                "item_total": 100,
                "product_type": "goods",
                "hsn_or_sac": 80540,
                "project_id": 90300000087378,
                "project_name": "Sample Project",
                "sat_item_key_code": 71121206,
                "unitkey_code": "box"
            }
        ],
        "invoices": [
            {
                "invoice_id": "90300000079426",
                "invoice_number": "INV-384",
                "amount": 450
            }
        ],
        "taxes": [
            {
                "tax_id": "903000000000356",
                "tax_name": "Basic Tax",
                "tax_amount": "2.50"
            }
        ],
        "currency_code": "USD",
        "currency_symbol": "$",
        "created_time": "2016-06-05T02:30:08-0700",
        "updated_time": "2016-07-05T02:30:08-0700",
        "billing_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "shipping_address": {
            "address": "4900 Hopyard Rd, Suite 310",
            "city": "Pleasanton",
            "state": "CA",
            "zip": 94588,
            "country": "U.S.A",
            "fax": "+1-925-924-9600"
        },
        "template_id": "90300000001336",
        "template_name": "Standard Template",
        "notes": "Offer for the referral",
        "terms": "Can be added for refund only if purchased again"
    }
}
Delete a credit note
Delete an existing credit note.
OAuth Scope : ZohoInvoice.creditnotes.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The credit note has been deleted."
}
Email a credit note
Email a credit note.
OAuth Scope : ZohoInvoice.creditnotes.CREATE

Arguments
to_mail_ids
array
(Required)
The email IDs to which the credit note is to be mailed.
cc_mail_ids
array
The email IDs that have to be copied when the credit note is to be mailed.
subject
string
(Required)
The subject of the email. Maximum length [1000]
body
string
(Required)
The body/content of the email. Maximum length [5000]
Query Parameters
customer_id
Customer ID of the customer for whom the credit note is raised.
attachments
The files to be attached with the email.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/email \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "to_mail_ids": [
        "test@zylker.org",
        "test1@zylker.org"
    ],
    "cc_mail_ids": [
        "test@zylker.org"
    ],
    "subject": "Credit note for subscription.",
    "body": "Please find attached the credit note for your subscription."
}
Response Example

{
    "code": 0,
    "message": "Your creditnote has been sent."
}
Void a credit note
To mark a credit note as invalid/nullify it content.
OAuth Scope : ZohoInvoice.creditnotes.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/void \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The credit note has been marked as void."
}
Open a voided credit note
Convert a voided credit note to open.
OAuth Scope : ZohoInvoice.creditnotes.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/converttoopen \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Status of the credit note has been changed to open."
}
Email history
Get email history of a credit code.
OAuth Scope : ZohoInvoice.creditnotes.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/emailhistory \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "email_history": [
        {
            "mailhistory_id": 982000000570005,
            "from": "gator@zillum.com",
            "to_mail_ids": [
                "test@zylker.org",
                "test1@zylker.org"
            ],
            "subject": "Credit note for subscription.",
            "date": "2016-06-05"
        },
        {...},
        {...}
    ]
}
Update billing address
Updates the billing address for an existing credit note alone.
OAuth Scope : ZohoInvoice.creditnotes.UPDATE

Arguments
address
string
Billing address of the contact
city
string
City of the contact
state
string
State of the contact's address
zip
string
ZIP code of a contacts billing address
country
string
Country of a contact's billing address
fax
string
FAX number of a contact
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/address/billing \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "address": "4900 Hopyard Rd, Suite 310",
    "city": "Pleasanton",
    "state": "CA",
    "zip": 94588,
    "country": "USA",
    "fax": "+1-925-924-9600"
}
Response Example

{
    "code": 0,
    "message": "Billing address updated"
}
Update Shipping address
Updates the shipping address for an existing credit note alone.
OAuth Scope : ZohoInvoice.creditnotes.UPDATE

Arguments
address
string
Billing Address field
city
string
City of a contacts billing address
state
string
State of a contct's billing address
zip
string
ZIP code of a billing address
country
string
Country of a contacts billing address
fax
string
Customer's fax number.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/address/shipping \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "address": "Suite 125, McMillan Avenue",
    "city": "San Francisco",
    "state": "CA",
    "zip": 94134,
    "country": "USA",
    "fax": "+1-925-924-9600"
}
Response Example

{
    "code": 0,
    "message": "Shipping address updated"
}
List credit note templates
Get all credit note pdf templates.
OAuth Scope : ZohoInvoice.creditnotes.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/templates \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "templates": [
        {
            "template_name": "Standard Template",
            "template_id": "90300000001336",
            "template_type": "professional"
        },
        {...},
        {...}
    ]
}
Update a credit note template
Update the pdf template associated with the credit note.
OAuth Scope : ZohoInvoice.creditnotes.UPDATE

Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/templates/90300000001336 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The credit note has been updated."
}
Credit to an invoice
Apply credit note to existing invoices.
OAuth Scope : ZohoInvoice.creditnotes.CREATE

Arguments
invoices
array
List of invoices used for a credit redemption
Show Sub-Attributes arrow
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/invoices \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "invoices": [
        {
            "invoice_id": "90300000079426",
            "amount_applied": 41.82
        }
    ]
}
Response Example

{
    "code": 0,
    "message": "Credits have been applied to the invoice(s)."
}
List invoices credited
List invoices to which the credit note is applied.
OAuth Scope : ZohoInvoice.creditnotes.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/invoices \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "invoices_credited": [
        {
            "creditnote_id": "90300000072369",
            "invoice_id": "90300000079426",
            "creditnote_invoice_id": "982000000567172",
            "date": "2016-06-05",
            "invoice_number": "INV-384",
            "creditnote_number": "CN-29",
            "credited_amount": 12.02
        },
        {...},
        {...}
    ]
}
Delete invoices credited
Delete the credits applied to an invoice.
OAuth Scope : ZohoInvoice.creditnotes.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/invoices/982000000567172 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Credits applied to an invoice have been deleted."
}
Add a comment
Add a comment to an existing credit note.
OAuth Scope : ZohoInvoice.creditnotes.CREATE

Arguments
description
string
A short note on the credit applied
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "description": "Credits applied to invoice INV-00004"
}
Response Example

{
    "code": 0,
    "message": "Comments added."
}
List credit note comments & history
Get history and comments of a credit note.
OAuth Scope : ZohoInvoice.creditnotes.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Comments of the credit note are displayed successfully.",
    "comments": [
        {
            "comment_id": "982000000570001",
            "creditnote_id": "90300000072369",
            "description": "Credits applied to invoice INV-00004",
            "commented_by_id": "982000000554041",
            "commented_by": "David Sujin",
            "comment_type": "system",
            "date": "2016-06-05",
            "date_description": "7 hours ago",
            "time": "10:43 PM",
            "operation_type": "Updated",
            "transaction_id": "903000002072369",
            "transaction_type": "email"
        },
        {...},
        {...}
    ]
}
Delete a Comment
Delete a credit note comment.
OAuth Scope : ZohoInvoice.creditnotes.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/comments/982000000570001 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The comment has been deleted."
}
List credit note refunds
List all refunds with pagination.
OAuth Scope : ZohoInvoice.creditnotes.READ

Query Parameters
customer_id
Customer ID of the customer for whom the credit note is raised.
sort_column
Sort refunds list. Allowed Values: refund_mode, reference_number, date, creditnote_number, customer_name, amount_bcy and amount_fcy
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/refunds \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The list of credit note refunds are displayed successfully.",
    "creditnote_refunds": [
        {
            "creditnote_refund_id": "982000000567158",
            "creditnote_id": "90300000072369",
            "date": "2016-06-05",
            "refund_mode": "cash",
            "reference_number": "INV-384",
            "creditnote_number": "CN-29",
            "customer_name": "Bowman Furniture",
            "description": "Offer",
            "amount_bcy": 10,
            "amount_fcy": 10
        },
        {...},
        {...}
    ]
}
Refund credit note
Refund credit note amount.
OAuth Scope : ZohoInvoice.creditnotes.CREATE

Arguments
date
string
The date on which credit note is raised. Date Format [yyyy-mm-dd]
refund_mode
string
The method of refund.
reference_number
string
Reference number generated for the payment. A string of your choice can also be used as the reference number. Maximum Length [100]
amount
double
Amount of the invoice.
exchange_rate
string
Exchange rate for the currency associated with the customer.
description
string
A small description about the item.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/refunds \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "date": "2016-06-05",
    "refund_mode": "cash",
    "reference_number": "INV-384",
    "amount": 450,
    "exchange_rate": "5.5",
    "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case."
}
Response Example

{
    "code": 0,
    "message": "The credit note amount is refunded successfully.",
    "creditnote_refund": {
        "creditnote_refund_id": "982000000567158",
        "creditnote_id": "90300000072369",
        "date": "2016-06-05",
        "refund_mode": "cash",
        "reference_number": "INV-384",
        "amount": 450,
        "customer_name": "Bowman Furniture",
        "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case."
    }
}
List refunds of a credit note
List all refunds of an existing credit note.
OAuth Scope : ZohoInvoice.creditnotes.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/refunds \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The refunds of the existing credit note are displayed successfully.",
    "creditnote_refunds": [
        {
            "creditnote_refund_id": "982000000567158",
            "creditnote_id": "90300000072369",
            "date": "2016-06-05",
            "refund_mode": "cash",
            "reference_number": "INV-384",
            "creditnote_number": "CN-29",
            "customer_name": "Bowman Furniture",
            "description": "Offer",
            "amount_bcy": 10,
            "amount_fcy": 10
        },
        {...},
        {...}
    ]
}
Update credit note refund
Update the refunded transaction.
OAuth Scope : ZohoInvoice.creditnotes.UPDATE

Arguments
date
string
The date on which credit note is raised. Date Format [yyyy-mm-dd]
refund_mode
string
The method of refund.
reference_number
string
Reference number generated for the payment. A string of your choice can also be used as the reference number. Maximum Length [100]
amount
double
Amount of the invoice.
exchange_rate
string
Exchange rate for the currency associated with the customer.
description
string
A small description about the item.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/refunds/982000000567158 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "date": "2016-06-05",
    "refund_mode": "cash",
    "reference_number": "INV-384",
    "amount": 450,
    "exchange_rate": "5.5",
    "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case."
}
Response Example

{
    "code": 0,
    "message": "The credit note refund is updated successfully.",
    "creditnote_refund": {
        "creditnote_refund_id": "982000000567158",
        "creditnote_id": "90300000072369",
        "date": "2016-06-05",
        "refund_mode": "cash",
        "reference_number": "INV-384",
        "amount": 450,
        "customer_name": "Bowman Furniture",
        "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case."
    }
}
Get credit note refund
Get refund of a particular credit note.
OAuth Scope : ZohoInvoice.creditnotes.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/refunds/982000000567158 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The refund of the credit note is displayed successfully.",
    "creditnote_refund": {
        "creditnote_refund_id": "982000000567158",
        "creditnote_id": "90300000072369",
        "date": "2016-06-05",
        "refund_mode": "cash",
        "reference_number": "INV-384",
        "amount": 450,
        "customer_name": "Bowman Furniture",
        "description": "500GB, USB 2.0 interface 1400 rpm, protective hard case."
    }
}
Delete credit note refund
Delete a credit note refund.
OAuth Scope : ZohoInvoice.creditnotes.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/creditnotes/90300000072369/refunds/982000000567158 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The refund has been successfully deleted."
}



Expenses
An expense represents the money that you spend, with the ultimate target of generating revenue for your organization.

Possible error codes:
Error Code	Message
1002	Expense does not exists
5001	Expenses that were converted to an invoice cannot be deleted
5015	Enter a valid expense amount
5019	Contact cannot be changed for an invoiced expense
5032	You cannot make this expense non-billable as it has been already invoiced

End Points
POST  
/expenses
GET   
/expenses
PUT   
/expenses/{expense_id}
GET   
/expenses/{expense_id}
DELETE
/expenses/{expense_id}
GET   
/expenses/{expense_id}/comments
POST  
/employees
GET   
/employees
GET   
/employees/{employee_id}
DELETE
/employee/{employee_id}
Attribute
expense_id
string
Unique ID of the expense
transaction_id
string
Unique ID of the transaction
transaction_type
string
Type of the transaction
expense_item_id
string
ID of the expense item/component.
gst_no
string
🇮🇳 only
15 digit GST identification number of the vendor.
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
destination_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, organisation's home state will be taken)
destination_of_supply_state
string
🇮🇳 only
State to where goods/services are supplied
hsn_or_sac
string
🇮🇳 only
Add HSN/SAC code for your goods/services
source_of_supply
string
🇮🇳 only
Place from where the goods/services are supplied. (If not given, place of contact given for the contact will be taken)
paid_through_account_name
string
Enter the name of the paid through account.
vat_reg_no
string
Enter VAT registration number.
reverse_charge_tax_id
string
ID of the reverse charge tax
reverse_charge_tax_name
string
🇮🇳 only
Enter name of the reverse charge tax
reverse_charge_tax_percentage
double
🇮🇳 only
Enter percentage of the reverse charge tax
reverse_charge_tax_amount
integer
🇮🇳 only
Enter amount of the reverse charge tax
tax_amount
double
total expense amount
is_itemized_expense
boolean
is_pre_gst
string
🇮🇳 only
Applicable for transactions that fall before july 1, 2017
trip_id
string
Enter trip ID
trip_number
string
Enter trip number
reverse_charge_vat_total
double
🇮🇳 only
Enter total of the reverse charge vat tax.
acquisition_vat_total
double
Enter acquisition vat total.
acquisition_vat_summary
array
Show Sub-Attributes arrow
reverse_charge_vat_summary
array
Show Sub-Attributes arrow
account_id
string
ID of the expense account.
account_name
string
Name of the expense account in which that expense is recorded
date
string
Date of the expense
tax_id
string
Tax ID applied
tax_name
string
Name of the tax levied
tax_percentage
double
Percentage of tax charged
currency_id
string
Unique ID of the currency
currency_code
string
Code of the currency
exchange_rate
double
Foreign currency exchange rate
sub_total
double
Sub-total of the expense amount
total
double
Total value of expense
bcy_total
double
Total value of expense in Base currency
amount
double
Total expense value
is_inclusive_tax
boolean
Check if amount is inclusive of tax
reference_number
string
Reference number of the expense. Maximum length [100]
description
string
Description of the expense. Maximum length [100]
is_billable
boolean
Check if an expense is billable
is_personal
boolean
Check if the expense os personal
customer_id
string
ID of the expense account.
customer_name
string
Name of the Customer for whom expense is raised. Maximum length [100]
expense_receipt_name
string
Name of the expense receipt
expense_receipt_type
string
Type of the expense receipt
last_modified_time
string
Date of last modification to the expense
status
string
Expense status
custom_fields
array
Custom fields for an expense.
Show Sub-Attributes arrow
invoice_id
string
ID of the invoice associated
invoice_number
string
Serial Number of the invoice attached
project_id
string
ID of the project associated with the customer.
project_name
string
Name of the project in question
mileage_rate
double
Mileage rate for a particular mileage expense.
mileage_type
string
Milage expense type
expense_type
string
Type of the expense
start_reading
double
Start reading of odometer when creating a mileage expense where mileage_type is odometer.
end_reading
double
End reading of odometer when creating a mileage expense where mileage_type is odometer.
Example

{
    "expense_id": 982000000030049,
    "transaction_id": " ",
    "transaction_type": "expense",
    "expense_item_id": 982000000567220,
    "gst_no": "22AAAAA0000A1Z5",
    "gst_treatment": "business_gst",
    "destination_of_supply": "TN",
    "destination_of_supply_state": "TN",
    "hsn_or_sac": 80540,
    "source_of_supply": "AP",
    "paid_through_account_name": "Petty Cash",
    "vat_reg_no": "string",
    "reverse_charge_tax_id": 982000000561063,
    "reverse_charge_tax_name": "intra",
    "reverse_charge_tax_percentage": 10,
    "reverse_charge_tax_amount": 12,
    "tax_amount": 11.85,
    "is_itemized_expense": false,
    "is_pre_gst": "fasle",
    "trip_id": "",
    "trip_number": "",
    "reverse_charge_vat_total": 1.2,
    "acquisition_vat_total": 0,
    "acquisition_vat_summary": [
        {
            "tax": {
                "tax_name": "SalesTax",
                "tax_amount": 11.85
            }
        }
    ],
    "reverse_charge_vat_summary": [
        {
            "tax": {
                "tax_name": "SalesTax",
                "tax_amount": 11.85
            }
        }
    ],
    "account_id": 982000000561057,
    "account_name": "Rent",
    "date": "2013-11-18",
    "tax_id": 982000000566007,
    "tax_name": "SalesTax",
    "tax_percentage": 10.5,
    "currency_id": 982000000567001,
    "currency_code": "USD",
    "exchange_rate": 1,
    "sub_total": 90,
    "total": 100,
    "bcy_total": 100,
    "amount": 112.5,
    "is_inclusive_tax": false,
    "reference_number": "#562SD23R4",
    "description": "Marketing",
    "is_billable": true,
    "is_personal": false,
    "customer_id": 982000000567001,
    "customer_name": "Bowman & Co",
    "expense_receipt_name": " ",
    "expense_receipt_type": " ",
    "last_modified_time": "2013-12-18T02:17:40-0800",
    "status": "unbilled",
    "custom_fields": [
        {
            "customfield_id": "46000000012845",
            "value": "Normal"
        }
    ],
    "invoice_id": " ",
    "invoice_number": " ",
    "project_id": 982000000567226,
    "project_name": " ",
    "mileage_rate": " ",
    "mileage_type": "non_mileage",
    "expense_type": "non-mileage",
    "start_reading": " ",
    "end_reading": " "
}
Create an Expense
Create billable or non-billable expense.
OAuth Scope : ZohoInvoice.expenses.CREATE

Arguments
account_id
string
ID of the expense account.
date
string
Date of the expense
amount
double
(Required)
Total expense value
tax_id
string
Tax ID applied
is_inclusive_tax
boolean
Check if amount is inclusive of tax
source_of_supply
string
🇮🇳 only
Place from where the goods/services are supplied. (If not given, place of contact given for the contact will be taken)
destination_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, organisation's home state will be taken)
hsn_or_sac
string
🇮🇳 only
Add HSN/SAC code for your goods/services
gst_no
string
🇮🇳 only
15 digit GST identification number of the vendor.
reverse_charge_tax_id
string
ID of the reverse charge tax
custom_fields
array
Custom fields for an expense.
Show Sub-Attributes arrow
line_items
array
Show Sub-Attributes arrow
taxes
array
🇲🇽 only
Show Sub-Attributes arrow
is_billable
boolean
Check if an expense is billable
reference_number
string
(Required)
Reference number of the expense. Maximum length [100]
description
string
Description of the expense. Maximum length [100]
customer_id
string
ID of the expense account.
currency_id
string
Unique ID of the currency
exchange_rate
double
Foreign currency exchange rate
project_id
string
ID of the project associated with the customer.
mileage_type
string
Milage expense type
vat_treatment
string
🇬🇧 only
VAT treatment for the expense. VAT treatment denotes the location of the vendor, if the vendor resides in UK then the VAT treatment is uk. If the vendor is in an EU country & VAT registered, you are resides in Northen Ireland and purchasing Goods then his VAT treatment is eu_vat_registered and if he resides outside the UK then his VAT treatment is overseas (For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
product_type
string
🇬🇧 only
Type of the expense. This denotes whether the expense is to be treated as a goods or service purchase. Allowed Values: goods and service.
acquisition_vat_id
string
🇬🇧 only
This is the ID of the tax applied in case this is an EU - goods expense and acquisition VAT needs to be reported.
reverse_charge_vat_id
string
🇬🇧 only
This is the ID of the tax applied in case this is a non UK - service expense and reverse charge VAT needs to be reported.
start_reading
double
Start reading of odometer when creating a mileage expense where mileage_type is odometer.
end_reading
double
End reading of odometer when creating a mileage expense where mileage_type is odometer.
distance
string
Distance travelled for a particular mileage expense where mileage_type is manual
mileage_unit
string
Unit of the distance travelled. Allowed Values: km and mile
mileage_rate
double
Mileage rate for a particular mileage expense.
employee_id
string
🇬🇧 only
ID of the employee who has submitted this mileage expense.
vehicle_type
string
🇬🇧 only
Vehicle type for a particular mileage expense. Allowed Values: car, van, motorcycle and bike
can_reclaim_vat_on_mileage
string
🇬🇧 only
To specify if tax can be reclaimed for this mileage expense.
fuel_type
string
🇬🇧 only
Fuel type for a particular mileage expense. Allowed Values: petrol, lpg and diesel
engine_capacity_range
string
🇬🇧 only
Engine capacity range for a particular mileage expense. Allowed Values: less_than_1400cc, between_1400cc_and_1600cc, between_1600cc_and_2000cc and more_than_2000cc
Query Parameters
receipt
Expense receipt file to attach. Allowed Extensions: gif, png, jpeg, jpg, bmp and pdf. It should be sent in multipart/formdata.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/expenses \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "account_id": 982000000561057,
    "date": "2013-11-18",
    "amount": 112.5,
    "tax_id": 982000000566007,
    "is_inclusive_tax": false,
    "source_of_supply": "AP",
    "destination_of_supply": "TN",
    "hsn_or_sac": 80540,
    "gst_no": "22AAAAA0000A1Z5",
    "reverse_charge_tax_id": 982000000561063,
    "custom_fields": [
        {
            "customfield_id": "46000000012845",
            "value": "Normal"
        }
    ],
    "line_items": [
        {
            "line_item_id": 10763000000140068,
            "account_id": 982000000561057,
            "description": "Marketing",
            "amount": 112.5,
            "tax_id": 982000000566007,
            "item_order": 1,
            "product_type": "goods",
            "acquisition_vat_id": " ",
            "reverse_charge_vat_id": " ",
            "reverse_charge_tax_id": 982000000561063,
            "tax_exemption_code": "string",
            "tax_exemption_id": 982000000561067
        }
    ],
    "taxes": [
        {
            "tax_id": 982000000566007,
            "tax_amount": 11.85
        }
    ],
    "is_billable": true,
    "reference_number": "#562SD23R4",
    "description": "Marketing",
    "customer_id": 982000000567001,
    "currency_id": 982000000567001,
    "exchange_rate": 1,
    "project_id": 982000000567226,
    "mileage_type": "non_mileage",
    "vat_treatment": "overseas",
    "product_type": "goods",
    "acquisition_vat_id": " ",
    "reverse_charge_vat_id": " ",
    "start_reading": " ",
    "end_reading": " ",
    "distance": " ",
    "mileage_unit": " ",
    "mileage_rate": " ",
    "employee_id": " ",
    "vehicle_type": " ",
    "can_reclaim_vat_on_mileage": " ",
    "fuel_type": " ",
    "engine_capacity_range": " "
}
Response Example

{
    "code": 0,
    "message": "The expense has been recorded.",
    "expense": {
        "expense_id": 982000000030049,
        "transaction_id": " ",
        "transaction_type": "expense",
        "expense_item_id": 982000000567220,
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "destination_of_supply": "TN",
        "destination_of_supply_state": "TN",
        "hsn_or_sac": 80540,
        "source_of_supply": "AP",
        "paid_through_account_name": "Petty Cash",
        "vat_reg_no": "string",
        "reverse_charge_tax_id": 982000000561063,
        "reverse_charge_tax_name": "intra",
        "reverse_charge_tax_percentage": 10,
        "reverse_charge_tax_amount": 12,
        "tax_amount": 11.85,
        "is_itemized_expense": false,
        "is_pre_gst": "fasle",
        "trip_id": "",
        "trip_number": "",
        "reverse_charge_vat_total": 1.2,
        "acquisition_vat_total": 0,
        "acquisition_vat_summary": [
            {
                "tax": {
                    "tax_name": "SalesTax",
                    "tax_amount": 11.85
                }
            }
        ],
        "reverse_charge_vat_summary": [
            {
                "tax": {
                    "tax_name": "SalesTax",
                    "tax_amount": 11.85
                }
            }
        ],
        "account_id": 982000000561057,
        "account_name": "Rent",
        "date": "2013-11-18",
        "tax_id": 982000000566007,
        "tax_name": "SalesTax",
        "tax_percentage": 10.5,
        "currency_id": 982000000567001,
        "currency_code": "USD",
        "exchange_rate": 1,
        "sub_total": 90,
        "total": 100,
        "bcy_total": 100,
        "amount": 112.5,
        "is_inclusive_tax": false,
        "reference_number": "#562SD23R4",
        "description": "Marketing",
        "is_billable": true,
        "is_personal": false,
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "expense_receipt_name": " ",
        "expense_receipt_type": " ",
        "last_modified_time": "2013-12-18T02:17:40-0800",
        "status": "unbilled",
        "custom_fields": [
            {
                "customfield_id": "46000000012845",
                "value": "Normal"
            }
        ],
        "invoice_id": " ",
        "invoice_number": " ",
        "project_id": 982000000567226,
        "project_name": " ",
        "mileage_rate": " ",
        "mileage_type": "non_mileage",
        "expense_type": "non-mileage",
        "start_reading": " ",
        "end_reading": " "
    }
}
List Expenses
List all the Expenses with pagination.
OAuth Scope : ZohoInvoice.expenses.READ

Query Parameters
description
Search expenses by description.Variants description_startswith and description_contains. Maximum length [100]
reference_number
Search expenses by reference number. Variants reference_number_startswith and reference_number_contains. Maximum length [100]
date
Search expenses by expense date. Variants date_start, date_end, date_before and date_after. Date Format [yyyy-mm-dd]
status
Search expenses by expense status. Allowed Values unbilled, invoiced, reimbursed, non-billable and billable
amount
Search expenses by amount. Variants: amount_less_than, amount_less_equals, amount_greater_than and amount_greater_than
account_name
Search expenses by expense account name. Variants account_name_startswith and account_name_contains. Maximum length [100]
customer_name
Search expenses by customer name. Variants: customer_name_startswith and customer_name_contains. Maximum length [100]
search_text
Search expenses by account name or description or customer name or vendor name. Maximum length [100]
sort_column
Sort expenses.Allowed Values date, account_name, total, bcy_total, reference_number, customer_name and created_time
filter_by
Filter expenses by expense status. Allowed Values Status.All, Status.Billable, Status.Nonbillable, Status.Reimbursed, Status.Invoiced and Status.Unbilled
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/expenses \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "expenses": [
        {
            "expense_id": 982000000030049,
            "date": "2013-11-18",
            "account_name": "Rent",
            "description": "Marketing",
            "currency_id": 982000000567001,
            "currency_code": "USD",
            "bcy_total": 100,
            "bcy_total_without_tax": 100,
            "total": 100,
            "total_without_tax": 100,
            "is_billable": true,
            "reference_number": "#562SD23R4",
            "customer_id": 982000000567001,
            "customer_name": "Bowman & Co",
            "status": "unbilled",
            "custom_fields": [
                {
                    "customfield_id": "46000000012845",
                    "value": "Normal"
                }
            ],
            "created_time": "2013-11-18T02:17:40-0800",
            "last_modified_time": "2013-12-18T02:17:40-0800",
            "expense_receipt_name": " ",
            "mileage_rate": " ",
            "mileage_unit": " ",
            "expense_type": "non-mileage",
            "start_reading": " ",
            "end_reading": " "
        },
        {...},
        {...}
    ]
}
Update an Expense
Update an existing Expense.
OAuth Scope : ZohoInvoice.expenses.UPDATE

Arguments
account_id
string
ID of the expense account.
date
string
Date of the expense
amount
double
(Required)
Total expense value
tax_id
string
Tax ID applied
source_of_supply
string
🇮🇳 only
Place from where the goods/services are supplied. (If not given, place of contact given for the contact will be taken)
destination_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, organisation's home state will be taken)
hsn_or_sac
string
🇮🇳 only
Add HSN/SAC code for your goods/services
gst_no
string
🇮🇳 only
15 digit GST identification number of the vendor.
reverse_charge_tax_id
string
ID of the reverse charge tax
line_items
array
Show Sub-Attributes arrow
taxes
array
🇲🇽 only
Show Sub-Attributes arrow
is_inclusive_tax
boolean
Check if amount is inclusive of tax
is_billable
boolean
Check if an expense is billable
reference_number
string
(Required)
Reference number of the expense. Maximum length [100]
description
string
Description of the expense. Maximum length [100]
custom_fields
array
Custom fields for an expense.
Show Sub-Attributes arrow
customer_id
string
ID of the expense account.
currency_id
string
Unique ID of the currency
exchange_rate
double
Foreign currency exchange rate
project_id
string
ID of the project associated with the customer.
mileage_type
string
Milage expense type
vat_treatment
string
🇬🇧 only
VAT treatment for the expense. VAT treatment denotes the location of the vendor, if the vendor resides in UK then the VAT treatment is uk. If the vendor is in an EU country & VAT registered, you are resides in Northen Ireland and purchasing Goods then his VAT treatment is eu_vat_registered and if he resides outside the UK then his VAT treatment is overseas (For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
product_type
string
🇬🇧 only
Type of the expense. This denotes whether the expense is to be treated as a goods or service purchase. Allowed Values: goods and service.
acquisition_vat_id
string
🇬🇧 only
This is the ID of the tax applied in case this is an EU - goods expense and acquisition VAT needs to be reported.
reverse_charge_vat_id
string
🇬🇧 only
This is the ID of the tax applied in case this is a non UK - service expense and reverse charge VAT needs to be reported.
start_reading
double
Start reading of odometer when creating a mileage expense where mileage_type is odometer.
end_reading
double
End reading of odometer when creating a mileage expense where mileage_type is odometer.
distance
string
Distance travelled for a particular mileage expense where mileage_type is manual
mileage_unit
string
Unit of the distance travelled. Allowed Values: km and mile
mileage_rate
double
Mileage rate for a particular mileage expense.
employee_id
string
🇬🇧 only
ID of the employee who has submitted this mileage expense.
vehicle_type
string
🇬🇧 only
Vehicle type for a particular mileage expense. Allowed Values: car, van, motorcycle and bike
can_reclaim_vat_on_mileage
string
🇬🇧 only
To specify if tax can be reclaimed for this mileage expense.
fuel_type
string
🇬🇧 only
Fuel type for a particular mileage expense. Allowed Values: petrol, lpg and diesel
engine_capacity_range
string
🇬🇧 only
Engine capacity range for a particular mileage expense. Allowed Values: less_than_1400cc, between_1400cc_and_1600cc, between_1600cc_and_2000cc and more_than_2000cc
Query Parameters
receipt
Expense receipt file to attach. Allowed Extensions: gif, png, jpeg, jpg, bmp and pdf. It should be sent in multipart/formdata.
delete_receipt
A historic receipt
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/expenses/982000000030049 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "account_id": 982000000561057,
    "date": "2013-11-18",
    "amount": 120.5,
    "tax_id": 982000000566007,
    "source_of_supply": "AP",
    "destination_of_supply": "TN",
    "hsn_or_sac": 80540,
    "gst_no": "22AAAAA0000A1Z5",
    "reverse_charge_tax_id": 982000000561063,
    "line_items": [
        {
            "line_item_id": 10763000000140068,
            "account_id": 982000000561057,
            "description": "Marketing",
            "amount": 112.5,
            "tax_id": 982000000566007,
            "item_order": 1,
            "product_type": "goods",
            "acquisition_vat_id": " ",
            "reverse_charge_vat_id": " ",
            "reverse_charge_tax_id": 982000000561063,
            "tax_exemption_code": "string",
            "tax_exemption_id": 982000000561067
        }
    ],
    "taxes": [
        {
            "tax_id": 982000000566007,
            "tax_amount": 11.85
        }
    ],
    "is_inclusive_tax": false,
    "is_billable": true,
    "reference_number": "#562SD23R4",
    "description": "Marketing",
    "custom_fields": [
        {
            "customfield_id": "46000000012845",
            "value": "Normal"
        }
    ],
    "customer_id": 982000000567001,
    "currency_id": 982000000567001,
    "exchange_rate": 1,
    "project_id": 982000000567226,
    "mileage_type": "non_mileage",
    "vat_treatment": "overseas",
    "product_type": "goods",
    "acquisition_vat_id": " ",
    "reverse_charge_vat_id": " ",
    "start_reading": " ",
    "end_reading": " ",
    "distance": " ",
    "mileage_unit": " ",
    "mileage_rate": " ",
    "employee_id": " ",
    "vehicle_type": " ",
    "can_reclaim_vat_on_mileage": " ",
    "fuel_type": " ",
    "engine_capacity_range": " "
}
Response Example

{
    "code": 0,
    "message": "Expense information has been updated.",
    "expense": {
        "expense_id": 982000000030049,
        "transaction_id": " ",
        "transaction_type": "expense",
        "expense_item_id": 982000000567220,
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "destination_of_supply": "TN",
        "destination_of_supply_state": "TN",
        "hsn_or_sac": 80540,
        "source_of_supply": "AP",
        "paid_through_account_name": "Petty Cash",
        "vat_reg_no": "string",
        "reverse_charge_tax_id": 982000000561063,
        "reverse_charge_tax_name": "intra",
        "reverse_charge_tax_percentage": 10,
        "reverse_charge_tax_amount": 12,
        "tax_amount": 11.85,
        "is_itemized_expense": false,
        "is_pre_gst": "fasle",
        "trip_id": "",
        "trip_number": "",
        "reverse_charge_vat_total": 1.2,
        "acquisition_vat_total": 0,
        "acquisition_vat_summary": [
            {
                "tax": {
                    "tax_name": "SalesTax",
                    "tax_amount": 11.85
                }
            }
        ],
        "reverse_charge_vat_summary": [
            {
                "tax": {
                    "tax_name": "SalesTax",
                    "tax_amount": 11.85
                }
            }
        ],
        "account_id": 982000000561057,
        "account_name": "Rent",
        "date": "2013-11-18",
        "tax_id": 982000000566007,
        "tax_name": "SalesTax",
        "tax_percentage": 10.5,
        "currency_id": 982000000567001,
        "currency_code": "USD",
        "exchange_rate": 1,
        "sub_total": 90,
        "total": 100,
        "bcy_total": 100,
        "amount": 120.5,
        "is_inclusive_tax": false,
        "reference_number": "#562SD23R4",
        "description": "Marketing",
        "is_billable": true,
        "is_personal": false,
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "expense_receipt_name": " ",
        "expense_receipt_type": " ",
        "last_modified_time": "2013-12-18T02:17:40-0800",
        "status": "unbilled",
        "custom_fields": [
            {
                "customfield_id": "46000000012845",
                "value": "Normal"
            }
        ],
        "invoice_id": " ",
        "invoice_number": " ",
        "project_id": 982000000567226,
        "project_name": " ",
        "mileage_rate": " ",
        "mileage_type": "non_mileage",
        "expense_type": "non-mileage",
        "start_reading": " ",
        "end_reading": " "
    }
}
Get an Expense
Get the details of the Expense.
OAuth Scope : ZohoInvoice.expenses.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/expenses/982000000030049 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "expense": {
        "expense_id": 982000000030049,
        "transaction_id": " ",
        "transaction_type": "expense",
        "expense_item_id": 982000000567220,
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "destination_of_supply": "TN",
        "destination_of_supply_state": "TN",
        "hsn_or_sac": 80540,
        "source_of_supply": "AP",
        "paid_through_account_name": "Petty Cash",
        "vat_reg_no": "string",
        "reverse_charge_tax_id": 982000000561063,
        "reverse_charge_tax_name": "intra",
        "reverse_charge_tax_percentage": 10,
        "reverse_charge_tax_amount": 12,
        "tax_amount": 11.85,
        "is_itemized_expense": false,
        "is_pre_gst": "fasle",
        "trip_id": "",
        "trip_number": "",
        "reverse_charge_vat_total": 1.2,
        "acquisition_vat_total": 0,
        "acquisition_vat_summary": [
            {
                "tax": {
                    "tax_name": "SalesTax",
                    "tax_amount": 11.85
                }
            }
        ],
        "reverse_charge_vat_summary": [
            {
                "tax": {
                    "tax_name": "SalesTax",
                    "tax_amount": 11.85
                }
            }
        ],
        "account_id": 982000000561057,
        "account_name": "Rent",
        "date": "2013-11-18",
        "tax_id": 982000000566007,
        "tax_name": "SalesTax",
        "tax_percentage": 10.5,
        "currency_id": 982000000567001,
        "currency_code": "USD",
        "exchange_rate": 1,
        "sub_total": 90,
        "total": 100,
        "bcy_total": 100,
        "amount": 112.5,
        "is_inclusive_tax": false,
        "reference_number": "#562SD23R4",
        "description": "Marketing",
        "is_billable": true,
        "is_personal": false,
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "expense_receipt_name": " ",
        "expense_receipt_type": " ",
        "last_modified_time": "2013-12-18T02:17:40-0800",
        "status": "unbilled",
        "invoice_id": " ",
        "invoice_number": " ",
        "project_id": 982000000567226,
        "project_name": " ",
        "mileage_rate": " ",
        "mileage_type": "non_mileage",
        "expense_type": "non-mileage",
        "start_reading": " ",
        "end_reading": " ",
        "custom_fields": [
            {
                "customfield_id": "46000000012845",
                "value": "Normal"
            }
        ],
        "line_item": {
            "line_item_id": 10763000000140068,
            "account_id": 982000000561057,
            "account_name": "Rent",
            "description": "Marketing",
            "tax_amount": 11.85,
            "tax_id": 982000000566007,
            "tax_name": "SalesTax",
            "tax_type": "tax",
            "tax_percentage": 10.5,
            "item_total": 100,
            "item_order": 1,
            "amount": 112.5,
            "hsn_or_sac": 80540,
            "reverse_charge_tax_id": 982000000561063,
            "reverse_charge_tax_name": "intra",
            "reverse_charge_tax_percentage": 10,
            "reverse_charge_tax_amount": 12
        }
    }
}
Delete an Expense
Delete an existing expense.
OAuth Scope : ZohoInvoice.expenses.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/expenses/982000000030049 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The expense has been deleted."
}
List expense History & Comments
Get history and comments of an expense.
OAuth Scope : ZohoInvoice.expenses.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/expenses/982000000030049/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "comments": [
        {
            "comment_id": 982000000567272,
            "expense_id": 982000000030049,
            "description": "Marketing",
            "commented_by_id": 982000000554041,
            "commented_by": "John David",
            "date_description": "16 hours ago",
            "time": "4.22AM",
            "operation_type": "Added",
            "transaction_id": " ",
            "transaction_type": "expense"
        },
        {...},
        {...}
    ]
}
Create an employee
Create an employee for an expense.
OAuth Scope : ZohoInvoice.expenses.CREATE

Arguments
name
string
(Required)
Name of the contact
email
string
(Required)
Email address of the contact
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/employees \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "name": "John David",
    "email": "test@zylker.org"
}
Response Example

{
    "code": 0,
    "message": "success",
    "employee": {
        "employee_id": " ",
        "name": "John David",
        "email": "test@zylker.org"
    }
}
List employees
List employees with pagination.
OAuth Scope : ZohoInvoice.expenses.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/employees \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "employees": [
        {
            "employee_id": " ",
            "name": "John David",
            "email": "test@zylker.org"
        },
        {...},
        {...}
    ]
}
Get an employee
Get the details of the employee.
OAuth Scope : ZohoInvoice.expenses.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/employees/ \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "employee": {
        "employee_id": " ",
        "name": "John David",
        "email": "test@zylker.org"
    }
}
Delete an employee
Delete an existing employee.
OAuth Scope : ZohoInvoice.expenses.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/employee/ \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Employee has been deleted."
}



Recurring Expenses
Recurring expenses are those expenses that repeat itself after a fixed interval of time.

Possible error codes:
Error Code	Message
4027	Please select a valid date range
5012	Recurrence Name already exists
5015	Enter a valid expense amount

End Points
POST  
/recurringexpenses
GET   
/recurringexpenses
POST  
/recurringexpenses/{recurring_expense_id}
GET   
/recurringexpenses/{recurring_expense_id}
DELETE
/recurringexpenses/{recurring_expense_id}
POST  
/recurringexpenses/{recurring_expense_id}/status/stop
POST  
/recurringexpenses/{recurring_expense_id}/status/resume
GET   
/recurringexpenses/{recurring_expense_id}/expenses
GET   
/recurringexpenses/{recurring_expense_id}/comments
Attribute
account_id
string
Unique ID of an account
recurrence_name
string
Name of the Recurring Expense. Maximum length [100]
start_date
string
Start date of the recurring expense. Expenses will not be generated for dates prior to the current date. Format [yyyy-mm-dd].
end_date
string
Date on which recurring expense has to expire. Can be left as empty to run forever. Format [yyyy-mm-dd].
is_pre_gst
boolean
🇮🇳 only
Applicable for transactions that fall before july 1, 2017
source_of_supply
string
🇮🇳 only
Place from where the goods/services are supplied. (If not given, place of contact given for the contact will be taken)
destination_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, organisation's home state will be taken)
gst_no
string
🇮🇳 only
15 digit GST identification number of the vendor.
gst_treatment
string
🇮🇳 only
Choose whether the contact is GST registered/unregistered/consumer/overseas. Allowed values are business_gst , business_none , overseas , consumer .
destination_of_supply_state
string
🇮🇳 only
Place to where the goods/services are supplied
hsn_or_sac
string
🇮🇳 only
Add HSN/SAC code for your goods/services
vat_treatment
string
🇬🇧 only
VAT treatment for the expense. VAT treatment denotes the location of the vendor, if the vendor resides in UK then the VAT treatment is uk.If the vendor is in an EU country & VAT registered, you are resides in Northen Ireland and purchasing Goods then his VAT treatment is eu_vat_registered and if he resides outside the EU then his VAT treatment is overseas(For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
reverse_charge_tax_id
string
🇮🇳 only
Enter reverse charge tax ID
reverse_charge_tax_name
string
🇮🇳 only
Enter reverse charge tax name
reverse_charge_tax_percentage
double
🇮🇳 only
Tax percentage of the reverse charge
reverse_charge_tax_amount
double
🇮🇳 only
Tax amount of the reverse charge
is_reverse_charge_applied
boolean
🇮🇳 only
Applicable for transactions where you pay reverse charge
acquisition_vat_total
double
Enter the total acquisition vat.
reverse_charge_vat_total
double
🇮🇳 only
Enter the total of the reverse charge vat.
acquisition_vat_summary
array
Summary of the VAT Acquistion
Show Sub-Attributes arrow
reverse_charge_vat_summary
array
Summary of the Reverse Charge
Show Sub-Attributes arrow
recurrence_frequency
string
Frequency of the recurrance
repeat_every
string
The cycle of recurrance
amount
double
Recurring Expense amount.
total
double
Total expense
sub_total
double
Sub total of the expenses
bcy_total
double
Total in base currency
product_type
string
🇬🇧 only
Type of the expense. This denotes whether the expense is to be treated as a goods or service purchase. Allowed Values: goods and service.
acquisition_vat_id
string
🇬🇧 only
This is the ID of the tax applied in case this is an EU - goods expense and acquisition VAT needs to be reported.
reverse_charge_vat_id
string
🇮🇳 , 🇬🇧 only
This is the ID of the tax applied in case this is a non UK - service expense and reverse charge VAT needs to be reported.
tax_id
string
Unique ID for the tax
tax_name
string
Name of the tax
tax_percentage
double
Percentage of tax levied
created_time
string
Time expense was created
last_modified_time
string
Time the expense was last modified
is_inclusive_tax
boolean
To check if the total is inclusive of tax
is_billable
boolean
To check if the expense is billable
customer_id
string
Search expenses by customer id.
currency_id
string
Unique ID of the currency used
exchange_rate
double
Foreign exchange rate
project_id
string
Unique ID of the tax applied
project_name
string
Name of the project being billed
custom_fields
array
Custom fields for a recurring-expense.
Show Sub-Attributes arrow
line_item
object
Show Sub-Attributes arrow
Example

{
    "account_id": 982000000561057,
    "recurrence_name": "Monthly Rental",
    "start_date": "2016-11-19T00:00:00.000Z",
    "end_date": " ",
    "is_pre_gst": false,
    "source_of_supply": "AP",
    "destination_of_supply": "TN",
    "gst_no": "22AAAAA0000A1Z5",
    "gst_treatment": "business_gst",
    "destination_of_supply_state": "AP",
    "hsn_or_sac": 80540,
    "vat_treatment": "eu_vat_not_registered",
    "reverse_charge_tax_id": 982000000567254,
    "reverse_charge_tax_name": "inter",
    "reverse_charge_tax_percentage": 10,
    "reverse_charge_tax_amount": 10,
    "is_reverse_charge_applied": false,
    "acquisition_vat_total": 0,
    "reverse_charge_vat_total": 10,
    "acquisition_vat_summary": [
        {
            "tax_name": "SalesTax",
            "tax_amount": 11.85
        }
    ],
    "reverse_charge_vat_summary": [
        {
            "tax_name": "SalesTax",
            "tax_amount": 11.85
        }
    ],
    "recurrence_frequency": "months",
    "repeat_every": 1,
    "amount": 112.5,
    "total": 128.25,
    "sub_total": 90,
    "bcy_total": 100,
    "product_type": "goods",
    "acquisition_vat_id": " ",
    "reverse_charge_vat_id": " ",
    "tax_id": 982000000566007,
    "tax_name": "SalesTax",
    "tax_percentage": 10.5,
    "created_time": "2013-11-18T02:17:40-0800",
    "last_modified_time": "2013-12-18T02:17:40-0800",
    "is_inclusive_tax": false,
    "is_billable": true,
    "customer_id": 982000000567001,
    "currency_id": 982000000567001,
    "exchange_rate": 1,
    "project_id": " ",
    "project_name": " ",
    "custom_fields": [
        {
            "customfield_id": "46000000012845",
            "value": "Normal"
        }
    ],
    "line_item": {
        "line_item_id": 10763000000140068,
        "account_id": 982000000561057,
        "account_name": "Rent",
        "description": " ",
        "tax_amount": 11.85,
        "tax_id": 982000000566007,
        "tax_name": "SalesTax",
        "tax_type": "tax",
        "tax_percentage": 10.5,
        "item_total": 100,
        "item_order": 1,
        "hsn_or_sac": 80540,
        "reverse_charge_tax_id": 982000000567254,
        "reverse_charge_tax_name": "inter",
        "reverse_charge_tax_percentage": 10,
        "reverse_charge_tax_amount": 10
    }
}
Create a recurring expense
Create a new recurring expense.
OAuth Scope : ZohoInvoice.expenses.CREATE

Arguments
account_id
string
(Required)
Unique ID of an account
recurrence_name
string
(Required)
Name of the Recurring Expense. Maximum length [100]
start_date
string
(Required)
Start date of the recurring expense. Expenses will not be generated for dates prior to the current date. Format [yyyy-mm-dd].
gst_no
string
🇮🇳 only
15 digit GST identification number of the vendor.
source_of_supply
string
🇮🇳 only
Place from where the goods/services are supplied. (If not given, place of contact given for the contact will be taken)
destination_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, organisation's home state will be taken)
reverse_charge_tax_id
string
🇮🇳 only
Enter reverse charge tax ID
custom_fields
array
Custom fields for a recurring-expense.
Show Sub-Attributes arrow
line_items
array
Show Sub-Attributes arrow
end_date
string
Date on which recurring expense has to expire. Can be left as empty to run forever. Format [yyyy-mm-dd].
recurrence_frequency
string
(Required)
Frequency of the recurrance
repeat_every
string
(Required)
The cycle of recurrance
amount
double
(Required)
Recurring Expense amount.
vat_treatment
string
🇬🇧 only
VAT treatment for the expense. VAT treatment denotes the location of the vendor, if the vendor resides in UK then the VAT treatment is uk.If the vendor is in an EU country & VAT registered, you are resides in Northen Ireland and purchasing Goods then his VAT treatment is eu_vat_registered and if he resides outside the EU then his VAT treatment is overseas(For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
product_type
string
🇬🇧 only
Type of the expense. This denotes whether the expense is to be treated as a goods or service purchase. Allowed Values: goods and service.
acquisition_vat_id
string
🇬🇧 only
This is the ID of the tax applied in case this is an EU - goods expense and acquisition VAT needs to be reported.
reverse_charge_vat_id
string
🇮🇳 , 🇬🇧 only
This is the ID of the tax applied in case this is a non UK - service expense and reverse charge VAT needs to be reported.
tax_id
string
Unique ID for the tax
is_inclusive_tax
boolean
To check if the total is inclusive of tax
is_billable
boolean
To check if the expense is billable
customer_id
string
Search expenses by customer id.
project_id
string
Unique ID of the tax applied
currency_id
string
Unique ID of the currency used
exchange_rate
double
Foreign exchange rate
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/recurringexpenses \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "account_id": 982000000561057,
    "recurrence_name": "Monthly Rental",
    "start_date": "2016-11-19T00:00:00.000Z",
    "gst_no": "22AAAAA0000A1Z5",
    "source_of_supply": "AP",
    "destination_of_supply": "TN",
    "reverse_charge_tax_id": 982000000567254,
    "custom_fields": [
        {
            "customfield_id": "46000000012845",
            "value": "Normal"
        }
    ],
    "line_items": [
        {
            "line_item_id": 10763000000140068,
            "account_id": 982000000561057,
            "description": " ",
            "amount": 112.5,
            "tax_id": 982000000566007,
            "item_order": 1,
            "product_type": "goods",
            "acquisition_vat_id": " ",
            "reverse_charge_vat_id": " ",
            "reverse_charge_tax_id": 982000000567254,
            "tax_exemption_code": "string",
            "tax_exemption_id": 982000000567267
        }
    ],
    "end_date": " ",
    "recurrence_frequency": "months",
    "repeat_every": 1,
    "amount": 112.5,
    "vat_treatment": "eu_vat_not_registered",
    "product_type": "goods",
    "acquisition_vat_id": " ",
    "reverse_charge_vat_id": " ",
    "tax_id": 982000000566007,
    "is_inclusive_tax": false,
    "is_billable": true,
    "customer_id": 982000000567001,
    "project_id": " ",
    "currency_id": 982000000567001,
    "exchange_rate": 1
}
Response Example

{
    "code": 0,
    "message": "The recurring expense has been created",
    "recurring_expense": {
        "account_id": 982000000561057,
        "recurrence_name": "Monthly Rental",
        "start_date": "2016-11-19T00:00:00.000Z",
        "end_date": " ",
        "is_pre_gst": false,
        "source_of_supply": "AP",
        "destination_of_supply": "TN",
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "destination_of_supply_state": "AP",
        "hsn_or_sac": 80540,
        "vat_treatment": "eu_vat_not_registered",
        "reverse_charge_tax_id": 982000000567254,
        "reverse_charge_tax_name": "inter",
        "reverse_charge_tax_percentage": 10,
        "reverse_charge_tax_amount": 10,
        "is_reverse_charge_applied": false,
        "acquisition_vat_total": 0,
        "reverse_charge_vat_total": 10,
        "acquisition_vat_summary": [
            {
                "tax_name": "SalesTax",
                "tax_amount": 11.85
            }
        ],
        "reverse_charge_vat_summary": [
            {
                "tax_name": "SalesTax",
                "tax_amount": 11.85
            }
        ],
        "recurrence_frequency": "months",
        "repeat_every": 1,
        "amount": 112.5,
        "total": 128.25,
        "sub_total": 90,
        "bcy_total": 100,
        "product_type": "goods",
        "acquisition_vat_id": " ",
        "reverse_charge_vat_id": " ",
        "tax_id": 982000000566007,
        "tax_name": "SalesTax",
        "tax_percentage": 10.5,
        "created_time": "2013-11-18T02:17:40-0800",
        "last_modified_time": "2013-12-18T02:17:40-0800",
        "is_inclusive_tax": false,
        "is_billable": true,
        "customer_id": 982000000567001,
        "currency_id": 982000000567001,
        "exchange_rate": 1,
        "project_id": " ",
        "project_name": " ",
        "custom_fields": [
            {
                "customfield_id": "46000000012845",
                "value": "Normal"
            }
        ],
        "line_item": {
            "line_item_id": 10763000000140068,
            "account_id": 982000000561057,
            "account_name": "Rent",
            "description": " ",
            "tax_amount": 11.85,
            "tax_id": 982000000566007,
            "tax_name": "SalesTax",
            "tax_type": "tax",
            "tax_percentage": 10.5,
            "item_total": 100,
            "item_order": 1,
            "hsn_or_sac": 80540,
            "reverse_charge_tax_id": 982000000567254,
            "reverse_charge_tax_name": "inter",
            "reverse_charge_tax_percentage": 10,
            "reverse_charge_tax_amount": 10
        }
    }
}
List recurring expenses
List all the Expenses with pagination.
OAuth Scope : ZohoInvoice.expenses.READ

Query Parameters
recurrence_name
Search recurring expenses by recurring expense name. Variants: recurrence_name_startswith and recurrence_name_contains. Maximum length [100]
last_created_date
Search recurring expenses by date on when last expense was generated. Variants: last_created_date_start, last_created_date_end, last_created_date_before and last_created_date_after . Format [yyyy-mm-dd]
next_expense_date
Search recurring expenses by date on which next expense will be generated. Variants: next_expense_date_start, next_expense_date_end, next_expense_date_before and next_expense_date_after . Format [yyyy-mm-dd]
status
Search expenses by expense status. Allowed Values active, stopped and expired
account_id
Unique ID of an account
account_name
Search expenses by expense account name. Variants account_name_startswith and account_name_contains . Maximum length [100]
amount
Search expenses by amount. Variants: amount_less_than, amount_less_equals, amount_greater_than and amount_greater_than
customer_name
Search expenses by customer name. Variants: customer_name_startswith and customer_name_contains . Maximum length [100]
customer_id
Search expenses by customer id.
paid_through_account_id
Search expenses by paid through account id.
filter_by
Filter expenses by expense status. Allowed Values Status.All, Status.Active, Status.Expired and Status.Stopped
search_text
Search expenses by account name or description or customer name or vendor name. Maximum length [100] .
sort_column
Sort expenses.Allowed Values next_expense_date, account_name, total, last_created_date, recurrence_name, customer_name and created_time
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/recurringexpenses \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "recurring_expenses": [
        {
            "recurring_expense_id": 982000000567240,
            "recurrence_name": "Monthly Rental",
            "recurrence_frequency": "months",
            "repeat_every": 1,
            "last_created_date": "2013-11-18T00:00:00.000Z",
            "next_expense_date": "2013-12-18T00:00:00.000Z",
            "account_name": "Rent",
            "description": " ",
            "currency_id": 982000000567001,
            "currency_code": "USD",
            "total": 128.25,
            "is_billable": true,
            "customer_name": "Bowman & Co",
            "status": "active",
            "custom_fields": [
                {
                    "customfield_id": "46000000012845",
                    "value": "Normal"
                }
            ],
            "created_time": "2013-11-18T02:17:40-0800",
            "last_modified_time": "2013-12-18T02:17:40-0800"
        },
        {...},
        {...}
    ]
}
Update a recurring expense
Update an existing recurring expense.
OAuth Scope : ZohoInvoice.expenses.UPDATE

Arguments
account_id
string
(Required)
Unique ID of an account
recurrence_name
string
(Required)
Name of the Recurring Expense. Maximum length [100]
start_date
string
(Required)
Start date of the recurring expense. Expenses will not be generated for dates prior to the current date. Format [yyyy-mm-dd].
gst_no
string
🇮🇳 only
15 digit GST identification number of the vendor.
source_of_supply
string
🇮🇳 only
Place from where the goods/services are supplied. (If not given, place of contact given for the contact will be taken)
destination_of_supply
string
🇮🇳 only
Place where the goods/services are supplied to. (If not given, organisation's home state will be taken)
reverse_charge_tax_id
string
🇮🇳 only
Enter reverse charge tax ID
custom_fields
array
Custom fields for a recurring-expense.
Show Sub-Attributes arrow
line_items
array
Show Sub-Attributes arrow
end_date
string
Date on which recurring expense has to expire. Can be left as empty to run forever. Format [yyyy-mm-dd].
recurrence_frequency
string
(Required)
Frequency of the recurrance
repeat_every
string
(Required)
The cycle of recurrance
amount
double
(Required)
Recurring Expense amount.
vat_treatment
string
🇬🇧 only
VAT treatment for the expense. VAT treatment denotes the location of the vendor, if the vendor resides in UK then the VAT treatment is uk.If the vendor is in an EU country & VAT registered, you are resides in Northen Ireland and purchasing Goods then his VAT treatment is eu_vat_registered and if he resides outside the EU then his VAT treatment is overseas(For Pre Brexit, this can be split as eu_vat_registered, eu_vat_not_registered and non_eu).
product_type
string
🇬🇧 only
Type of the expense. This denotes whether the expense is to be treated as a goods or service purchase. Allowed Values: goods and service.
acquisition_vat_id
string
🇬🇧 only
This is the ID of the tax applied in case this is an EU - goods expense and acquisition VAT needs to be reported.
reverse_charge_vat_id
string
🇮🇳 , 🇬🇧 only
This is the ID of the tax applied in case this is a non UK - service expense and reverse charge VAT needs to be reported.
tax_id
string
Unique ID for the tax
is_inclusive_tax
boolean
To check if the total is inclusive of tax
is_billable
boolean
To check if the expense is billable
customer_id
string
Search expenses by customer id.
project_id
string
Unique ID of the tax applied
currency_id
string
Unique ID of the currency used
exchange_rate
double
Foreign exchange rate
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/recurringexpenses/982000000567240 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "account_id": 982000000561057,
    "recurrence_name": "Monthly Rental",
    "start_date": "2016-11-19T00:00:00.000Z",
    "gst_no": "22AAAAA0000A1Z5",
    "source_of_supply": "AP",
    "destination_of_supply": "TN",
    "reverse_charge_tax_id": 982000000567254,
    "custom_fields": [
        {
            "customfield_id": "46000000012845",
            "value": "Normal"
        }
    ],
    "line_items": [
        {
            "line_item_id": 10763000000140068,
            "account_id": 982000000561057,
            "description": " ",
            "amount": 112.5,
            "tax_id": 982000000566007,
            "item_order": 1,
            "product_type": "goods",
            "acquisition_vat_id": " ",
            "reverse_charge_vat_id": " ",
            "reverse_charge_tax_id": 982000000567254,
            "tax_exemption_code": "string",
            "tax_exemption_id": 982000000567267
        }
    ],
    "end_date": " ",
    "recurrence_frequency": "months",
    "repeat_every": 1,
    "amount": 112.5,
    "vat_treatment": "eu_vat_not_registered",
    "product_type": "goods",
    "acquisition_vat_id": " ",
    "reverse_charge_vat_id": " ",
    "tax_id": 982000000566007,
    "is_inclusive_tax": false,
    "is_billable": true,
    "customer_id": 982000000567001,
    "project_id": " ",
    "currency_id": 982000000567001,
    "exchange_rate": 1
}
Response Example

{
    "code": 0,
    "message": "Recurring expense information has been updated",
    "recurring_expense": {
        "account_id": 982000000561057,
        "recurrence_name": "Monthly Rental",
        "start_date": "2016-11-19T00:00:00.000Z",
        "end_date": " ",
        "is_pre_gst": false,
        "source_of_supply": "AP",
        "destination_of_supply": "TN",
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "destination_of_supply_state": "AP",
        "hsn_or_sac": 80540,
        "vat_treatment": "eu_vat_not_registered",
        "reverse_charge_tax_id": 982000000567254,
        "reverse_charge_tax_name": "inter",
        "reverse_charge_tax_percentage": 10,
        "reverse_charge_tax_amount": 10,
        "is_reverse_charge_applied": false,
        "acquisition_vat_total": 0,
        "reverse_charge_vat_total": 10,
        "acquisition_vat_summary": [
            {
                "tax_name": "SalesTax",
                "tax_amount": 11.85
            }
        ],
        "reverse_charge_vat_summary": [
            {
                "tax_name": "SalesTax",
                "tax_amount": 11.85
            }
        ],
        "recurrence_frequency": "months",
        "repeat_every": 1,
        "amount": 120.5,
        "total": 128.25,
        "sub_total": 90,
        "bcy_total": 100,
        "product_type": "goods",
        "acquisition_vat_id": " ",
        "reverse_charge_vat_id": " ",
        "tax_id": 982000000566007,
        "tax_name": "SalesTax",
        "tax_percentage": 10.5,
        "created_time": "2013-11-18T02:17:40-0800",
        "last_modified_time": "2013-12-18T02:17:40-0800",
        "is_inclusive_tax": false,
        "is_billable": true,
        "customer_id": 982000000567001,
        "currency_id": 982000000567001,
        "exchange_rate": 1,
        "project_id": " ",
        "project_name": " ",
        "custom_fields": [
            {
                "customfield_id": "46000000012845",
                "value": "Normal"
            }
        ],
        "line_item": {
            "line_item_id": 10763000000140068,
            "account_id": 982000000561057,
            "account_name": "Rent",
            "description": " ",
            "tax_amount": 11.85,
            "tax_id": 982000000566007,
            "tax_name": "SalesTax",
            "tax_type": "tax",
            "tax_percentage": 10.5,
            "item_total": 100,
            "item_order": 1,
            "hsn_or_sac": 80540,
            "reverse_charge_tax_id": 982000000567254,
            "reverse_charge_tax_name": "inter",
            "reverse_charge_tax_percentage": 10,
            "reverse_charge_tax_amount": 10
        }
    }
}
Get a recurring expense
Get the details of the recurring expense.
OAuth Scope : ZohoInvoice.expenses.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/recurringexpenses/982000000567240 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "recurring_expense": {
        "recurring_expense_id": 982000000567240,
        "recurrence_name": "Monthly Rental",
        "start_date": "2016-11-19T00:00:00.000Z",
        "end_date": " ",
        "is_pre_gst": false,
        "source_of_supply": "AP",
        "destination_of_supply": "TN",
        "gst_no": "22AAAAA0000A1Z5",
        "gst_treatment": "business_gst",
        "destination_of_supply_state": "AP",
        "hsn_or_sac": 80540,
        "vat_treatment": "eu_vat_not_registered",
        "reverse_charge_tax_id": 982000000567254,
        "reverse_charge_tax_name": "inter",
        "reverse_charge_tax_percentage": 10,
        "reverse_charge_tax_amount": 10,
        "is_reverse_charge_applied": false,
        "acquisition_vat_total": 0,
        "reverse_charge_vat_total": 10,
        "acquisition_vat_summary": [
            {
                "tax_name": "SalesTax",
                "tax_amount": 11.85
            }
        ],
        "reverse_charge_vat_summary": [
            {
                "tax_name": "SalesTax",
                "tax_amount": 11.85
            }
        ],
        "recurrence_frequency": "months",
        "repeat_every": 1,
        "last_created_date": "2013-11-18T00:00:00.000Z",
        "next_expense_date": "2013-12-18T00:00:00.000Z",
        "account_id": 982000000561057,
        "account_name": "Rent",
        "currency_id": 982000000567001,
        "currency_code": "USD",
        "exchange_rate": 1,
        "tax_id": 982000000566007,
        "tax_name": "SalesTax",
        "tax_percentage": 10.5,
        "tax_amount": 11.85,
        "sub_total": 90,
        "total": 128.25,
        "bcy_total": 100,
        "amount": 112.5,
        "description": " ",
        "is_inclusive_tax": false,
        "is_billable": true,
        "customer_id": 982000000567001,
        "customer_name": "Bowman & Co",
        "status": "active",
        "created_time": "2013-11-18T02:17:40-0800",
        "last_modified_time": "2013-12-18T02:17:40-0800",
        "project_id": " ",
        "project_name": " ",
        "custom_fields": [
            {
                "customfield_id": "46000000012845",
                "value": "Normal"
            }
        ],
        "line_item": {
            "line_item_id": 10763000000140068,
            "account_id": 982000000561057,
            "account_name": "Rent",
            "description": " ",
            "tax_amount": 11.85,
            "tax_id": 982000000566007,
            "tax_name": "SalesTax",
            "tax_type": "tax",
            "tax_percentage": 10.5,
            "item_total": 100,
            "item_order": 1,
            "hsn_or_sac": 80540,
            "reverse_charge_tax_id": 982000000567254,
            "reverse_charge_tax_name": "inter",
            "reverse_charge_tax_percentage": 10,
            "reverse_charge_tax_amount": 10
        }
    }
}
Delete a recurring expense
Deleting an existing recurring expense.
OAuth Scope : ZohoInvoice.expenses.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/recurringexpenses/982000000567240 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The recurring expense has been deleted."
}
Stop a recurring expense
Stop an active recurring expense.
OAuth Scope : ZohoInvoice.expenses.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/recurringexpenses/982000000567240/status/stop \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The recurring expense has been stopped."
}
Resume a recurring Expense
Resume a stopped recurring expense.
OAuth Scope : ZohoInvoice.expenses.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/recurringexpenses/982000000567240/status/resume \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The recurring expense has been activated."
}
List child expenses created
List child expenses created from recurring expense.
OAuth Scope : ZohoInvoice.expenses.READ

Query Parameters
sort_column
Sort expenses.Allowed Values next_expense_date, account_name, total, last_created_date, recurrence_name, customer_name and created_time
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/recurringexpenses/982000000567240/expenses \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "expensehistory": [
        {
            "expense_id": 982000000567250,
            "date": "2013-11-18",
            "account_name": "Rent",
            "customer_name": "Bowman & Co",
            "total": 128.25,
            "status": "active",
            "vendor_name": " ",
            "paid_through_account_name": "Undeposited Funds"
        },
        {...},
        {...}
    ]
}
List recurring expense history
Get history and comments of a recurring expense.
OAuth Scope : ZohoInvoice.expenses.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/recurringexpenses/982000000567240/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "comments": [
        {
            "comment_id": 982000000567272,
            "recurring_expense_id": 982000000567240,
            "description": " ",
            "commented_by_id": 982000000554041,
            "commented_by": "John David",
            "date": "2013-11-18",
            "time": "2.41 AM",
            "operation_type": "Added",
            "transaction_id": " ",
            "transaction_type": "expense"
        },
        {...},
        {...}
    ]
}



Projects
A project is a series of tasks performed over a period of time, to achieve certain targets. There can be many number of people working on a single project and a project may consist of single or multiple tasks. A project is billed and charged upon a customer whom the project was taken up for.

Possible error codes:
Error Code	Message
1002	Project does not exists
20004	Please ensure that the amount is not negative
20077	Expense has been recorded for this project. Hence, it cannot be deleted

End Points
POST  
/projects
GET   
/projects
PUT   
/projects/{project_id}
GET   
/projects/{project_id}
DELETE
/projects/{project_id}
POST  
/projects/{project_id}/active
POST  
/projects/{project_id}/inactive
POST  
/projects/{project_id}/clone
POST  
/projects/{project_id}/users
GET   
/projects/{project_id}/users
POST  
/projects/{project_id}/users/invite
PUT   
/projects/{project_id}/users/{user_id}
GET   
/projects/{project_id}/users/{user_id}
DELETE
/projects/{project_id}/users/{user_id}
POST  
/projects/{project_id}/comments
GET   
/projects/{project_id}/comments
DELETE
/projects/{project_id}/comments/{comment_id}
GET   
/projects/{project_id}/invoices
Attribute
project_id
string
Unoque ID of the project
project_name
string
Name of the project. Maximum length [100]
customer_id
string
Unique ID of the customer.
customer_name
string
Name of the client of the project
currency_code
string
Code to denote currency
description
string
Project Description - A short note on the project details
status
string
Project Status
billing_type
string
The way you bill your customer. Allowed Values: fixed_cost_for_project, based_on_project_hours, based_on_staff_hours and based_on_task_hours
rate
float
Total project cost
budget_type
string
Project budject type
total_hours
string
Total hours spent on project
total_amount
double
Total cost of the project
billed_hours
string
Total duration/hours of a project that is billed
billed_amount
double
Total billable amount of the project
un_billed_hours
string
Hours of the project that cannot be billed
un_billed_amount
double
Total value of Unbilled expense of the project
billable_hours
string
Hours charged for, in total project hours
billable_amount
double
Total billed amount
non_billable_hours
string
Non-billable project hours
non_billable_amount
double
Total value of non-billable expense
is_recurrence_associated
boolean
To check if project (task) billing is recurrning
recurring_invoices
array
Recurring invoices included in the project
created_time
string
Time of project creation
show_in_dashboard
boolean
To check if dashboard view is available for project
tasks
array
Tasks comprising a project
Show Sub-Attributes arrow
users
array
Users of a project
Show Sub-Attributes arrow
Example

{
    "project_id": "460000000044019",
    "project_name": "REAL TIME TRAFFIC FLUX",
    "customer_id": "460000000044001",
    "customer_name": "SAF Instruments Inc",
    "currency_code": "USD",
    "description": "A simple algorithm is to be tested with vehicle detection application.",
    "status": "active",
    "billing_type": "fixed_cost_for_project",
    "rate": 5000,
    "budget_type": " ",
    "total_hours": "12:26",
    "total_amount": 500,
    "billed_hours": "12:27",
    "billed_amount": 500,
    "un_billed_hours": "00:00",
    "un_billed_amount": 0,
    "billable_hours": "12:26",
    "billable_amount": 500,
    "non_billable_hours": "0.00",
    "non_billable_amount": 0,
    "is_recurrence_associated": false,
    "recurring_invoices": "",
    "created_time": "2013-11-18T18:05:27+0530",
    "show_in_dashboard": true,
    "tasks": [
        {
            "task_id": "460000000044009",
            "task_name": "Distribution Analysis",
            "description": "A simple algorithm is to be tested with vehicle detection application.",
            "rate": 5000,
            "budget_hours": "0",
            "total_hours": "12:26",
            "billed_hours": "12:27",
            "un_billed_hours": "00:00",
            "non_billable_hours": "0.00",
            "status": "active",
            "is_billable": true,
            "task_custom_fields": ""
        }
    ],
    "users": [
        {
            "user_id": "460000000024003",
            "is_current_user": true,
            "user_name": "John David",
            "email": "test@zylker.org",
            "user_role": "admin",
            "status": "active",
            "rate": 5000,
            "budget_hours": "0",
            "total_hours": "12:26",
            "billed_hours": "12:27",
            "un_billed_hours": "00:00"
        }
    ]
}
Create a project
Create a new project.
OAuth Scope : ZohoInvoice.projects.CREATE

Arguments
project_name
string
(Required)
Name of the project. Maximum length [100]
customer_id
string
(Required)
ID of the customer.
description
string
Project description. Maximu length [500]
billing_type
string
(Required)
The way you bill your customer. Allowed Values: fixed_cost_for_project, based_on_project_hours, based_on_staff_hours and based_on_task_hours
rate
string
Hourly rate for a task.
budget_type
string
The way you budget. Allowed Values: total_project_cost, total_project_hours, hours_per_task and hours_per_staff
budget_hours
string
Task budget hours
budget_amount
string
Give value, if you are estimating total project cost.
user_id
string
(Required)
ID of the user to be added to the project.
tasks
array
Tasks comprising a project
Show Sub-Attributes arrow
users
array
Users of a project
Show Sub-Attributes arrow
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/projects \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "project_name": "Network Distribution",
    "customer_id": "460000000044001",
    "description": "Distribution for the system of intermediaries between the producer of goods and/or services and the final user",
    "billing_type": "based_on_task_hours",
    "rate": " ",
    "budget_type": " ",
    "budget_hours": " ",
    "budget_amount": " ",
    "user_id": "INV-00003",
    "tasks": [
        {
            "task_name": "INV-00003",
            "description": "INV-00003",
            "rate": "INV-00003",
            "budget_hours": "INV-00003"
        }
    ],
    "users": [
        {
            "user_id": "INV-00003",
            "is_current_user": true,
            "user_name": "John David",
            "email": "test@zylker.org",
            "user_role": "admin",
            "status": "active",
            "rate": " ",
            "budget_hours": " ",
            "total_hours": "12:26",
            "billed_hours": "12:27",
            "un_billed_hours": "00:00"
        }
    ]
}
Response Example

{
    "code": 0,
    "message": "The project has been created.",
    "project": {
        "project_id": "460000000044019",
        "project_name": "REAL TIME TRAFFIC FLUX",
        "customer_id": "460000000044001",
        "customer_name": "SAF Instruments Inc",
        "currency_code": "USD",
        "description": "A simple algorithm is to be tested with vehicle detection application.",
        "status": "active",
        "billing_type": "fixed_cost_for_project",
        "rate": 5000,
        "budget_type": " ",
        "total_hours": "12:26",
        "total_amount": 500,
        "billed_hours": "12:27",
        "billed_amount": 500,
        "un_billed_hours": "00:00",
        "un_billed_amount": 0,
        "billable_hours": "12:26",
        "billable_amount": 500,
        "non_billable_hours": "0.00",
        "non_billable_amount": 0,
        "is_recurrence_associated": false,
        "recurring_invoices": "",
        "created_time": "2013-11-18T18:05:27+0530",
        "show_in_dashboard": true,
        "tasks": [
            {
                "task_id": "460000000044009",
                "task_name": "Distribution Analysis",
                "description": "A simple algorithm is to be tested with vehicle detection application.",
                "rate": 5000,
                "budget_hours": "0",
                "total_hours": "12:26",
                "billed_hours": "12:27",
                "un_billed_hours": "00:00",
                "non_billable_hours": "0.00",
                "status": "active",
                "is_billable": true,
                "task_custom_fields": ""
            }
        ],
        "users": [
            {
                "user_id": "460000000024003",
                "is_current_user": true,
                "user_name": "John David",
                "email": "test@zylker.org",
                "user_role": "admin",
                "status": "active",
                "rate": 5000,
                "budget_hours": "0",
                "total_hours": "12:26",
                "billed_hours": "12:27",
                "un_billed_hours": "00:00"
            }
        ]
    }
}
List projects
List all projects with pagination.
OAuth Scope : ZohoInvoice.projects.READ

Query Parameters
filter_by
Filter projects by any status. Allowed Values: Status.All, Status.Active and Status.Inactive
customer_id
Unique ID of the customer.
sort_column
Sort projects. Allowed Values: project_name, customer_name, rate and created_time
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "projects": [
        {
            "project_id": "460000000044019",
            "project_name": "REAL TIME TRAFFIC FLUX",
            "customer_id": "460000000044001",
            "customer_name": "SAF Instruments Inc",
            "description": "A simple algorithm is to be tested with vehicle detection application.",
            "status": "active",
            "billing_type": "fixed_cost_for_project",
            "rate": 5000,
            "created_time": "2013-11-18T18:05:27+0530",
            "has_attachment": false,
            "total_hours": "12:26",
            "billable_hours": "12:26"
        },
        {...},
        {...}
    ]
}
Update a project
Update details of a project.
OAuth Scope : ZohoInvoice.projects.UPDATE

Arguments
project_name
string
(Required)
Name of the project. Maximum length [100]
customer_id
string
(Required)
ID of the customer.
description
string
Project description. Maximum length [500]
billing_type
string
(Required)
The way you bill your customer. Allowed Values: fixed_cost_for_project, based_on_project_hours, based_on_staff_hours and based_on_task_hours
rate
string
Hourly rate for a task.
budget_type
string
The way you budget. Allowed Values: total_project_cost, total_project_hours, hours_per_task and hours_per_staff
budget_hours
string
Task budget hours
budget_amount
string
Give value, if you are estimating total project cost.
user_id
string
(Required)
ID of the user to be added to the project.
tasks
array
Tasks comprising a project
Show Sub-Attributes arrow
users
array
Users of a project
Show Sub-Attributes arrow
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "project_name": "Network Distribution",
    "customer_id": "460000000044001",
    "description": "Distribution for the system of intermediaries between the producer of goods and/or services and the final user",
    "billing_type": "based_on_task_hours",
    "rate": " ",
    "budget_type": " ",
    "budget_hours": " ",
    "budget_amount": " ",
    "user_id": "INV-00003",
    "tasks": [
        {
            "task_name": "INV-00003",
            "description": "INV-00003",
            "rate": "INV-00003",
            "budget_hours": "INV-00003"
        }
    ],
    "users": [
        {
            "user_id": "INV-00003",
            "is_current_user": true,
            "user_name": "John David",
            "email": "test@zylker.org",
            "user_role": "admin",
            "status": "active",
            "rate": " ",
            "budget_hours": " ",
            "total_hours": "12:26",
            "billed_hours": "12:27",
            "un_billed_hours": "00:00"
        }
    ]
}
Response Example

{
    "code": 0,
    "message": "The project information has been updated.",
    "project": {
        "project_id": "460000000044019",
        "project_name": "REAL TIME TRAFFIC FLUX",
        "customer_id": "460000000044001",
        "customer_name": "SAF Instruments Inc",
        "currency_code": "USD",
        "description": "A simple algorithm is to be tested with vehicle detection application.",
        "status": "active",
        "billing_type": "fixed_cost_for_project",
        "rate": 5000,
        "budget_type": " ",
        "total_hours": "12:26",
        "total_amount": 500,
        "billed_hours": "12:27",
        "billed_amount": 500,
        "un_billed_hours": "00:00",
        "un_billed_amount": 0,
        "billable_hours": "12:26",
        "billable_amount": 500,
        "non_billable_hours": "0.00",
        "non_billable_amount": 0,
        "is_recurrence_associated": false,
        "recurring_invoices": "",
        "created_time": "2013-11-18T18:05:27+0530",
        "show_in_dashboard": true,
        "tasks": [
            {
                "task_id": "460000000044009",
                "task_name": "Distribution Analysis",
                "description": "A simple algorithm is to be tested with vehicle detection application.",
                "rate": 5000,
                "budget_hours": "0",
                "total_hours": "12:26",
                "billed_hours": "12:27",
                "un_billed_hours": "00:00",
                "non_billable_hours": "0.00",
                "status": "active",
                "is_billable": true,
                "task_custom_fields": ""
            }
        ],
        "users": [
            {
                "user_id": "460000000024003",
                "is_current_user": true,
                "user_name": "John David",
                "email": "test@zylker.org",
                "user_role": "admin",
                "status": "active",
                "rate": 5000,
                "budget_hours": "0",
                "total_hours": "12:26",
                "billed_hours": "12:27",
                "un_billed_hours": "00:00"
            }
        ]
    }
}
Get a project
Get the details of a project.
OAuth Scope : ZohoInvoice.projects.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "project": {
        "project_id": "460000000044019",
        "project_name": "REAL TIME TRAFFIC FLUX",
        "customer_id": "460000000044001",
        "customer_name": "SAF Instruments Inc",
        "currency_code": "USD",
        "description": "A simple algorithm is to be tested with vehicle detection application.",
        "status": "active",
        "billing_type": "fixed_cost_for_project",
        "rate": 5000,
        "budget_type": " ",
        "total_hours": "12:26",
        "total_amount": 500,
        "billed_hours": "12:27",
        "billed_amount": 500,
        "un_billed_hours": "00:00",
        "un_billed_amount": 0,
        "billable_hours": "12:26",
        "billable_amount": 500,
        "non_billable_hours": "0.00",
        "non_billable_amount": 0,
        "is_recurrence_associated": false,
        "recurring_invoices": "",
        "created_time": "2013-11-18T18:05:27+0530",
        "show_in_dashboard": true,
        "tasks": [
            {
                "task_id": "460000000044009",
                "task_name": "Distribution Analysis",
                "description": "A simple algorithm is to be tested with vehicle detection application.",
                "rate": 5000,
                "budget_hours": "0",
                "total_hours": "12:26",
                "billed_hours": "12:27",
                "un_billed_hours": "00:00",
                "non_billable_hours": "0.00",
                "status": "active",
                "is_billable": true,
                "task_custom_fields": ""
            }
        ]
    }
}
Delete project
Deleting a existing project.
OAuth Scope : ZohoInvoice.projects.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The project has been deleted."
}
Activate a project
Mark project as active
OAuth Scope : ZohoInvoice.projects.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/active \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The selected Projects have been marked as active."
}
Deactivate a project
Marking a project as inactive.
OAuth Scope : ZohoInvoice.projects.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/inactive \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The selected projects have been marked as inactive."
}
Clone a project
Cloning the settings of an existing project.
OAuth Scope : ZohoInvoice.projects.CREATE

Arguments
project_name
string
(Required)
Name of the project. Maximum length [100]
description
string
Project description. Maximum length [500]
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/clone \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "project_name": "Network Distribution",
    "description": "Distribution for the system of intermediaries between the producer of goods and/or services and the final user"
}
Response Example

{
    "code": 0,
    "message": "Project has been cloned successfully.",
    "project": {
        "project_id": "460000000044019",
        "project_name": "REAL TIME TRAFFIC FLUX",
        "customer_id": "460000000044001",
        "customer_name": "SAF Instruments Inc",
        "currency_code": "USD",
        "description": "A simple algorithm is to be tested with vehicle detection application.",
        "status": "active",
        "billing_type": "fixed_cost_for_project",
        "rate": 5000,
        "budget_type": " ",
        "total_hours": "12:26",
        "total_amount": 500,
        "billed_hours": "12:27",
        "billed_amount": 500,
        "un_billed_hours": "00:00",
        "un_billed_amount": 0,
        "billable_hours": "12:26",
        "billable_amount": 500,
        "non_billable_hours": "0.00",
        "non_billable_amount": 0,
        "is_recurrence_associated": false,
        "recurring_invoices": "",
        "created_time": "2013-11-18T18:05:27+0530",
        "show_in_dashboard": true,
        "tasks": [
            {
                "task_id": "460000000044009",
                "task_name": "Distribution Analysis",
                "description": "A simple algorithm is to be tested with vehicle detection application.",
                "rate": 5000,
                "budget_hours": "0",
                "total_hours": "12:26",
                "billed_hours": "12:27",
                "un_billed_hours": "00:00",
                "non_billable_hours": "0.00",
                "status": "active",
                "is_billable": true,
                "task_custom_fields": ""
            }
        ],
        "users": [
            {
                "user_id": "460000000024003",
                "is_current_user": true,
                "user_name": "John David",
                "email": "test@zylker.org",
                "user_role": "admin",
                "status": "active",
                "rate": 5000,
                "budget_hours": "0",
                "total_hours": "12:26",
                "billed_hours": "12:27",
                "un_billed_hours": "00:00"
            }
        ]
    }
}
Assign users
Assign a users to a project.
OAuth Scope : ZohoInvoice.projects.CREATE

Arguments
user_id
string
(Required)
ID of the user to be added to the project.
rate
float
Total project cost
budget_hours
string
Planned hours for completion of project
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/users \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "user_id": "INV-00003",
    "rate": 5000,
    "budget_hours": "0"
}
Response Example

{
    "code": 0,
    "message": "Users added.",
    "users": [
        {
            "user_id": "460000000024003",
            "is_current_user": true,
            "user_name": "John David",
            "email": "test@zylker.org",
            "user_role": "admin",
            "status": "active",
            "rate": 5000,
            "budget_hours": "0"
        },
        {...},
        {...}
    ]
}
List Users
Get list of all users associated to a project.
OAuth Scope : ZohoInvoice.projects.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/users \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "users": [
        {
            "user_id": "460000000024003",
            "is_current_user": true,
            "user_name": "John David",
            "email": "test@zylker.org",
            "user_role": "admin",
            "status": "active",
            "rate": 5000,
            "budget_hours": "0"
        },
        {...},
        {...}
    ]
}
Invite user
Invite a user to the project.
OAuth Scope : ZohoInvoice.projects.CREATE

Arguments
user_name
string
(Required)
Name of the user. Maximum length [200]
email
string
(Required)
Email of the user. Maximum length [100]
user_role
string
Role to be assigned. Allowed Values: staff, admin and timesheetstaff
rate
string
Hourly rate for a task.
budget_hours
string
Planned hours for completion of project
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/users/invite \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "user_name": "John David",
    "email": "test@zylker.org",
    "user_role": "admin",
    "rate": " ",
    "budget_hours": "0"
}
Response Example

{
    "code": 0,
    "message": "The staff has been added.",
    "users": [
        {
            "user_id": "460000000024003",
            "user_name": "John David",
            "email": "test@zylker.org",
            "user_role": "admin",
            "is_current_user": true
        },
        {...},
        {...}
    ]
}
Update user
Update details of a user.
OAuth Scope : ZohoInvoice.projects.UPDATE

Arguments
user_name
string
Name of the user. Maximum length [200]
user_role
string
Role to be assigned. Allowed Values: staff, admin and timesheetstaff
rate
float
Total project cost
budget_hours
string
Planned hours for completion of project
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/users/460000000024003 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "user_name": "John David",
    "user_role": "admin",
    "rate": 5000,
    "budget_hours": "0"
}
Response Example

{
    "code": 0,
    "message": "The staff information has been updated.",
    "users": [
        {
            "user_id": "460000000024003",
            "user_name": "John David",
            "email": "test@zylker.org",
            "user_role": "admin",
            "is_current_user": true
        },
        {...},
        {...}
    ]
}
Get a User
Get details of a user in project.
OAuth Scope : ZohoInvoice.projects.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/users/460000000024003 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "users": {
        "user_id": "460000000024003",
        "is_current_user": true,
        "user_name": "John David",
        "email": "test@zylker.org",
        "user_role": "admin"
    }
}
Delete user
Remove user from a project.
OAuth Scope : ZohoInvoice.projects.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/users/460000000024003 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The staff has been removed"
}
Post comment
Post comment to a project.
OAuth Scope : ZohoInvoice.projects.CREATE

Arguments
description
string
(Required)
Project description. Maximum length [500]
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "description": "Billing based on task hours"
}
Response Example

{
    "code": 0,
    "message": "Comments added.",
    "comments": [
        {
            "project_id": "460000000044019",
            "comment_id": "460000000044027",
            "description": "A simple algorithm is to be tested with vehicle detection application.",
            "commented_by_id": "460000000024003",
            "commented_by": "John David",
            "date": "2013-11-18",
            "date_description": "19 days ago",
            "time": "6:52 PM"
        },
        {...},
        {...}
    ]
}
List comments
Get comments for a project.
OAuth Scope : ZohoInvoice.projects.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/comments \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "comments": [
        {
            "comment_id": "460000000044027",
            "project_id": "460000000044019",
            "description": "A simple algorithm is to be tested with vehicle detection application.",
            "commented_by_id": "460000000024003",
            "commented_by": "John David",
            "is_current_user": true,
            "date": "2013-11-18",
            "date_description": "19 days ago",
            "time": "6:52 PM"
        },
        {...},
        {...}
    ]
}
Delete comment
Deleting a comment.
OAuth Scope : ZohoInvoice.projects.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/comments/460000000044027 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The comment has been deleted."
}
List invoices
Lists invoices created for this project.
OAuth Scope : ZohoInvoice.projects.READ

Query Parameters
sort_column
Sort invoices raised. Allowed Values: invoice_number, date, total, balance and created_time
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects/460000000044019/invoices \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "invoices": [
        {
            "invoice_id": "460000000044001",
            "customer_name": "SAF Instruments Inc",
            "status": "active",
            "invoice_number": "INV-00004",
            "reference_number": " ",
            "date": "2013-11-18",
            "due_date": "2013-11-19",
            "total": "310.75",
            "balance": "48.75",
            "created_time": "2013-11-18T18:05:27+0530"
        },
        {...},
        {...}
    ]
}


Tasks
A project comprises of a single or multiple tasks that need to be completed. You need to add a task to the project before you log time.

End Points
POST  
/projects/{project_id}/tasks
GET   
/projects/{project_id}/tasks
PUT   
/projects/{project_id}/tasks/{task_id}
GET   
/projects/{project_id}/tasks/{task_id}
DELETE
/projects/{project_id}/tasks/{task_id}
Attribute
project_id
string
Unique ID of the project generated by the server.
task_id
string
Unique ID of the task generated by the server.
currency_id
string
The currenct ID of the currency
customer_id
string
Customer ID of the customer for whom the task is created.
task_name
string
The name of the task. Maximum length [100]
project_name
string
The name of the project
customer_name
string
Name of the customer to whom the task is created.
billed_hours
double
The total hours that are billed.
log_time
double
Total hours logged in the project.
un_billed_hours
double
Total hours that are unbilled.
Example

{
    "project_id": "90300000072369",
    "task_id": "90300000072369",
    "currency_id": 982000000000190,
    "customer_id": "903000000000099",
    "task_name": "Painting",
    "project_name": "Furniture Manufacturing",
    "customer_name": "David Sujin",
    "billed_hours": "12:06",
    "log_time": "13:06",
    "un_billed_hours": "01:00"
}
Add a task
Adding a new task to a project.
OAuth Scope : ZohoInvoice.projects.CREATE

Arguments
task_name
string
(Required)
The name of the task. Maximum length [100]
description
string
The description of the project.
rate
integer
Hourly rate for a task.
budget_hours
integer
Task budget hours.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/projects/90300000072369/tasks \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "task_name": "Painting",
    "description": "",
    "rate": 3,
    "budget_hours": ""
}
Response Example

{
    "code": 0,
    "message": "The task has been added.",
    "task": {
        "project_id": "90300000072369",
        "task_id": "90300000072369",
        "currency_id": 982000000000190,
        "customer_id": "903000000000099",
        "task_name": "Painting",
        "project_name": "Furniture Manufacturing",
        "customer_name": "David Sujin",
        "billed_hours": "12:06",
        "log_time": "13:06",
        "un_billed_hours": "01:00"
    }
}
List tasks
Get list of all the tasks added to a project.
OAuth Scope : ZohoInvoice.projects.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects/90300000072369/tasks \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "tasks": [
        {
            "project_id": "90300000072369",
            "task_id": "90300000072369",
            "currency_id": 982000000000190,
            "customer_id": "903000000000099",
            "task_name": "Painting",
            "project_name": "Furniture Manufacturing",
            "customer_name": "David Sujin",
            "billed_hours": "12:06",
            "log_time": "13:06",
            "un_billed_hours": "01:00"
        },
        {...},
        {...}
    ]
}
Update a task
Update the details of an existing task.
OAuth Scope : ZohoInvoice.projects.UPDATE

Arguments
task_name
string
(Required)
The name of the task. Maximum length [100]
description
string
The description of the project.
rate
integer
Hourly rate for a task.
budget_hours
integer
Task budget hours.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/projects/90300000072369/tasks/90300000072369 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "task_name": "Painting",
    "description": "",
    "rate": 3,
    "budget_hours": ""
}
Response Example

{
    "code": 0,
    "message": "The task information has been updated.",
    "task": {
        "project_id": "90300000072369",
        "task_id": "90300000072369",
        "currency_id": 982000000000190,
        "customer_id": "903000000000099",
        "task_name": "Painting",
        "project_name": "Furniture Manufacturing",
        "customer_name": "David Sujin",
        "billed_hours": "12:06",
        "log_time": "13:06",
        "un_billed_hours": "01:00"
    }
}
Get a task
Get the details of a task.
OAuth Scope : ZohoInvoice.projects.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects/90300000072369/tasks/90300000072369 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "task": {
        "project_id": "90300000072369",
        "project_name": "Furniture Manufacturing",
        "task_id": "90300000072369",
        "task_name": "Painting",
        "description": "",
        "rate": 3,
        "status": "active",
        "is_billable": true
    }
}
Delete a Task
Delete a task added to a project.
OAuth Scope : ZohoInvoice.projects.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/projects/90300000072369/tasks/90300000072369 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The task has been deleted successfully."
}


Tasks
A project comprises of a single or multiple tasks that need to be completed. You need to add a task to the project before you log time.

End Points
POST  
/projects/{project_id}/tasks
GET   
/projects/{project_id}/tasks
PUT   
/projects/{project_id}/tasks/{task_id}
GET   
/projects/{project_id}/tasks/{task_id}
DELETE
/projects/{project_id}/tasks/{task_id}
Attribute
project_id
string
Unique ID of the project generated by the server.
task_id
string
Unique ID of the task generated by the server.
currency_id
string
The currenct ID of the currency
customer_id
string
Customer ID of the customer for whom the task is created.
task_name
string
The name of the task. Maximum length [100]
project_name
string
The name of the project
customer_name
string
Name of the customer to whom the task is created.
billed_hours
double
The total hours that are billed.
log_time
double
Total hours logged in the project.
un_billed_hours
double
Total hours that are unbilled.
Example

{
    "project_id": "90300000072369",
    "task_id": "90300000072369",
    "currency_id": 982000000000190,
    "customer_id": "903000000000099",
    "task_name": "Painting",
    "project_name": "Furniture Manufacturing",
    "customer_name": "David Sujin",
    "billed_hours": "12:06",
    "log_time": "13:06",
    "un_billed_hours": "01:00"
}
Add a task
Adding a new task to a project.
OAuth Scope : ZohoInvoice.projects.CREATE

Arguments
task_name
string
(Required)
The name of the task. Maximum length [100]
description
string
The description of the project.
rate
integer
Hourly rate for a task.
budget_hours
integer
Task budget hours.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/projects/90300000072369/tasks \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "task_name": "Painting",
    "description": "",
    "rate": 3,
    "budget_hours": ""
}
Response Example

{
    "code": 0,
    "message": "The task has been added.",
    "task": {
        "project_id": "90300000072369",
        "task_id": "90300000072369",
        "currency_id": 982000000000190,
        "customer_id": "903000000000099",
        "task_name": "Painting",
        "project_name": "Furniture Manufacturing",
        "customer_name": "David Sujin",
        "billed_hours": "12:06",
        "log_time": "13:06",
        "un_billed_hours": "01:00"
    }
}
List tasks
Get list of all the tasks added to a project.
OAuth Scope : ZohoInvoice.projects.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects/90300000072369/tasks \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "tasks": [
        {
            "project_id": "90300000072369",
            "task_id": "90300000072369",
            "currency_id": 982000000000190,
            "customer_id": "903000000000099",
            "task_name": "Painting",
            "project_name": "Furniture Manufacturing",
            "customer_name": "David Sujin",
            "billed_hours": "12:06",
            "log_time": "13:06",
            "un_billed_hours": "01:00"
        },
        {...},
        {...}
    ]
}
Update a task
Update the details of an existing task.
OAuth Scope : ZohoInvoice.projects.UPDATE

Arguments
task_name
string
(Required)
The name of the task. Maximum length [100]
description
string
The description of the project.
rate
integer
Hourly rate for a task.
budget_hours
integer
Task budget hours.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/projects/90300000072369/tasks/90300000072369 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "task_name": "Painting",
    "description": "",
    "rate": 3,
    "budget_hours": ""
}
Response Example

{
    "code": 0,
    "message": "The task information has been updated.",
    "task": {
        "project_id": "90300000072369",
        "task_id": "90300000072369",
        "currency_id": 982000000000190,
        "customer_id": "903000000000099",
        "task_name": "Painting",
        "project_name": "Furniture Manufacturing",
        "customer_name": "David Sujin",
        "billed_hours": "12:06",
        "log_time": "13:06",
        "un_billed_hours": "01:00"
    }
}
Get a task
Get the details of a task.
OAuth Scope : ZohoInvoice.projects.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects/90300000072369/tasks/90300000072369 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "task": {
        "project_id": "90300000072369",
        "project_name": "Furniture Manufacturing",
        "task_id": "90300000072369",
        "task_name": "Painting",
        "description": "",
        "rate": 3,
        "status": "active",
        "is_billable": true
    }
}
Delete a Task
Delete a task added to a project.
OAuth Scope : ZohoInvoice.projects.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/projects/90300000072369/tasks/90300000072369 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The task has been deleted successfully."
}


Time Entries
Time entries are various entries of time made by users in a project, based on the time they spent on a project, in a task.

Possible error codes:
Error Code	Message
1002	This task does not exist in this project. Hence, this timesheet entry cannot be made
20050	This timesheet entry is already being timed
20054	This timesheet is being timed. Hence, it cannot be edited

End Points
POST  
/projects/timeentries
GET   
/projects/timeentries
DELETE
/projects/timeentries
PUT   
/projects/timeentries/{time_entry_id}
GET   
/projects/timeentries/{time_entry_id}
DELETE
/projects/timeentries/{time_entry_id}
POST  
/projects/timeentries/{time_entry_id}/timer/start
POST  
/projects/timeentries/timer/stop
GET   
/projects/timeentries/runningtimer/me
Attribute
time_entry_id
string
Unique ID of the time entry
project_id
string
Unique ID of the project
project_name
string
Name of the project
customer_id
string
Search projects by customer id.
customer_name
string
Name of the client for whom the project is planned
task_id
string
Unique ID of the task
task_name
string
Name of the task
user_id
string
Unique ID of the user of timesheet.
user_name
string
User name of the current user
is_current_user
boolean
To check if the user is currently a part of the task
log_date
string
Date on which the user spent on the task. Date Format [yyyy-mm-dd]
begin_time
string
Time of starting the clock
end_time
string
Closing time of the task
log_time
string
Total time soent on the task
is_billable
boolean
To check if the task is billable
billed_status
string
status of billing
invoice_id
string
Unique ID of the invoice
notes
string
Short notes on the task
timer_started_at
string
Opening time of the task
timer_started_at_utc_time
string
Time task started
timer_duration_in_minutes
string
Duration of task in minutes
timer_duration_in_seconds
string
Total task duration in seconds
created_time
string
Time of task creation
timesheet_custom_fields
string
Additional fields in timesheet
Example

{
    "time_entry_id": "460000000044021",
    "project_id": "460000000044019",
    "project_name": "REAL TIME TRAFFIC FLUX",
    "customer_id": "460000000044001",
    "customer_name": "SAF Instruments Inc",
    "task_id": "460000000044009",
    "task_name": "Distribution Analysis",
    "user_id": "460000000024003",
    "user_name": "John David",
    "is_current_user": true,
    "log_date": "2013-09-17",
    "begin_time": "03:00",
    "end_time": "04:00",
    "log_time": "05:00",
    "is_billable": true,
    "billed_status": "unbilled",
    "invoice_id": "",
    "notes": " ",
    "timer_started_at": " ",
    "timer_started_at_utc_time": "",
    "timer_duration_in_minutes": " ",
    "timer_duration_in_seconds": "",
    "created_time": "2013-09-11T18:05:27+0530",
    "timesheet_custom_fields": ""
}
Log time entries
Logging time entries.
OAuth Scope : ZohoInvoice.projects.CREATE

Arguments
project_id
string
(Required)
ID of the project.
task_id
string
(Required)
ID of the task.
user_id
string
(Required)
ID of the user.
log_date
string
(Required)
Date on which the user spent on the task. Date Format [yyyy-dd-mm]
log_time
string
Time the user spent on this task. Either send this attribute or begin and end time attributes. Time-Format [HH:mm]
begin_time
string
Time the user started working on this task. Time-Format [HH:mm]
end_time
string
Time the user stopped working on this task. Time-Format [HH:mm]
is_billable
boolean
Whether it is billable or not.
notes
string
Description of the work done. Maximum length [500]
start_timer
string
Start timer.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/projects/timeentries \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "project_id": "Network Distribution",
    "task_id": "460000000044001",
    "user_id": "460000000024003",
    "log_date": "2013-09-17",
    "log_time": " ",
    "begin_time": "10:00",
    "end_time": "15:00",
    "is_billable": true,
    "notes": " ",
    "start_timer": " "
}
Response Example

{
    "code": 0,
    "message": "Your timesheet entry has been added.",
    "time_entry": {
        "time_entry_id": "460000000044021",
        "project_id": "460000000044019",
        "project_name": "REAL TIME TRAFFIC FLUX",
        "customer_id": "460000000044001",
        "customer_name": "SAF Instruments Inc",
        "task_id": "460000000044009",
        "task_name": "Distribution Analysis",
        "user_id": "460000000024003",
        "user_name": "John David",
        "is_current_user": true,
        "log_date": "2013-09-17",
        "begin_time": "03:00",
        "end_time": "04:00",
        "log_time": "05:00",
        "is_billable": true,
        "billed_status": "unbilled",
        "invoice_id": "",
        "notes": " ",
        "timer_started_at": " ",
        "timer_started_at_utc_time": "",
        "timer_duration_in_minutes": " ",
        "timer_duration_in_seconds": "",
        "created_time": "2013-09-11T18:05:27+0530",
        "timesheet_custom_fields": ""
    }
}
List time entries.
List all time entries with pagination.
OAuth Scope : ZohoInvoice.projects.READ

Query Parameters
from_date
Date from which the time entries logged to be fetched
to_date
Date up to which the time entries logged to be fetched
filter_by
Filter time entries by date and status. Allowed Values: Date.All, Date.Today, Date.ThisWeek, Date.ThisMonth, Date.ThisQuarter, Date.ThisYear, Date.PreviousDay, Date.PreviousWeek, Date.PreviousMonth, Date.PreviousQuarter, Date.PreviousYear, Date.CustomDate, Status.Unbilled and Status.Invoiced
project_id
Unique ID of the project
user_id
Unique ID of the user of timesheet.
sort_column
Sort time entries. Allowed Values: project_name, task_name, user_name, log_date, timer_started_at and customer_name
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects/timeentries \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "time_entries": [
        {
            "time_entry_id": "460000000044021",
            "project_id": "460000000044019",
            "project_name": "REAL TIME TRAFFIC FLUX",
            "customer_id": "460000000044001",
            "customer_name": "SAF Instruments Inc",
            "task_id": "460000000044009",
            "task_name": "Distribution Analysis",
            "user_id": "460000000024003",
            "is_current_user": true,
            "user_name": "John David",
            "log_date": "2013-09-17",
            "begin_time": "03:00",
            "end_time": "04:00",
            "log_time": "05:00",
            "is_billable": true,
            "billed_status": "unbilled",
            "invoice_id": "",
            "notes": " ",
            "timer_started_at": " ",
            "timer_duration_in_minutes": " ",
            "created_time": "2013-09-11T18:05:27+0530"
        },
        {...},
        {...}
    ]
}
Delete time entries
Deleting time entries.
OAuth Scope : ZohoInvoice.projects.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/projects/timeentries \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The selected timesheet entries have been deleted"
}
Update time entry
Update logged time entry.
OAuth Scope : ZohoInvoice.projects.UPDATE

Arguments
project_id
string
(Required)
ID of the project.
task_id
string
(Required)
ID of the task.
user_id
string
(Required)
ID of the user.
log_date
string
(Required)
Date on which the user spent on the task. Date Format [yyyy-mm-dd]
log_time
string
Time the user spent on this task. Either send this attribute or begin and end time attributes. Time Format [HH:mm]
begin_time
string
Time the user started working on this task. Time Format [HH:mm]
end_time
string
Time the user stopped working on this task. Time Format [HH:mm]
is_billable
boolean
Whether it is billable or not.
notes
string
Description of the work done. Maximum length [500]
start_timer
string
Start timer.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/projects/timeentries/460000000044021 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "project_id": "Network Distribution",
    "task_id": "460000000044001",
    "user_id": "460000000024003",
    "log_date": "2013-09-17",
    "log_time": " ",
    "begin_time": "10:00",
    "end_time": "15:00",
    "is_billable": true,
    "notes": " ",
    "start_timer": " "
}
Response Example

{
    "code": 0,
    "message": "The timesheet's information has been updated.",
    "time_entry": {
        "time_entry_id": "460000000044021",
        "project_id": "460000000044019",
        "project_name": "REAL TIME TRAFFIC FLUX",
        "customer_id": "460000000044001",
        "customer_name": "SAF Instruments Inc",
        "task_id": "460000000044009",
        "task_name": "Distribution Analysis",
        "user_id": "460000000024003",
        "user_name": "John David",
        "is_current_user": true,
        "log_date": "2013-09-17",
        "begin_time": "03:00",
        "end_time": "04:00",
        "log_time": "05:00",
        "is_billable": true,
        "billed_status": "unbilled",
        "invoice_id": "",
        "notes": " ",
        "timer_started_at": " ",
        "timer_started_at_utc_time": "",
        "timer_duration_in_minutes": " ",
        "timer_duration_in_seconds": "",
        "created_time": "2013-09-11T18:05:27+0530",
        "timesheet_custom_fields": ""
    }
}
Get a time entry
Get details of a time entry.
OAuth Scope : ZohoInvoice.projects.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects/timeentries/460000000044021 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "time_entry": {
        "time_entry_id": "460000000044021",
        "project_id": "460000000044019",
        "project_name": "REAL TIME TRAFFIC FLUX",
        "customer_id": "460000000044001",
        "customer_name": "SAF Instruments Inc",
        "task_id": "460000000044009",
        "task_name": "Distribution Analysis",
        "user_id": "460000000024003",
        "user_name": "John David",
        "is_current_user": true,
        "log_date": "2013-09-17",
        "begin_time": "03:00",
        "end_time": "04:00",
        "log_time": "05:00",
        "is_billable": true,
        "billed_status": "unbilled",
        "invoice_id": "",
        "notes": " ",
        "timer_started_at": " ",
        "timer_started_at_utc_time": "",
        "timer_duration_in_minutes": " ",
        "timer_duration_in_seconds": "",
        "created_time": "2013-09-11T18:05:27+0530",
        "timesheet_custom_fields": ""
    }
}
Delete time entry
Deleting a logged time entry.
OAuth Scope : ZohoInvoice.projects.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/projects/timeentries/460000000044021 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The time entry has been deleted."
}
Start timer
Start tracking time spent.
OAuth Scope : ZohoInvoice.projects.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/projects/timeentries/460000000044021/timer/start \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The timer has been started.",
    "time_entry": {
        "time_entry_id": "460000000044021",
        "project_id": "460000000044019",
        "project_name": "REAL TIME TRAFFIC FLUX",
        "customer_id": "460000000044001",
        "customer_name": "SAF Instruments Inc",
        "task_id": "460000000044009",
        "task_name": "Distribution Analysis",
        "user_id": "460000000024003",
        "user_name": "John David",
        "is_current_user": true,
        "log_date": "2013-09-17",
        "begin_time": "03:00",
        "end_time": "04:00",
        "log_time": "05:00",
        "is_billable": true,
        "billed_status": "unbilled",
        "invoice_id": "",
        "notes": " ",
        "timer_started_at": " ",
        "timer_started_at_utc_time": "",
        "timer_duration_in_minutes": " ",
        "timer_duration_in_seconds": "",
        "created_time": "2013-09-11T18:05:27+0530",
        "timesheet_custom_fields": ""
    }
}
Stop timer
Stop tracking time, say taking a break or leaving.
OAuth Scope : ZohoInvoice.projects.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/projects/timeentries/timer/stop \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Timer has been stopped successfully.",
    "time_entry": {
        "time_entry_id": "460000000044021",
        "project_id": "460000000044019",
        "project_name": "REAL TIME TRAFFIC FLUX",
        "customer_id": "460000000044001",
        "customer_name": "SAF Instruments Inc",
        "task_id": "460000000044009",
        "task_name": "Distribution Analysis",
        "user_id": "460000000024003",
        "user_name": "John David",
        "is_current_user": true,
        "log_date": "2013-09-17",
        "begin_time": "03:00",
        "end_time": "04:00",
        "log_time": "05:00",
        "is_billable": true,
        "billed_status": "unbilled",
        "invoice_id": "",
        "notes": " ",
        "timer_started_at": " ",
        "timer_started_at_utc_time": "",
        "timer_duration_in_minutes": " ",
        "timer_duration_in_seconds": "",
        "created_time": "2013-09-11T18:05:27+0530",
        "timesheet_custom_fields": ""
    }
}
Get timer
Get current running timer.
OAuth Scope : ZohoInvoice.projects.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/projects/timeentries/runningtimer/me \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "time_entry": {
        "time_entry_id": "460000000044021",
        "project_id": "460000000044019",
        "project_name": "REAL TIME TRAFFIC FLUX",
        "customer_id": "460000000044001",
        "customer_name": "SAF Instruments Inc",
        "task_id": "460000000044009",
        "task_name": "Distribution Analysis",
        "user_id": "460000000024003",
        "user_name": "John David",
        "is_current_user": true,
        "log_date": "2013-09-17",
        "begin_time": "03:00",
        "end_time": "04:00",
        "log_time": "05:00",
        "is_billable": true,
        "billed_status": "unbilled",
        "invoice_id": "",
        "notes": " ",
        "timer_started_at": " ",
        "timer_started_at_utc_time": "",
        "timer_duration_in_minutes": " ",
        "timer_duration_in_seconds": "",
        "created_time": "2013-09-11T18:05:27+0530",
        "timesheet_custom_fields": ""
    }
}



Users
Users are various individuals/entities that are a part of an organisation. Each user will have a different role to play, like admin, staff etc., .

End Points
POST  
/users
GET   
/users
PUT   
/users/{user_id}
GET   
/users/{user_id}
DELETE
/users/{user_id}
GET   
/users/me
POST  
/users/{user_id}/invite
POST  
/users/{user_id}/active
POST  
/users/{user_id}/inactive
Create a user
Create a user for your organization.
OAuth Scope : ZohoInvoice.settings.CREATE

Arguments
name
string
(Required)
name of the user
email
string
(Required)
email address of the user
user_role
string
The role of the user. Admin, Timesheet User etc.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/users \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "name": "David Sujin",
    "email": "test@zylker.org",
    "user_role": "admin"
}
Response Example

{
    "code": 0,
    "message": "Your invitation has been sent."
}
List Users
Get the list of all users in the organization.
OAuth Scope : ZohoInvoice.settings.READ

Query Parameters
filter_by
Criteria used to filter
sort_column
Sort users. Allowed Values: name, email, user_role and status
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/users \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "users": [
        {
            "user_id": "982000000554041",
            "role_id": "982000000006005",
            "name": "David Sujin",
            "email": "test@zylker.org",
            "user_role": "admin",
            "status": "active",
            "is_current_user": true,
            "photo_url": "https://contacts.zoho.com/file?ID=d27344a22bad8bb83a03722b4aa5bc6967c3135f24307fe40db8572782432fd6aae0110f8bb9c4c79e8e0f0cca5904aecfacbf079f13b48c295bacc89ae91fca&fs=thumb",
            "is_customer_segmented": false,
            "is_vendor_segmented": false,
            "user_type": "zoho"
        },
        {...},
        {...}
    ]
}
Update a user
Update the details of a user.
OAuth Scope : ZohoInvoice.settings.UPDATE

Arguments
name
string
(Required)
name of the user
email
string
(Required)
email address of the user
user_role
string
The role of the user. Admin, Timesheet User etc.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/users/982000000554041 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "name": "David Sujin",
    "email": "test@zylker.org",
    "user_role": "admin"
}
Response Example

{
    "code": 0,
    "message": "The user information has been updated."
}
Get a user
Get the details of a user.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/users/982000000554041 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "user": {
        "user_id": "982000000554041",
        "name": "David Sujin",
        "email_ids": [
            {
                "email": "test@zylker.org",
                "is_selected": true
            }
        ],
        "status": "active",
        "user_role": "admin",
        "user_type": "zoho",
        "role_id": "982000000006005",
        "photo_url": "https://contacts.zoho.com/file?ID=d27344a22bad8bb83a03722b4aa5bc6967c3135f24307fe40db8572782432fd6aae0110f8bb9c4c79e8e0f0cca5904aecfacbf079f13b48c295bacc89ae91fca&fs=thumb",
        "is_employee": true,
        "created_time": "2016-06-05T02:30:08-0700",
        "custom_fields": ""
    }
}
Delete a user
Delete a user associated to the organization.
OAuth Scope : ZohoInvoice.settings.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/users/982000000554041 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The user has been removed from your organization."
}
Get current user
Get the details of the current user.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/users/me \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "user": {
        "user_id": "982000000554041",
        "name": "David Sujin",
        "email_ids": [
            {
                "email": "test@zylker.org",
                "is_selected": true
            }
        ],
        "status": "active",
        "user_role": "admin",
        "user_type": "zoho",
        "role_id": "982000000006005",
        "photo_url": "https://contacts.zoho.com/file?ID=d27344a22bad8bb83a03722b4aa5bc6967c3135f24307fe40db8572782432fd6aae0110f8bb9c4c79e8e0f0cca5904aecfacbf079f13b48c295bacc89ae91fca&fs=thumb",
        "is_employee": true,
        "created_time": "2016-06-05T02:30:08-0700",
        "custom_fields": ""
    }
}
Invite a user
Send invitation email to a person, you wish to add as a user to your organisation. For example- an accountant.
OAuth Scope : ZohoInvoice.settings.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/users/982000000554041/invite \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Your invitation has been sent."
}
Mark user as active
Mark an inactive user as active.
OAuth Scope : ZohoInvoice.settings.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/users/982000000554041/active \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The user has been marked as active."
}
Mark user as inactive
Mark an active user as inactive.
OAuth Scope : ZohoInvoice.settings.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/users/982000000554041/inactive \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The user has been marked as inactive."
}



Taxes
Taxes are collected by the government to manage state expenses. A company and an individual must pay multiple taxes and disclose the income details.

End Points
POST  
/settings/taxes
GET   
/settings/taxes
PUT   
/settings/taxes/{tax_id}
GET   
/settings/taxes/{tax_id}
DELETE
/settings/taxes/{tax_id}
PUT   
/settings/taxgroups/{tax_group_id}
GET   
/settings/taxgroups/{tax_group_id}
DELETE
/settings/taxgroups/{tax_group_id}
POST  
/settings/taxgroups
POST  
/settings/taxexemptions
GET   
/settings/taxexemptions
PUT   
/settings/taxexemptions/{tax_exemption_id}
DELETE
/settings/taxexemptions/{tax_exemption_id}
POST  
/settings/taxauthorities
GET   
/settings/taxauthorities
PUT   
/settings/taxauthorities/{tax_authority_id}
DELETE
/settings/taxauthorities/{tax_authority_id}
Attribute
tax_id
string
Unique ID of the tax
tax_name
string
Name of the tax to be created.
tax_percentage
double
Number of percentage taxable.
tax_type
string
Type to determine whether it is a simple or compound tax. Allowed Values: tax and compound_tax
tax_authority_id
string
tax_authority_name
string
🇺🇸 , 🇨🇦 only
Unique name for the Tax Authority.
is_value_added
boolean
to check if tax value os added
tax_specific_type
string
🇮🇳 , 🇲🇽 only
Type of Tax For Indian Edition. Allowed Values : igst ,cgst ,sgst ,nil, cess .
Type of Tax for Mexico Edition. Allowed Values : isr, iva, ieps.
tax_factor
string
🇲🇽 only
Type of Tax Factor. Allowed values: rate, share
tax_account_id
string
🇲🇽 only
ID of the tax account, in case of withholding tax.
purchase_tax_account_id
string
🇲🇽 only
ID of the tax account, in case of withholding tax.
Example

{
    "tax_id": "982000000566009",
    "tax_name": "Sales Group",
    "tax_percentage": 10.5,
    "tax_type": "tax",
    "tax_authority_id": "982000000954211",
    "tax_authority_name": "Canada Revenue Agency",
    "is_value_added": false,
    "tax_specific_type": "string",
    "tax_factor": "rate",
    "tax_account_id": "132086000000107333",
    "purchase_tax_account_id": "132086000000107337"
}
Create a tax
Create a tax which can be associated with an item.
OAuth Scope : ZohoInvoice.settings.CREATE

Arguments
tax_name
string
Name of the tax to be created.
tax_percentage
double
Number of percentage taxable.
tax_type
string
Type to determine whether it is a simple or compound tax. Allowed Values: tax and compound_tax
tax_authority_id
string
country_code
string
🇬🇧 only
Two letter country code for the EU country to which the tax belongs.
tax_specific_type
string
🇮🇳 , 🇲🇽 only
Type of Tax For Indian Edition. Allowed Values : igst ,cgst ,sgst ,nil, cess .
Type of Tax for Mexico Edition. Allowed Values : isr, iva, ieps.
tax_factor
string
🇲🇽 only
Type of Tax Factor. Allowed values: rate, share
tax_account_id
string
🇲🇽 only
ID of the tax account, in case of withholding tax.
purchase_tax_account_id
string
🇲🇽 only
ID of the tax account, in case of withholding tax.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/settings/taxes \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "tax_name": "Sales Group",
    "tax_percentage": 10.5,
    "tax_type": "tax",
    "tax_authority_id": "982000000954211",
    "country_code": "UK",
    "tax_specific_type": "string",
    "tax_factor": "rate",
    "tax_account_id": "132086000000107333",
    "purchase_tax_account_id": "132086000000107337"
}
Response Example

{
    "code": 0,
    "message": "The tax has been added.",
    "tax": {
        "tax_id": "982000000566009",
        "tax_name": "Sales Group",
        "tax_percentage": 10.5,
        "tax_type": "tax",
        "tax_authority_id": "982000000954211",
        "tax_authority_name": "Canada Revenue Agency",
        "is_value_added": false,
        "tax_specific_type": "string",
        "tax_factor": "rate",
        "tax_account_id": "132086000000107333",
        "purchase_tax_account_id": "132086000000107337"
    }
}
List taxes
List of simple and compound taxes with pagination.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/settings/taxes \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "taxes": [
        {
            "tax_id": "982000000566009",
            "tax_name": "Sales Group",
            "tax_percentage": 10.5,
            "tax_type": "tax",
            "tax_authority_id": "982000000954211",
            "tax_authority_name": "Canada Revenue Agency",
            "is_value_added": false,
            "is_default_tax": true,
            "is_editable": true
        },
        {...},
        {...}
    ]
}
Update a tax
Update the details of a simple or compound tax.
OAuth Scope : ZohoInvoice.settings.UPDATE

Arguments
tax_name
string
Name of the tax to be created.
tax_percentage
double
Number of percentage taxable.
tax_type
string
Type to determine whether it is a simple or compound tax. Allowed Values: tax and compound_tax
tax_authority_id
string
country_code
string
🇬🇧 only
Two letter country code for the EU country to which the tax belongs.
tax_specific_type
string
🇮🇳 , 🇲🇽 only
Type of Tax For Indian Edition. Allowed Values : igst ,cgst ,sgst ,nil, cess .
Type of Tax for Mexico Edition. Allowed Values : isr, iva, ieps.
tax_factor
string
🇲🇽 only
Type of Tax Factor. Allowed values: rate, share
tax_account_id
string
🇲🇽 only
ID of the tax account, in case of withholding tax.
purchase_tax_account_id
string
🇲🇽 only
ID of the tax account, in case of withholding tax.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/settings/taxes/982000000566009 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "tax_name": "Sales Group",
    "tax_percentage": 10.5,
    "tax_type": "tax",
    "tax_authority_id": "982000000954211",
    "country_code": "UK",
    "tax_specific_type": "string",
    "tax_factor": "rate",
    "tax_account_id": "132086000000107333",
    "purchase_tax_account_id": "132086000000107337"
}
Response Example

{
    "code": 0,
    "message": "Tax information has been saved.",
    "tax": {
        "tax_id": "982000000566009",
        "tax_name": "Sales Group",
        "tax_percentage": 10.5,
        "tax_type": "tax",
        "tax_authority_id": "982000000954211",
        "tax_authority_name": "Canada Revenue Agency",
        "is_value_added": false,
        "tax_specific_type": "string",
        "tax_factor": "rate",
        "tax_account_id": "132086000000107333",
        "purchase_tax_account_id": "132086000000107337"
    }
}
Get a tax
Get the details of a simple or compound tax.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/settings/taxes/982000000566009 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "tax": {
        "tax_id": "982000000566009",
        "tax_name": "Sales Group",
        "tax_percentage": 10.5,
        "tax_type": "tax",
        "tax_authority_id": "982000000954211",
        "tax_authority_name": "Canada Revenue Agency",
        "is_value_added": false,
        "tax_specific_type": "string",
        "tax_factor": "rate",
        "tax_account_id": "132086000000107333",
        "purchase_tax_account_id": "132086000000107337"
    }
}
Delete a tax
Delete a simple or compound tax.
OAuth Scope : ZohoInvoice.settings.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/settings/taxes/982000000566009 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The record has been deleted."
}
Update a tax group
Update the details of the tax group.
OAuth Scope : ZohoInvoice.settings.UPDATE

Arguments
tax_group_name
string
Name of the tax group to be created.
taxes
string
List of tax IDs that are to be associated to the tax group.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/settings/taxgroups/982000000566009 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "tax_group_name": "Sales Group",
    "taxes": "VAT"
}
Response Example

{
    "code": 0,
    "message": "success",
    "tax_group": {
        "tax_group_id": "982000000566009",
        "tax_group_name": "Sales Group",
        "tax_group_percentage": 10.5,
        "taxes": [
            {
                "tax_id": "982000000566009",
                "tax_name": "Sales Group",
                "tax_percentage": 10.5,
                "tax_type": "tax"
            }
        ]
    }
}
Get a tax group
Get the details of a tax group.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/settings/taxgroups/982000000566009 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "tax_group": {
        "tax_group_id": "982000000566009",
        "tax_group_name": "Sales Group",
        "tax_group_percentage": 10.5,
        "taxes": [
            {
                "tax_id": "982000000566009",
                "tax_name": "Sales Group",
                "tax_percentage": 10.5,
                "tax_type": "tax"
            }
        ]
    }
}
Delete a tax group
Delete a tax group. Tax group that is associated to transactions cannot be deleted.
OAuth Scope : ZohoInvoice.settings.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/settings/taxgroups/982000000566009 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The tax group has been deleted."
}
Create a tax group
Create a tax group associating multiple taxes.
OAuth Scope : ZohoInvoice.settings.CREATE

Arguments
tax_group_name
string
Name of the tax group to be created.
taxes
string
List of tax IDs that are to be associated to the tax group.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/settings/taxgroups \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "tax_group_name": "Sales Group",
    "taxes": "VAT"
}
Response Example

{
    "code": 0,
    "message": "success",
    "tax_group": {
        "tax_group_id": "982000000566009",
        "tax_group_name": "Sales Group",
        "tax_group_percentage": 10.5,
        "taxes": [
            {
                "tax_id": "982000000566009",
                "tax_name": "Sales Group",
                "tax_percentage": 10.5,
                "tax_type": "tax"
            }
        ]
    }
}
Create Tax Exemption.
Create a Tax Exemption.
OAuth Scope : ZohoInvoice.settings.CREATE

Arguments
tax_exemption_code
string
(Required)
🇮🇳 , 🇺🇸 , 🇨🇦 only
Unique code of the tax exemption.
description
string
Description for the tax exemption.
type
string
(Required)
Type of tax exemption. Allowed Values customer and item
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/settings/taxexemptions \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "tax_exemption_code": "Non-Profit",
    "description": "It is an Non profit organization",
    "type": "customer"
}
Response Example

{
    "code": 0,
    "message": "Tax Exemption has been added.",
    "tax_exemption": {
        "tax_exemption_id": "982000000577199",
        "tax_exemption_code": "Non-Profit",
        "description": "It is an Non profit organization",
        "type": "customer",
        "type_formatted": "Customer"
    }
}
List Tax Exemptions
List all Tax Exemptions.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/settings/taxexemptions \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "tax_exemptions": [
        {
            "tax_exemption_id": "982000000577199",
            "tax_exemption_code": "Non-Profit",
            "description": "It is an Non profit organization",
            "type": "customer",
            "type_formatted": "Customer"
        },
        {...},
        {...}
    ]
}
Update Tax Exemption.
Update an existing Tax Exemption.
OAuth Scope : ZohoInvoice.settings.UPDATE

Arguments
tax_exemption_code
string
(Required)
🇮🇳 , 🇺🇸 , 🇨🇦 only
Unique code of the tax exemption.
description
string
Description for the tax exemption.
type
string
(Required)
Type of tax exemption. Allowed Values customer and item
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/settings/taxexemptions/982000000577199 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "tax_exemption_code": "Non-Profit",
    "description": "It is an Non profit organization",
    "type": "customer"
}
Response Example

{
    "code": 0,
    "message": "Tax Exemption information has been updated.",
    "tax_exemption": {
        "tax_exemption_id": "982000000577199",
        "tax_exemption_code": "Non-Profit",
        "description": "It is an Non profit organization",
        "type": "customer",
        "type_formatted": "Customer"
    }
}
Delete Tax Exemption
Delete a Tax Exemption.
OAuth Scope : ZohoInvoice.settings.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/settings/taxexemptions/982000000577199 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Tax Exemption has been deleted."
}
Create Tax Authority.
Create a Tax Authority.
OAuth Scope : ZohoInvoice.settings.CREATE

Arguments
tax_authority_name
string
(Required)
🇺🇸 , 🇨🇦 only
Unique name for the Tax Authority.
registration_number_label
string
Label for the Registration Number.
registration_number
string
Registration number of the Tax Authority.
description
string
Description for the Tax Authority.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/settings/taxauthorities \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "tax_authority_name": "Canada Revenue Agency",
    "registration_number_label": "Canada Tax Reg.No",
    "registration_number": "123456",
    "description": "Canada Tax Authority"
}
Response Example

{
    "code": 0,
    "message": "Tax Authority has been added.",
    "tax_authority": {
        "tax_authority_id": "982000000954211",
        "tax_authority_name": "Canada Revenue Agency",
        "description": "Canada Tax Authority",
        "registration_number": "123456",
        "registration_number_label": "Canada Tax Reg.No"
    }
}
List Tax Authorities
List all Tax Authorities.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/settings/taxauthorities \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "tax_authorities": [
        {
            "tax_authority_id": "982000000954211",
            "tax_authority_name": "Canada Revenue Agency",
            "description": "Canada Tax Authority",
            "registration_number": "123456",
            "registration_number_label": "Canada Tax Reg.No"
        },
        {...},
        {...}
    ]
}
Update Tax Authority.
Update an existing Tax Authority.
OAuth Scope : ZohoInvoice.settings.UPDATE

Arguments
tax_authority_name
string
(Required)
🇺🇸 , 🇨🇦 only
Unique name for the Tax Authority.
registration_number_label
string
Label for the Registration Number.
registration_number
string
Registration number of the Tax Authority.
description
string
Description for the Tax Authority.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/settings/taxauthorities/982000000954211 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "tax_authority_name": "Canada Revenue Agency",
    "registration_number_label": "Canada Tax Reg.No",
    "registration_number": "123456",
    "description": "Canada Tax Authority"
}
Response Example

{
    "code": 0,
    "message": "Tax Authority information has been updated.",
    "tax_authority": {
        "tax_authority_id": "982000000954211",
        "tax_authority_name": "Canada Revenue Agency",
        "description": "Canada Tax Authority",
        "registration_number": "123456",
        "registration_number_label": "Canada Tax Reg.No"
    }
}
Delete Tax Authority
Delete a Tax Authority.
OAuth Scope : ZohoInvoice.settings.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/settings/taxauthorities/982000000954211 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Tax Authority has been deleted."
}



Expense Category
Expense Category represents a group of cumuative expense. For example, Rental Expense, Office Supplies etc.

End Points
POST  
/expensecategories
GET   
/expensecategories
PUT   
/expensecategories/{category_id}
GET   
/expensecategories/{category_id}
DELETE
/expensecategories/{category_id}
POST  
/expensecategories/{categoryid}/active
POST  
/expensecategories/{categoryid}/inactive
Attribute
account_id
string
ID of the account
account_name
string
Account name of the expenses.
description
string
Describe the expense created.
status
string
Search expenses by expense status. Allowed Values active, stopped and expired
created_time
string
date when expense was created
last_modified_time
string
Date when the expense was last edited
Example

{
    "account_id": 982000000561057,
    "account_name": "Rent",
    "description": " ",
    "status": "active",
    "created_time": "2013-11-18T02:17:40-0800",
    "last_modified_time": "2013-12-18T02:17:40-0800"
}
Create an expense category
Create an expense category.
OAuth Scope : ZohoInvoice.settings.CREATE

Arguments
account_name
string
Account name of the expenses.
description
string
Describe the expense created.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/expensecategories \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "account_name": "Rent",
    "description": " "
}
Response Example

{
    "code": 0,
    "message": "The expense category has been created.",
    "expense_category": {
        "account_id": 982000000561057,
        "account_name": "Rent",
        "description": " ",
        "status": "active",
        "created_time": "2013-11-18T02:17:40-0800",
        "last_modified_time": "2013-12-18T02:17:40-0800"
    }
}
List expense categories
List expense categories along with pagination.
OAuth Scope : ZohoInvoice.settings.READ

Query Parameters
filter_by
Filter expense categories by status. Allowed Values: ExpenseCategories.Active, ExpenseCategories.Inactive and ExpenseCategories.All
sort_column
Sort expenses. Allowed Values account_name
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/expensecategories \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "expense_accounts": [
        {
            "account_id": 982000000561057,
            "account_name": "Rent",
            "description": " ",
            "status": "active"
        },
        {...},
        {...}
    ]
}
Update an expense category
Update an expense category.
OAuth Scope : ZohoInvoice.settings.UPDATE

Arguments
account_name
string
Account name of the expenses.
description
string
Describe the expense created.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/expensecategories/982000000561057 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "account_name": "Rent",
    "description": " "
}
Response Example

{
    "code": 0,
    "message": "The expense category has been created.",
    "expense_category": {
        "account_id": 982000000561057,
        "account_name": "Rent",
        "description": " ",
        "status": "active",
        "created_time": "2013-11-18T02:17:40-0800",
        "last_modified_time": "2013-12-18T02:17:40-0800"
    }
}
Get an expense category
Get the details of an expense category.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/expensecategories/982000000561057 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "expense_category": {
        "account_id": 982000000561057,
        "account_name": "Rent",
        "description": " ",
        "status": "active",
        "created_time": "2013-11-18T02:17:40-0800",
        "last_modified_time": "2013-12-18T02:17:40-0800"
    }
}
Delete an expense category
Delete an existing expense category. Category which is associated with expense cannot be deleted.
OAuth Scope : ZohoInvoice.settings.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/expensecategories/982000000561057 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The expense category is deleted successfully."
}
Mark an expense category as active
Update an expense category status as active.
OAuth Scope : ZohoInvoice.settings.CREATE

Arguments
category_id
string
ID of the expense category
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/expensecategories//active \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "category_id": "982000000561057"
}
Response Example

{
    "code": 0,
    "message": "The expense is marked as active."
}
Mark an expense category as inactive
Update an expense category status as inactive.
OAuth Scope : ZohoInvoice.settings.CREATE

Arguments
category_id
string
ID of the expense category
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/expensecategories//inactive \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "category_id": "982000000561057"
}
Response Example

{
    "code": 0,
    "message": "The expense is marked as inactive."
}



Currency
A currency is a generally accepted form of money issued by the government. Each country had its own different currency.

End Points
POST  
/settings/currencies
GET   
/settings/currencies
PUT   
/settings/currencies/{currency_id}
GET   
/settings/currencies/{currency_id}
DELETE
/settings/currencies/{currency_id}
POST  
/settings/currencies/{currency_id}/exchangerates
GET   
/settings/currencies/{currency_id}/exchangerates
PUT   
/settings/currencies/{currency_id}/exchangerates/{exchange_rate_id}
GET   
/settings/currencies/{currency_id}/exchangerates/{exchange_rate_id}
DELETE
/settings/currencies/{currency_id}/exchangerates/{exchange_rate_id}
Attribute
currency_id
string
A unique ID for the currency.
currency_code
string
A unique code for the currency. Maximum length [100]
currency_name
string
The name for the currency.
currency_symbol
string
A unique symbol for the currency. Maximum length [4]
price_precision
integer
The precision for the price in decimals
currency_format
string
The format for the currency to be displayed. Maximum length [100]
is_base_currency
boolean
If the specified currency is the base currency of the organization or not.
Example

[
    {
        "currency_id": "982000000004012",
        "currency_code": "AUD",
        "currency_name": "AUD- Australian Dollar",
        "currency_symbol": "$",
        "price_precision": 2,
        "currency_format": "1,234,567.89",
        "is_base_currency": false
    }
]
Create a Currency
Create a currency for transaction.
OAuth Scope : ZohoInvoice.settings.CREATE

Arguments
currency_code
string
(Required)
A unique code for the currency. Maximum length [100]
currency_symbol
string
(Required)
A unique symbol for the currency. Maximum length [4]
price_precision
integer
The precision for the price in decimals
currency_format
string
The format for the currency to be displayed. Maximum length [100]
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/settings/currencies \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "currency_code": "AUD",
    "currency_symbol": "$",
    "price_precision": 2,
    "currency_format": "1,234,567.89"
}
Response Example

{
    "code": 0,
    "message": "success.",
    "currency": [
        {
            "currency_id": "982000000004012",
            "currency_code": "AUD",
            "currency_name": "AUD- Australian Dollar",
            "currency_symbol": "$",
            "price_precision": 2,
            "currency_format": "1,234,567.89",
            "is_base_currency": false
        },
        {...},
        {...}
    ]
}
List Currencies
Get list of currencies configured.
OAuth Scope : ZohoInvoice.settings.READ

Query Parameters
filter_by
Filter currencies excluding base currency. Allowed Values: Currencies.ExcludeBaseCurrency
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/settings/currencies \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success.",
    "currencies": [
        {
            "currency_id": "982000000004012",
            "currency_code": "AUD",
            "currency_name": "AUD- Australian Dollar",
            "currency_symbol": "$",
            "price_precision": 2,
            "currency_format": "1,234,567.89",
            "is_base_currency": false,
            "exchange_rate": 0,
            "effective_date": "2016-06-05"
        },
        {...},
        {...}
    ]
}
Update a Currency
Update the details of a currency.
OAuth Scope : ZohoInvoice.settings.UPDATE

Arguments
currency_code
string
(Required)
Unique code representing a currency
currency_symbol
string
(Required)
A unique symbol for the currency. Maximum length [4]
price_precision
integer
The precision for the price in decimals
currency_format
string
The format for the currency to be displayed. Maximum length [100]
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/settings/currencies/982000000004012 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "currency_code": "CAD",
    "currency_symbol": "$",
    "price_precision": 2,
    "currency_format": "1,234,567.89"
}
Response Example

{
    "code": 0,
    "message": "success.",
    "currency": [
        {
            "currency_id": "982000000004006",
            "currency_code": "CAD",
            "currency_name": "CAD- Canadian Dollar",
            "currency_symbol": "$",
            "price_precision": 2,
            "currency_format": "1,234,567.89",
            "is_base_currency": false
        },
        {...},
        {...}
    ]
}
Get a Currency
Get the details of a currency.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/settings/currencies/982000000004012 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "currency": [
        {
            "currency_id": "982000000004012",
            "currency_code": "AUD",
            "currency_name": "AUD- Australian Dollar",
            "currency_symbol": "$",
            "price_precision": 2,
            "currency_format": "1,234,567.89",
            "is_base_currency": false
        },
        {...},
        {...}
    ]
}
Delete a currency
Delete a currency. Currency that is associated to any transaction cannot be deleted.
OAuth Scope : ZohoInvoice.settings.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/settings/currencies/982000000004012 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "The currency has been deleted."
}
Create an exchange rate
Create an exchange rate for the specified currency.
OAuth Scope : ZohoInvoice.settings.CREATE

Arguments
effective_date
string
Date from when the currency will be in effect.
rate
double
Rate of exchange for the currency with respect to base currency.
Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/settings/currencies/982000000004012/exchangerates \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "effective_date": "2016-06-05",
    "rate": 1.23
}
Response Example

{
    "code": 0,
    "message": "The exchange rate has been added.",
    "exchange_rate": 0
}
List exchange rates
List of exchange rates configured for the currency.
OAuth Scope : ZohoInvoice.settings.READ

Query Parameters
from_date
Returns the exchange rate details from the given date or from previous closest match in the absence of the exchange rate on the given date.
is_current_date
To return the exchange rate only if available for current date.
sort_column
Sorts the exchange rate according to this column. Allowed Values : effective_date
Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/settings/currencies/982000000004012/exchangerates \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "exchange_rates": [
        {
            "exchange_rate_id": "460000000038035",
            "currency_id": "982000000004012",
            "currency_code": "AUD",
            "effective_date": "2016-06-05",
            "rate": 1.23
        },
        {...},
        {...}
    ]
}
Update an exchange rate
Update the details of exchange rate for a currency.
OAuth Scope : ZohoInvoice.settings.UPDATE

Arguments
effective_date
string
Date from when the currency will be in effect.
rate
double
Rate of exchange for the currency with respect to base currency.
Request Example

cURL

curl --request PUT \
  --url https://www.zohoapis.com/invoice/v3/settings/currencies/982000000004012/exchangerates/460000000038035 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695' \
  --header 'content-type: application/json' \
  --data '{"field1":"value1","field2":"value2"}'
Body Parameters


{
    "effective_date": "2016-06-05",
    "rate": 1.23
}
Response Example

{
    "code": 0,
    "message": "The exchange rate has been updated."
}
Get an exchange rate.
Get the details of an exchange rate that has been asscoiated to the currency.
OAuth Scope : ZohoInvoice.settings.READ

Request Example

cURL

curl --request GET \
  --url https://www.zohoapis.com/invoice/v3/settings/currencies/982000000004012/exchangerates/460000000038035 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "exchange_rate": 0
}
Delete an exchage rate
Delete an exchange rate for the specified currency.
OAuth Scope : ZohoInvoice.settings.DELETE

Request Example

cURL

curl --request DELETE \
  --url https://www.zohoapis.com/invoice/v3/settings/currencies/982000000004012/exchangerates/460000000038035 \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "Exchange rate successfully deleted"
}



ZOHO CRM Integration
API handling for modules specific to Zoho Invoice - Zoho CRM integration.

End Points
POST  
/crm/account/{crm_account_id}/import
POST  
/crm/contact/{crm_contact_id}/import
Attribute
contact_id
string
Contact ID of the contact
Example

{
    "contact_id": 460000000026049
}
Import a customer using the CRM account ID
Zoho Invoice must be integrated with Zoho CRM using Accounts and Contacts sync or using Accounts only sync to import a customer from CRM with its CRM account ID.
Note: You can get a contact by CRM account ID by using this API Endpoint
OAuth Scope : ZohoInvoices.contacts.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/crm/account//import \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "data": {
        "contact_id": 460000000026049
    }
}
Import a customer using CRM contact ID
Zoho Invoice must be integrated with Zoho CRM using Contacts only sync to import a customer from CRM with its CRM contact ID.
Note: You can get a contact by CRM contact ID by using this API Endpoint
OAuth Scope : ZohoInvoices.contacts.CREATE

Request Example

cURL

curl --request POST \
  --url https://www.zohoapis.com/invoice/v3/crm/contact//import \
  --header 'Authorization: Zoho-oauthtoken 1000.41d9xxxxxxxxxxxxxxxxxxxxxxxxc2d1.8fccxxxxxxxxxxxxxxxxxxxxxxxx125f' \
  --header 'X-com-zoho-invoice-organizationid: 10234695'
Response Example

{
    "code": 0,
    "message": "success",
    "data": {
        "contact_id": 460000000026049
    }
}
